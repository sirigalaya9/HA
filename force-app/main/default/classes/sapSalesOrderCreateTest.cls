/* 
 * Generated by Overcast UTC 2024-03-12 10:25:26Z.
 * Changes to this class may cause incorrect behavior and will be lost if the scenario is re-activated.
 */
@istest
private class sapSalesOrderCreateTest {
    @istest
    private static void testsapSalesOrderCreate() {
        sapSalesOrderCreate actual = new sapSalesOrderCreate();
        system.assertNotEquals(null, actual.BAPI_SALESORDER_CREATEFROMDAT2);
        system.assertNotEquals(null, actual.ORDER_HEADER_IN);
        system.assertNotEquals(null, actual.ORDER_HEADER_INX);
        system.assertNotEquals(null, actual.SENDER);
        system.assertNotEquals(null, actual.LOGIC_SWITCH);
        system.assertNotEquals(null, actual.RETURN_x);
        system.assertNotEquals(null, actual.ORDER_ITEMS_IN);
        system.assertNotEquals(null, actual.ORDER_ITEMS_INX);
        system.assertNotEquals(null, actual.ORDER_PARTNERS);
        system.assertNotEquals(null, actual.ORDER_SCHEDULES_IN);
        system.assertNotEquals(null, actual.ORDER_SCHEDULES_INX);
        system.assertNotEquals(null, actual.ORDER_CONDITIONS_IN);
        system.assertNotEquals(null, actual.ORDER_CONDITIONS_INX);
        system.assertNotEquals(null, actual.ORDER_CFGS_REF);
        system.assertNotEquals(null, actual.ORDER_CFGS_INST);
        system.assertNotEquals(null, actual.ORDER_CFGS_PART_OF);
        system.assertNotEquals(null, actual.ORDER_CFGS_VALUE);
        system.assertNotEquals(null, actual.ORDER_CFGS_BLOB);
        system.assertNotEquals(null, actual.ORDER_CFGS_VK);
        system.assertNotEquals(null, actual.ORDER_CFGS_REFINST);
        system.assertNotEquals(null, actual.ORDER_CCARD);
        system.assertNotEquals(null, actual.ORDER_TEXT);
        system.assertNotEquals(null, actual.ORDER_KEYS);
        system.assertNotEquals(null, actual.EXTENSIONIN);
        system.assertNotEquals(null, actual.PARTNERADDRESSES);
        system.assertNotEquals(null, actual.EXTENSIONEX);
    }

    @istest
    private static void testBAPI_SALESORDER_CREATEFROMDAT2() {
        sapSalesOrderCreate.BAPI_SALESORDER_CREATEFROMDAT2 actual = new sapSalesOrderCreate.BAPI_SALESORDER_CREATEFROMDAT2();

        actual.SALESDOCUMENTIN = 'a';
        actual.BINARY_RELATIONSHIPTYPE = 'a';
        actual.INT_NUMBER_ASSIGNMENT = 'a';
        actual.BEHAVE_WHEN_ERROR = 'a';
        actual.TESTRUN = 'a';
        actual.CONVERT = 'a';
        actual.SALESDOCUMENT = 'a';
        system.assertEquals('a', actual.SALESDOCUMENTIN);
        system.assertEquals('a', actual.BINARY_RELATIONSHIPTYPE);
        system.assertEquals('a', actual.INT_NUMBER_ASSIGNMENT);
        system.assertEquals('a', actual.BEHAVE_WHEN_ERROR);
        system.assertEquals('a', actual.TESTRUN);
        system.assertEquals('a', actual.CONVERT);
        system.assertEquals('a', actual.SALESDOCUMENT);
    }
    @istest
    private static void testORDER_HEADER_IN() {
        sapSalesOrderCreate.ORDER_HEADER_IN actual = new sapSalesOrderCreate.ORDER_HEADER_IN();

        actual.REFOBJTYPE = 'a';
        actual.REFOBJKEY = 'a';
        actual.REFDOCTYPE = 'a';
        actual.DOC_TYPE = 'a';
        actual.COLLECT_NO = 'a';
        actual.SALES_ORG = 'a';
        actual.DISTR_CHAN = 'a';
        actual.DIVISION = 'a';
        actual.SALES_GRP = 'a';
        actual.SALES_OFF = 'a';
        actual.REQ_DATE_H = Date.newInstance(2000,1,1);
        actual.DATE_TYPE = 'a';
        actual.PURCH_DATE = Date.newInstance(2000,1,1);
        actual.PO_METHOD = 'a';
        actual.PO_SUPPLEM = 'a';
        actual.REF_1 = 'a';
        actual.NAME = 'a';
        actual.TELEPHONE = 'a';
        actual.PRICE_GRP = 'a';
        actual.CUST_GROUP = 'a';
        actual.SALES_DIST = 'a';
        actual.PRICE_LIST = 'a';
        actual.INCOTERMS1 = 'a';
        actual.INCOTERMS2 = 'a';
        actual.PMNTTRMS = 'a';
        actual.DLV_BLOCK = 'a';
        actual.BILL_BLOCK = 'a';
        actual.ORD_REASON = 'a';
        actual.COMPL_DLV = 'a';
        actual.PRICE_DATE = Date.newInstance(2000,1,1);
        actual.QT_VALID_F = Date.newInstance(2000,1,1);
        actual.QT_VALID_T = Date.newInstance(2000,1,1);
        actual.CT_VALID_F = Date.newInstance(2000,1,1);
        actual.CT_VALID_T = Date.newInstance(2000,1,1);
        actual.CUST_GRP1 = 'a';
        actual.CUST_GRP2 = 'a';
        actual.CUST_GRP3 = 'a';
        actual.CUST_GRP4 = 'a';
        actual.CUST_GRP5 = 'a';
        actual.PURCH_NO_C = 'a';
        actual.PURCH_NO_S = 'a';
        actual.PO_DAT_S = Date.newInstance(2000,1,1);
        actual.PO_METH_S = 'a';
        actual.REF_1_S = 'a';
        actual.SD_DOC_CAT = 'a';
        actual.DOC_DATE = Date.newInstance(2000,1,1);
        actual.WAR_DATE = Date.newInstance(2000,1,1);
        actual.SHIP_COND = 'a';
        actual.PP_SEARCH = 'a';
        actual.DUN_COUNT = 0;
        actual.DUN_DATE = Date.newInstance(2000,1,1);
        actual.DLVSCHDUSE = 'a';
        actual.PLDLVSTYP = 'a';
        actual.REF_DOC = 'a';
        actual.COMP_CDE_B = 'a';
        actual.ALTTAX_CLS = 'a';
        actual.TAX_CLASS2 = 'a';
        actual.TAX_CLASS3 = 'a';
        actual.TAX_CLASS4 = 'a';
        actual.TAX_CLASS5 = 'a';
        actual.TAX_CLASS6 = 'a';
        actual.TAX_CLASS7 = 'a';
        actual.TAX_CLASS8 = 'a';
        actual.TAX_CLASS9 = 'a';
        actual.REF_DOC_L = 'a';
        actual.ASS_NUMBER = 'a';
        actual.REFDOC_CAT = 'a';
        actual.ORDCOMB_IN = 'a';
        actual.BILL_SCHED = 'a';
        actual.INVO_SCHED = 'a';
        actual.MN_INVOICE = 'a';
        actual.EXRATE_FI = 0;
        actual.ADD_VAL_DY = 'a';
        actual.FIX_VAL_DY = Date.newInstance(2000,1,1);
        actual.PYMT_METH = 'a';
        actual.ACCNT_ASGN = 'a';
        actual.EXCHG_RATE = 0;
        actual.BILL_DATE = Date.newInstance(2000,1,1);
        actual.SERV_DATE = Date.newInstance(2000,1,1);
        actual.DUNN_KEY = 'a';
        actual.DUNN_BLOCK = 'a';
        actual.PMTGAR_PRO = 'a';
        actual.DEPARTM_NO = 'a';
        actual.REC_POINT = 'a';
        actual.DOC_NUM_FI = 'a';
        actual.CSTCNDGRP1 = 'a';
        actual.CSTCNDGRP2 = 'a';
        actual.CSTCNDGRP3 = 'a';
        actual.CSTCNDGRP4 = 'a';
        actual.CSTCNDGRP5 = 'a';
        actual.DLV_TIME = 'a';
        actual.CURRENCY_x = 'a';
        actual.CURR_ISO = 'a';
        actual.CREATED_BY = 'a';
        actual.TAXDEP_CTY = 'a';
        actual.TAXDST_CTY = 'a';
        actual.EUTRI_DEAL = 'a';
        actual.MAST_CONTR = 'a';
        actual.REF_PROC = 'a';
        actual.CHKPRTAUTH = 'a';
        actual.CMLQTY_DAT = Date.newInstance(2000,1,1);
        actual.VERSION = 'a';
        actual.NOTIF_NO = 'a';
        actual.WBS_ELEM = 'a';
        actual.EXCH_RATE_FI_V = 0;
        actual.EXCHG_RATE_V = 0;
        actual.FKK_CONACCT = 'a';
        actual.CAMPAIGN = null;
        actual.DOC_CLASS = 'a';
        actual.H_CURR = 'a';
        actual.H_CURR_ISO = 'a';
        actual.SHIP_TYPE = 'a';
        actual.S_PROC_IND = 'a';
        actual.REF_DOC_L_LONG = 'a';
        actual.LINE_TIME = 'a';
        actual.CALC_MOTIVE = 'a';
        actual.PSM_PSTNG_DATE = Date.newInstance(2000,1,1);
        actual.TREASURY_ACC_SYMBOL = 'a';
        actual.BUSINESS_EVENT_TCODE = 'a';
        actual.MODIFICATION_ALLOWED = 'a';
        actual.CANCELLATION_ALLOWED = 'a';
        actual.PAYMENT_METHODS = 'a';
        actual.BUSINESS_PARTNER_NO = 'a';
        actual.REPORTING_FREQ = 'a';
        actual.SEPA_MANDATE_ID = 'a';
        actual.SD_DOC_CAT_LONG = 'a';
        actual.REFDOC_CAT_LONG = 'a';
        actual.INCOTERMSV = 'a';
        actual.INCOTERMS2L = 'a';
        actual.INCOTERMS3L = 'a';
        actual.x_FISSAN_PRJNR = 'a';
        actual.x_FISSAN_PRBEZ = 'a';
        actual.x_FISSAN_PBEZ2 = 'a';
        actual.x_FISSAN_WVDAT = Date.newInstance(2000,1,1);
        actual.x_FISSAN_SUBMISD = Date.newInstance(2000,1,1);
        actual.x_FISSAN_WUNSCHD = Date.newInstance(2000,1,1);
        actual.x_FISSAN_VERGDAT = Date.newInstance(2000,1,1);
        actual.x_FISSAN_AUSDAT = Date.newInstance(2000,1,1);
        actual.x_FISSAN_BAUDAT = Date.newInstance(2000,1,1);
        actual.x_FISSAN_MONTDAT = Date.newInstance(2000,1,1);
        actual.x_FISSAN_IDAT_PL = Date.newInstance(2000,1,1);
        actual.x_FISSAN_IDAT_IST = Date.newInstance(2000,1,1);
        actual.x_FISSAN_PROJPOS = 'a';
        actual.x_FISSAN_PROJUPOS = 'a';
        actual.x_FISSAN_PRBEZG = 'a';
        actual.x_FISSAN_PBEZ2G = 'a';
        actual.ZZHWW_IKUN = 'a';
        system.assertEquals('a', actual.REFOBJTYPE);
        system.assertEquals('a', actual.REFOBJKEY);
        system.assertEquals('a', actual.REFDOCTYPE);
        system.assertEquals('a', actual.DOC_TYPE);
        system.assertEquals('a', actual.COLLECT_NO);
        system.assertEquals('a', actual.SALES_ORG);
        system.assertEquals('a', actual.DISTR_CHAN);
        system.assertEquals('a', actual.DIVISION);
        system.assertEquals('a', actual.SALES_GRP);
        system.assertEquals('a', actual.SALES_OFF);
        system.assertEquals(Date.newInstance(2000,1,1), actual.REQ_DATE_H);
        system.assertEquals('a', actual.DATE_TYPE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PURCH_DATE);
        system.assertEquals('a', actual.PO_METHOD);
        system.assertEquals('a', actual.PO_SUPPLEM);
        system.assertEquals('a', actual.REF_1);
        system.assertEquals('a', actual.NAME);
        system.assertEquals('a', actual.TELEPHONE);
        system.assertEquals('a', actual.PRICE_GRP);
        system.assertEquals('a', actual.CUST_GROUP);
        system.assertEquals('a', actual.SALES_DIST);
        system.assertEquals('a', actual.PRICE_LIST);
        system.assertEquals('a', actual.INCOTERMS1);
        system.assertEquals('a', actual.INCOTERMS2);
        system.assertEquals('a', actual.PMNTTRMS);
        system.assertEquals('a', actual.DLV_BLOCK);
        system.assertEquals('a', actual.BILL_BLOCK);
        system.assertEquals('a', actual.ORD_REASON);
        system.assertEquals('a', actual.COMPL_DLV);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PRICE_DATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.QT_VALID_F);
        system.assertEquals(Date.newInstance(2000,1,1), actual.QT_VALID_T);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CT_VALID_F);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CT_VALID_T);
        system.assertEquals('a', actual.CUST_GRP1);
        system.assertEquals('a', actual.CUST_GRP2);
        system.assertEquals('a', actual.CUST_GRP3);
        system.assertEquals('a', actual.CUST_GRP4);
        system.assertEquals('a', actual.CUST_GRP5);
        system.assertEquals('a', actual.PURCH_NO_C);
        system.assertEquals('a', actual.PURCH_NO_S);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PO_DAT_S);
        system.assertEquals('a', actual.PO_METH_S);
        system.assertEquals('a', actual.REF_1_S);
        system.assertEquals('a', actual.SD_DOC_CAT);
        system.assertEquals(Date.newInstance(2000,1,1), actual.DOC_DATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.WAR_DATE);
        system.assertEquals('a', actual.SHIP_COND);
        system.assertEquals('a', actual.PP_SEARCH);
        system.assertEquals(0, actual.DUN_COUNT);
        system.assertEquals(Date.newInstance(2000,1,1), actual.DUN_DATE);
        system.assertEquals('a', actual.DLVSCHDUSE);
        system.assertEquals('a', actual.PLDLVSTYP);
        system.assertEquals('a', actual.REF_DOC);
        system.assertEquals('a', actual.COMP_CDE_B);
        system.assertEquals('a', actual.ALTTAX_CLS);
        system.assertEquals('a', actual.TAX_CLASS2);
        system.assertEquals('a', actual.TAX_CLASS3);
        system.assertEquals('a', actual.TAX_CLASS4);
        system.assertEquals('a', actual.TAX_CLASS5);
        system.assertEquals('a', actual.TAX_CLASS6);
        system.assertEquals('a', actual.TAX_CLASS7);
        system.assertEquals('a', actual.TAX_CLASS8);
        system.assertEquals('a', actual.TAX_CLASS9);
        system.assertEquals('a', actual.REF_DOC_L);
        system.assertEquals('a', actual.ASS_NUMBER);
        system.assertEquals('a', actual.REFDOC_CAT);
        system.assertEquals('a', actual.ORDCOMB_IN);
        system.assertEquals('a', actual.BILL_SCHED);
        system.assertEquals('a', actual.INVO_SCHED);
        system.assertEquals('a', actual.MN_INVOICE);
        system.assertEquals(0, actual.EXRATE_FI);
        system.assertEquals('a', actual.ADD_VAL_DY);
        system.assertEquals(Date.newInstance(2000,1,1), actual.FIX_VAL_DY);
        system.assertEquals('a', actual.PYMT_METH);
        system.assertEquals('a', actual.ACCNT_ASGN);
        system.assertEquals(0, actual.EXCHG_RATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.BILL_DATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.SERV_DATE);
        system.assertEquals('a', actual.DUNN_KEY);
        system.assertEquals('a', actual.DUNN_BLOCK);
        system.assertEquals('a', actual.PMTGAR_PRO);
        system.assertEquals('a', actual.DEPARTM_NO);
        system.assertEquals('a', actual.REC_POINT);
        system.assertEquals('a', actual.DOC_NUM_FI);
        system.assertEquals('a', actual.CSTCNDGRP1);
        system.assertEquals('a', actual.CSTCNDGRP2);
        system.assertEquals('a', actual.CSTCNDGRP3);
        system.assertEquals('a', actual.CSTCNDGRP4);
        system.assertEquals('a', actual.CSTCNDGRP5);
        system.assertEquals('a', actual.DLV_TIME);
        system.assertEquals('a', actual.CURRENCY_x);
        system.assertEquals('a', actual.CURR_ISO);
        system.assertEquals('a', actual.CREATED_BY);
        system.assertEquals('a', actual.TAXDEP_CTY);
        system.assertEquals('a', actual.TAXDST_CTY);
        system.assertEquals('a', actual.EUTRI_DEAL);
        system.assertEquals('a', actual.MAST_CONTR);
        system.assertEquals('a', actual.REF_PROC);
        system.assertEquals('a', actual.CHKPRTAUTH);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CMLQTY_DAT);
        system.assertEquals('a', actual.VERSION);
        system.assertEquals('a', actual.NOTIF_NO);
        system.assertEquals('a', actual.WBS_ELEM);
        system.assertEquals(0, actual.EXCH_RATE_FI_V);
        system.assertEquals(0, actual.EXCHG_RATE_V);
        system.assertEquals('a', actual.FKK_CONACCT);
        system.assertEquals(null, actual.CAMPAIGN);
        system.assertEquals('a', actual.DOC_CLASS);
        system.assertEquals('a', actual.H_CURR);
        system.assertEquals('a', actual.H_CURR_ISO);
        system.assertEquals('a', actual.SHIP_TYPE);
        system.assertEquals('a', actual.S_PROC_IND);
        system.assertEquals('a', actual.REF_DOC_L_LONG);
        system.assertEquals('a', actual.LINE_TIME);
        system.assertEquals('a', actual.CALC_MOTIVE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PSM_PSTNG_DATE);
        system.assertEquals('a', actual.TREASURY_ACC_SYMBOL);
        system.assertEquals('a', actual.BUSINESS_EVENT_TCODE);
        system.assertEquals('a', actual.MODIFICATION_ALLOWED);
        system.assertEquals('a', actual.CANCELLATION_ALLOWED);
        system.assertEquals('a', actual.PAYMENT_METHODS);
        system.assertEquals('a', actual.BUSINESS_PARTNER_NO);
        system.assertEquals('a', actual.REPORTING_FREQ);
        system.assertEquals('a', actual.SEPA_MANDATE_ID);
        system.assertEquals('a', actual.SD_DOC_CAT_LONG);
        system.assertEquals('a', actual.REFDOC_CAT_LONG);
        system.assertEquals('a', actual.INCOTERMSV);
        system.assertEquals('a', actual.INCOTERMS2L);
        system.assertEquals('a', actual.INCOTERMS3L);
        system.assertEquals('a', actual.x_FISSAN_PRJNR);
        system.assertEquals('a', actual.x_FISSAN_PRBEZ);
        system.assertEquals('a', actual.x_FISSAN_PBEZ2);
        system.assertEquals(Date.newInstance(2000,1,1), actual.x_FISSAN_WVDAT);
        system.assertEquals(Date.newInstance(2000,1,1), actual.x_FISSAN_SUBMISD);
        system.assertEquals(Date.newInstance(2000,1,1), actual.x_FISSAN_WUNSCHD);
        system.assertEquals(Date.newInstance(2000,1,1), actual.x_FISSAN_VERGDAT);
        system.assertEquals(Date.newInstance(2000,1,1), actual.x_FISSAN_AUSDAT);
        system.assertEquals(Date.newInstance(2000,1,1), actual.x_FISSAN_BAUDAT);
        system.assertEquals(Date.newInstance(2000,1,1), actual.x_FISSAN_MONTDAT);
        system.assertEquals(Date.newInstance(2000,1,1), actual.x_FISSAN_IDAT_PL);
        system.assertEquals(Date.newInstance(2000,1,1), actual.x_FISSAN_IDAT_IST);
        system.assertEquals('a', actual.x_FISSAN_PROJPOS);
        system.assertEquals('a', actual.x_FISSAN_PROJUPOS);
        system.assertEquals('a', actual.x_FISSAN_PRBEZG);
        system.assertEquals('a', actual.x_FISSAN_PBEZ2G);
        system.assertEquals('a', actual.ZZHWW_IKUN);
    }
    @istest
    private static void testORDER_HEADER_INX() {
        sapSalesOrderCreate.ORDER_HEADER_INX actual = new sapSalesOrderCreate.ORDER_HEADER_INX();

        actual.UPDATEFLAG = 'a';
        actual.DOC_TYPE = 'a';
        actual.COLLECT_NO = 'a';
        actual.SALES_ORG = 'a';
        actual.DISTR_CHAN = 'a';
        actual.DIVISION = 'a';
        actual.SALES_GRP = 'a';
        actual.SALES_OFF = 'a';
        actual.REQ_DATE_H = 'a';
        actual.DATE_TYPE = 'a';
        actual.PURCH_DATE = 'a';
        actual.PO_METHOD = 'a';
        actual.PO_SUPPLEM = 'a';
        actual.REF_1 = 'a';
        actual.NAME = 'a';
        actual.TELEPHONE = 'a';
        actual.PRICE_GRP = 'a';
        actual.CUST_GROUP = 'a';
        actual.SALES_DIST = 'a';
        actual.PRICE_LIST = 'a';
        actual.INCOTERMS1 = 'a';
        actual.INCOTERMS2 = 'a';
        actual.PMNTTRMS = 'a';
        actual.DLV_BLOCK = 'a';
        actual.BILL_BLOCK = 'a';
        actual.ORD_REASON = 'a';
        actual.COMPL_DLV = 'a';
        actual.PRICE_DATE = 'a';
        actual.QT_VALID_F = 'a';
        actual.QT_VALID_T = 'a';
        actual.CT_VALID_F = 'a';
        actual.CT_VALID_T = 'a';
        actual.CUST_GRP1 = 'a';
        actual.CUST_GRP2 = 'a';
        actual.CUST_GRP3 = 'a';
        actual.CUST_GRP4 = 'a';
        actual.CUST_GRP5 = 'a';
        actual.PURCH_NO_C = 'a';
        actual.PURCH_NO_S = 'a';
        actual.PO_DAT_S = 'a';
        actual.PO_METH_S = 'a';
        actual.REF_1_S = 'a';
        actual.SD_DOC_CAT = 'a';
        actual.DOC_DATE = 'a';
        actual.WAR_DATE = 'a';
        actual.SHIP_COND = 'a';
        actual.PP_SEARCH = 'a';
        actual.DUN_COUNT = 'a';
        actual.DUN_DATE = 'a';
        actual.DLVSCHDUSE = 'a';
        actual.PLDLVSTYP = 'a';
        actual.REF_DOC = 'a';
        actual.COMP_CDE_B = 'a';
        actual.ALTTAX_CLS = 'a';
        actual.TAX_CLASS2 = 'a';
        actual.TAX_CLASS3 = 'a';
        actual.TAX_CLASS4 = 'a';
        actual.TAX_CLASS5 = 'a';
        actual.TAX_CLASS6 = 'a';
        actual.TAX_CLASS7 = 'a';
        actual.TAX_CLASS8 = 'a';
        actual.TAX_CLASS9 = 'a';
        actual.REF_DOC_L = 'a';
        actual.ASS_NUMBER = 'a';
        actual.REFDOC_CAT = 'a';
        actual.ORDCOMB_IN = 'a';
        actual.BILL_SCHED = 'a';
        actual.INVO_SCHED = 'a';
        actual.MN_INVOICE = 'a';
        actual.EXRATE_FI = 'a';
        actual.ADD_VAL_DY = 'a';
        actual.FIX_VAL_DY = 'a';
        actual.PYMT_METH = 'a';
        actual.ACCNT_ASGN = 'a';
        actual.EXCHG_RATE = 'a';
        actual.BILL_DATE = 'a';
        actual.SERV_DATE = 'a';
        actual.DUNN_KEY = 'a';
        actual.DUNN_BLOCK = 'a';
        actual.PROMOTION = 'a';
        actual.PMTGAR_PRO = 'a';
        actual.DEPARTM_NO = 'a';
        actual.REC_POINT = 'a';
        actual.POITM_NO_S = 'a';
        actual.DOC_NUM_FI = 'a';
        actual.CSTCNDGRP1 = 'a';
        actual.CSTCNDGRP2 = 'a';
        actual.CSTCNDGRP3 = 'a';
        actual.CSTCNDGRP4 = 'a';
        actual.CSTCNDGRP5 = 'a';
        actual.DLV_TIME = 'a';
        actual.CURRENCY_x = 'a';
        actual.TAXDEP_CTY = 'a';
        actual.TAXDST_CTY = 'a';
        actual.EUTRI_DEAL = 'a';
        actual.MAST_CONTR = 'a';
        actual.REF_PROC = 'a';
        actual.CHKPRTAUTH = 'a';
        actual.CMLQTY_DAT = 'a';
        actual.VERSION = 'a';
        actual.NOTIF_NO = 'a';
        actual.WBS_ELEM = 'a';
        actual.EXCH_RATE_FI_V = 'a';
        actual.EXCHG_RATE_V = 'a';
        actual.FKK_CONACCT = 'a';
        actual.CAMPAIGN = 'a';
        actual.DOC_CLASS = 'a';
        actual.H_CURR = 'a';
        actual.SHIP_TYPE = 'a';
        actual.S_PROC_IND = 'a';
        actual.LINE_TIME = 'a';
        actual.CALC_MOTIVE = 'a';
        actual.PSM_PSTNG_DATE = 'a';
        actual.TREASURY_ACC_SYMBOL = 'a';
        actual.BUSINESS_EVENT_TCODE = 'a';
        actual.MODIFICATION_ALLOWED = 'a';
        actual.CANCELLATION_ALLOWED = 'a';
        actual.PAYMENT_METHODS = 'a';
        actual.BUSINESS_PARTNER_NO = 'a';
        actual.REPORTING_FREQ = 'a';
        actual.SEPA_MANDATE_ID = 'a';
        actual.SD_DOC_CAT_LONG = 'a';
        actual.REFDOC_CAT_LONG = 'a';
        actual.INCOTERMSV = 'a';
        actual.INCOTERMS2L = 'a';
        actual.INCOTERMS3L = 'a';
        actual.x_FISSAN_PRJNR = 'a';
        actual.x_FISSAN_PRBEZ = 'a';
        actual.x_FISSAN_PBEZ2 = 'a';
        actual.x_FISSAN_WVDAT = 'a';
        actual.x_FISSAN_SUBMISD = 'a';
        actual.x_FISSAN_WUNSCHD = 'a';
        actual.x_FISSAN_VERGDAT = 'a';
        actual.x_FISSAN_AUSDAT = 'a';
        actual.x_FISSAN_BAUDAT = 'a';
        actual.x_FISSAN_MONTDAT = 'a';
        actual.x_FISSAN_IDAT_PL = 'a';
        actual.x_FISSAN_IDAT_IST = 'a';
        actual.x_FISSAN_PROJPOS = 'a';
        actual.x_FISSAN_PROJUPOS = 'a';
        system.assertEquals('a', actual.UPDATEFLAG);
        system.assertEquals('a', actual.DOC_TYPE);
        system.assertEquals('a', actual.COLLECT_NO);
        system.assertEquals('a', actual.SALES_ORG);
        system.assertEquals('a', actual.DISTR_CHAN);
        system.assertEquals('a', actual.DIVISION);
        system.assertEquals('a', actual.SALES_GRP);
        system.assertEquals('a', actual.SALES_OFF);
        system.assertEquals('a', actual.REQ_DATE_H);
        system.assertEquals('a', actual.DATE_TYPE);
        system.assertEquals('a', actual.PURCH_DATE);
        system.assertEquals('a', actual.PO_METHOD);
        system.assertEquals('a', actual.PO_SUPPLEM);
        system.assertEquals('a', actual.REF_1);
        system.assertEquals('a', actual.NAME);
        system.assertEquals('a', actual.TELEPHONE);
        system.assertEquals('a', actual.PRICE_GRP);
        system.assertEquals('a', actual.CUST_GROUP);
        system.assertEquals('a', actual.SALES_DIST);
        system.assertEquals('a', actual.PRICE_LIST);
        system.assertEquals('a', actual.INCOTERMS1);
        system.assertEquals('a', actual.INCOTERMS2);
        system.assertEquals('a', actual.PMNTTRMS);
        system.assertEquals('a', actual.DLV_BLOCK);
        system.assertEquals('a', actual.BILL_BLOCK);
        system.assertEquals('a', actual.ORD_REASON);
        system.assertEquals('a', actual.COMPL_DLV);
        system.assertEquals('a', actual.PRICE_DATE);
        system.assertEquals('a', actual.QT_VALID_F);
        system.assertEquals('a', actual.QT_VALID_T);
        system.assertEquals('a', actual.CT_VALID_F);
        system.assertEquals('a', actual.CT_VALID_T);
        system.assertEquals('a', actual.CUST_GRP1);
        system.assertEquals('a', actual.CUST_GRP2);
        system.assertEquals('a', actual.CUST_GRP3);
        system.assertEquals('a', actual.CUST_GRP4);
        system.assertEquals('a', actual.CUST_GRP5);
        system.assertEquals('a', actual.PURCH_NO_C);
        system.assertEquals('a', actual.PURCH_NO_S);
        system.assertEquals('a', actual.PO_DAT_S);
        system.assertEquals('a', actual.PO_METH_S);
        system.assertEquals('a', actual.REF_1_S);
        system.assertEquals('a', actual.SD_DOC_CAT);
        system.assertEquals('a', actual.DOC_DATE);
        system.assertEquals('a', actual.WAR_DATE);
        system.assertEquals('a', actual.SHIP_COND);
        system.assertEquals('a', actual.PP_SEARCH);
        system.assertEquals('a', actual.DUN_COUNT);
        system.assertEquals('a', actual.DUN_DATE);
        system.assertEquals('a', actual.DLVSCHDUSE);
        system.assertEquals('a', actual.PLDLVSTYP);
        system.assertEquals('a', actual.REF_DOC);
        system.assertEquals('a', actual.COMP_CDE_B);
        system.assertEquals('a', actual.ALTTAX_CLS);
        system.assertEquals('a', actual.TAX_CLASS2);
        system.assertEquals('a', actual.TAX_CLASS3);
        system.assertEquals('a', actual.TAX_CLASS4);
        system.assertEquals('a', actual.TAX_CLASS5);
        system.assertEquals('a', actual.TAX_CLASS6);
        system.assertEquals('a', actual.TAX_CLASS7);
        system.assertEquals('a', actual.TAX_CLASS8);
        system.assertEquals('a', actual.TAX_CLASS9);
        system.assertEquals('a', actual.REF_DOC_L);
        system.assertEquals('a', actual.ASS_NUMBER);
        system.assertEquals('a', actual.REFDOC_CAT);
        system.assertEquals('a', actual.ORDCOMB_IN);
        system.assertEquals('a', actual.BILL_SCHED);
        system.assertEquals('a', actual.INVO_SCHED);
        system.assertEquals('a', actual.MN_INVOICE);
        system.assertEquals('a', actual.EXRATE_FI);
        system.assertEquals('a', actual.ADD_VAL_DY);
        system.assertEquals('a', actual.FIX_VAL_DY);
        system.assertEquals('a', actual.PYMT_METH);
        system.assertEquals('a', actual.ACCNT_ASGN);
        system.assertEquals('a', actual.EXCHG_RATE);
        system.assertEquals('a', actual.BILL_DATE);
        system.assertEquals('a', actual.SERV_DATE);
        system.assertEquals('a', actual.DUNN_KEY);
        system.assertEquals('a', actual.DUNN_BLOCK);
        system.assertEquals('a', actual.PROMOTION);
        system.assertEquals('a', actual.PMTGAR_PRO);
        system.assertEquals('a', actual.DEPARTM_NO);
        system.assertEquals('a', actual.REC_POINT);
        system.assertEquals('a', actual.POITM_NO_S);
        system.assertEquals('a', actual.DOC_NUM_FI);
        system.assertEquals('a', actual.CSTCNDGRP1);
        system.assertEquals('a', actual.CSTCNDGRP2);
        system.assertEquals('a', actual.CSTCNDGRP3);
        system.assertEquals('a', actual.CSTCNDGRP4);
        system.assertEquals('a', actual.CSTCNDGRP5);
        system.assertEquals('a', actual.DLV_TIME);
        system.assertEquals('a', actual.CURRENCY_x);
        system.assertEquals('a', actual.TAXDEP_CTY);
        system.assertEquals('a', actual.TAXDST_CTY);
        system.assertEquals('a', actual.EUTRI_DEAL);
        system.assertEquals('a', actual.MAST_CONTR);
        system.assertEquals('a', actual.REF_PROC);
        system.assertEquals('a', actual.CHKPRTAUTH);
        system.assertEquals('a', actual.CMLQTY_DAT);
        system.assertEquals('a', actual.VERSION);
        system.assertEquals('a', actual.NOTIF_NO);
        system.assertEquals('a', actual.WBS_ELEM);
        system.assertEquals('a', actual.EXCH_RATE_FI_V);
        system.assertEquals('a', actual.EXCHG_RATE_V);
        system.assertEquals('a', actual.FKK_CONACCT);
        system.assertEquals('a', actual.CAMPAIGN);
        system.assertEquals('a', actual.DOC_CLASS);
        system.assertEquals('a', actual.H_CURR);
        system.assertEquals('a', actual.SHIP_TYPE);
        system.assertEquals('a', actual.S_PROC_IND);
        system.assertEquals('a', actual.LINE_TIME);
        system.assertEquals('a', actual.CALC_MOTIVE);
        system.assertEquals('a', actual.PSM_PSTNG_DATE);
        system.assertEquals('a', actual.TREASURY_ACC_SYMBOL);
        system.assertEquals('a', actual.BUSINESS_EVENT_TCODE);
        system.assertEquals('a', actual.MODIFICATION_ALLOWED);
        system.assertEquals('a', actual.CANCELLATION_ALLOWED);
        system.assertEquals('a', actual.PAYMENT_METHODS);
        system.assertEquals('a', actual.BUSINESS_PARTNER_NO);
        system.assertEquals('a', actual.REPORTING_FREQ);
        system.assertEquals('a', actual.SEPA_MANDATE_ID);
        system.assertEquals('a', actual.SD_DOC_CAT_LONG);
        system.assertEquals('a', actual.REFDOC_CAT_LONG);
        system.assertEquals('a', actual.INCOTERMSV);
        system.assertEquals('a', actual.INCOTERMS2L);
        system.assertEquals('a', actual.INCOTERMS3L);
        system.assertEquals('a', actual.x_FISSAN_PRJNR);
        system.assertEquals('a', actual.x_FISSAN_PRBEZ);
        system.assertEquals('a', actual.x_FISSAN_PBEZ2);
        system.assertEquals('a', actual.x_FISSAN_WVDAT);
        system.assertEquals('a', actual.x_FISSAN_SUBMISD);
        system.assertEquals('a', actual.x_FISSAN_WUNSCHD);
        system.assertEquals('a', actual.x_FISSAN_VERGDAT);
        system.assertEquals('a', actual.x_FISSAN_AUSDAT);
        system.assertEquals('a', actual.x_FISSAN_BAUDAT);
        system.assertEquals('a', actual.x_FISSAN_MONTDAT);
        system.assertEquals('a', actual.x_FISSAN_IDAT_PL);
        system.assertEquals('a', actual.x_FISSAN_IDAT_IST);
        system.assertEquals('a', actual.x_FISSAN_PROJPOS);
        system.assertEquals('a', actual.x_FISSAN_PROJUPOS);
    }
    @istest
    private static void testSENDER() {
        sapSalesOrderCreate.SENDER actual = new sapSalesOrderCreate.SENDER();

        actual.LOG_SYSTEM = 'a';
        system.assertEquals('a', actual.LOG_SYSTEM);
    }
    @istest
    private static void testLOGIC_SWITCH() {
        sapSalesOrderCreate.LOGIC_SWITCH actual = new sapSalesOrderCreate.LOGIC_SWITCH();

        actual.PRICING = 'a';
        actual.ATP_WRKMOD = 'a';
        actual.SCHEDULING = 'a';
        actual.NOSTRUCTURE = 'a';
        actual.COND_HANDL = 'a';
        actual.ADDR_CHECK = 'a';
        system.assertEquals('a', actual.PRICING);
        system.assertEquals('a', actual.ATP_WRKMOD);
        system.assertEquals('a', actual.SCHEDULING);
        system.assertEquals('a', actual.NOSTRUCTURE);
        system.assertEquals('a', actual.COND_HANDL);
        system.assertEquals('a', actual.ADDR_CHECK);
    }
    @istest
    private static void testRETURN_x() {
        sapSalesOrderCreate.RETURN_x actual = new sapSalesOrderCreate.RETURN_x();

        actual.TYPE_x = 'a';
        actual.ID = 'a';
        actual.NUMBER_x = 'a';
        actual.MESSAGE = 'a';
        actual.LOG_NO = 'a';
        actual.LOG_MSG_NO = 'a';
        actual.MESSAGE_V1 = 'a';
        actual.MESSAGE_V2 = 'a';
        actual.MESSAGE_V3 = 'a';
        actual.MESSAGE_V4 = 'a';
        actual.PARAMETER = 'a';
        actual.ROW = 0;
        actual.FIELD = 'a';
        actual.SYSTEM_x = 'a';
        system.assertEquals('a', actual.TYPE_x);
        system.assertEquals('a', actual.ID);
        system.assertEquals('a', actual.NUMBER_x);
        system.assertEquals('a', actual.MESSAGE);
        system.assertEquals('a', actual.LOG_NO);
        system.assertEquals('a', actual.LOG_MSG_NO);
        system.assertEquals('a', actual.MESSAGE_V1);
        system.assertEquals('a', actual.MESSAGE_V2);
        system.assertEquals('a', actual.MESSAGE_V3);
        system.assertEquals('a', actual.MESSAGE_V4);
        system.assertEquals('a', actual.PARAMETER);
        system.assertEquals(0, actual.ROW);
        system.assertEquals('a', actual.FIELD);
        system.assertEquals('a', actual.SYSTEM_x);
    }
    @istest
    private static void testORDER_ITEMS_IN() {
        sapSalesOrderCreate.ORDER_ITEMS_IN actual = new sapSalesOrderCreate.ORDER_ITEMS_IN();

        actual.ITM_NUMBER = 'a';
        actual.HG_LV_ITEM = 'a';
        actual.PO_ITM_NO = 'a';
        actual.MATERIAL = 'a';
        actual.ALT_TO_ITM = 'a';
        actual.CUST_MAT22 = 'a';
        actual.BATCH = 'a';
        actual.DLV_GROUP = 'a';
        actual.PART_DLV = 'a';
        actual.REASON_REJ = 'a';
        actual.BILL_BLOCK = 'a';
        actual.BILL_DATE = Date.newInstance(2000,1,1);
        actual.PLANT = 'a';
        actual.STORE_LOC = 'a';
        actual.TARGET_QTY = 0;
        actual.TARGET_QU = 'a';
        actual.T_UNIT_ISO = 'a';
        actual.ITEM_CATEG = 'a';
        actual.SHORT_TEXT = 'a';
        actual.PRC_GROUP1 = 'a';
        actual.PRC_GROUP2 = 'a';
        actual.PRC_GROUP3 = 'a';
        actual.PRC_GROUP4 = 'a';
        actual.PRC_GROUP5 = 'a';
        actual.PROD_HIERA = 'a';
        actual.MATL_GROUP = 'a';
        actual.PURCH_NO_C = 'a';
        actual.PURCH_DATE = Date.newInstance(2000,1,1);
        actual.PO_METHOD = 'a';
        actual.REF_1 = 'a';
        actual.PURCH_NO_S = 'a';
        actual.PO_DAT_S = Date.newInstance(2000,1,1);
        actual.PO_METH_S = 'a';
        actual.REF_1_S = 'a';
        actual.POITM_NO_S = 'a';
        actual.PRICE_GRP = 'a';
        actual.CUST_GROUP = 'a';
        actual.SALES_DIST = 'a';
        actual.PRICE_LIST = 'a';
        actual.INCOTERMS1 = 'a';
        actual.INCOTERMS2 = 'a';
        actual.ORDCOMP_IN = 'a';
        actual.BILL_SCHED = 'a';
        actual.INVO_SCHED = 'a';
        actual.MN_INVOICE = 'a';
        actual.EX_RATE_FI = 0;
        actual.ADD_VAL_DY = 'a';
        actual.FIX_VAL_DY = Date.newInstance(2000,1,1);
        actual.PMNTTRMS = 'a';
        actual.PYMT_METH = 'a';
        actual.ACCNT_ASGN = 'a';
        actual.EXCHG_RATE = 0;
        actual.PRICE_DATE = Date.newInstance(2000,1,1);
        actual.SERV_DATE = Date.newInstance(2000,1,1);
        actual.DUNN_KEY = 'a';
        actual.DUNN_BLOCK = 'a';
        actual.PROMOTION = 'a';
        actual.PMTGAR_PRO = 'a';
        actual.DOC_NUM_FI = 'a';
        actual.DEPARTM_NO = 'a';
        actual.REC_POINT = 'a';
        actual.CSTCNDGRP1 = 'a';
        actual.CSTCNDGRP2 = 'a';
        actual.CSTCNDGRP3 = 'a';
        actual.CSTCNDGRP4 = 'a';
        actual.CSTCNDGRP5 = 'a';
        actual.DLV_TIME = 'a';
        actual.SALES_UNIT = 'a';
        actual.S_UNIT_ISO = 'a';
        actual.TRG_QTY_NO = 0;
        actual.TRGQTY_DEN = 0;
        actual.RNDDLV_QTY = 0;
        actual.MAXDEVAMNT = 0;
        actual.MAXDEVPER = 0;
        actual.MAXDEV_DAY = 0;
        actual.USAGE_IND = 'a';
        actual.FIXED_QUAN = 'a';
        actual.UNLMT_DLV = 'a';
        actual.OVERDLVTOL = 0;
        actual.UNDDLV_TOL = 0;
        actual.DIVISION = 'a';
        actual.SALQTYNUM = 0;
        actual.SALQTYDEN = 0;
        actual.GROSS_WGHT = 0;
        actual.NET_WEIGHT = 0;
        actual.UNTOF_WGHT = 'a';
        actual.UNOF_WTISO = 'a';
        actual.VOLUME = 0;
        actual.VOLUNIT = 'a';
        actual.VOLUNITISO = 'a';
        actual.DLV_PRIO = 'a';
        actual.SHIP_POINT = 'a';
        actual.ROUTE = 'a';
        actual.CREATED_BY = 'a';
        actual.TAX_CLASS1 = 'a';
        actual.TAX_CLASS2 = 'a';
        actual.TAX_CLASS3 = 'a';
        actual.TAX_CLASS4 = 'a';
        actual.TAX_CLASS5 = 'a';
        actual.TAX_CLASS6 = 'a';
        actual.TAX_CLASS7 = 'a';
        actual.TAX_CLASS8 = 'a';
        actual.TAX_CLASS9 = 'a';
        actual.MAT_PR_GRP = 'a';
        actual.VAL_TYPE = 'a';
        actual.FIXDAT_QTY = 'a';
        actual.BOMEXPL_NO = 'a';
        actual.RESANALKEY = 'a';
        actual.REQMTS_TYP = 'a';
        actual.NO_GR_POST = 'a';
        actual.BUS_TRANST = 'a';
        actual.OVERHD_KEY = 'a';
        actual.CSTG_SHEET = 'a';
        actual.MATFRGTGRP = 'a';
        actual.PLDLVSHDIN = 'a';
        actual.SEQ_NO = 'a';
        actual.BIL_FORM = 'a';
        actual.DLI_PROFIL = 'a';
        actual.REV_TYPE = 'a';
        actual.BEGDEM_PER = 'a';
        actual.PR_REF_MAT = 'a';
        actual.REFOBJTYPE = 'a';
        actual.REFOBJKEY = 'a';
        actual.REFLOGSYS = 'a';
        actual.ORDER_PROB = 'a';
        actual.MAX_PL_DLV = 0;
        actual.CFOP_CODE = 'a';
        actual.TAXLAWICMS = 'a';
        actual.TAXLAWIPI = 'a';
        actual.SD_TAXCODE = 'a';
        actual.ASSORT_MOD = 'a';
        actual.COMP_QUANT = 0;
        actual.TARGET_VAL = 0;
        actual.CURRENCY_x = 'a';
        actual.CURR_ISO = 'a';
        actual.PROFIT_CTR = 'a';
        actual.ORDERID = 'a';
        actual.WBS_ELEM = 'a';
        actual.DEPREC_PER = 0;
        actual.REF_DOC = 'a';
        actual.REF_DOC_IT = 'a';
        actual.REF_DOC_CA = 'a';
        actual.CUST_MAT35 = 'a';
        actual.EXCH_RATE_FI_V = 0;
        actual.EXCHG_RATE_V = 0;
        actual.ITEMGUID_ATP = 'a';
        actual.VAL_CONTR = 'a';
        actual.VAL_CON_I = 'a';
        actual.CONFIG_ID = 'a';
        actual.INST_ID = 'a';
        actual.MAT_EXT = 'a';
        actual.MAT_GUID = 'a';
        actual.MAT_VERS = 'a';
        actual.P_MAT_EXT = 'a';
        actual.P_MAT_GUID = 'a';
        actual.P_MAT_VERS = 'a';
        actual.FUNC_AREA = 'a';
        actual.ALTERN_BOM = 'a';
        actual.FKK_CONACCT = 'a';
        actual.EAN_UPC = 'a';
        actual.PRODCAT = 'a';
        actual.SHIP_TYPE = 'a';
        actual.S_PROC_IND = 'a';
        actual.FUNC_AREA_LONG = 'a';
        actual.BILL_REL = 'a';
        actual.VW_UEPOS = 'a';
        actual.CAMPAIGN = null;
        actual.DLVSCHDUSE = 'a';
        actual.CFOP_LONG = 'a';
        actual.SELECTION = 'a';
        actual.MAT_ENTRD = 'a';
        actual.LOG_SYSTEM_OWN = 'a';
        actual.ITM_TYPE_USAGE = 'a';
        actual.TAXLAWISS = 'a';
        actual.MAT_ENTRD_EXTERNAL = 'a';
        actual.MAT_ENTRD_GUID = 'a';
        actual.MAT_ENTRD_VERSION = 'a';
        actual.LOC_TAXCAT = 'a';
        actual.LOC_ZEROVAT = 'a';
        actual.LOC_ACTCODE = 'a';
        actual.LOC_DISTTYPE = 'a';
        actual.LOC_TXRELCLAS = 'a';
        actual.CALC_MOTIVE = 'a';
        actual.COMPREAS = 'a';
        actual.FUND = 'a';
        actual.FUNDS_CTR = 'a';
        actual.CMMT_ITEM = 'a';
        actual.GRANT_NBR = 'a';
        actual.BUDGET_PERIOD = 'a';
        actual.TAXLAWCOFINS = 'a';
        actual.TAXLAWPIS = 'a';
        actual.TREASURY_ACC_SYMBOL = 'a';
        actual.BUSINESS_EVENT_TCODE = 'a';
        actual.MODIFICATION_ALLOWED = 'a';
        actual.CANCELLATION_ALLOWED = 'a';
        actual.PAYMENT_METHODS = 'a';
        actual.BUSINESS_PARTNER_NO = 'a';
        actual.REPORTING_FREQ = 'a';
        actual.SEPA_MANDATE_ID = 'a';
        actual.REQ_SEGMENT = 'a';
        actual.TP_SUBLEVL = 'a';
        actual.TP_AGENCID = 'a';
        actual.TP_ALTRAID = 'a';
        actual.TP_BEGPER = 'a';
        actual.TP_ENDPER = 'a';
        actual.TP_AVTYPE = 'a';
        actual.TP_MAIN_ACCT = 'a';
        actual.TP_SUB_ACCT = 'a';
        actual.TP_BETC = 'a';
        actual.REVACC_REFID = 'a';
        actual.REVACC_REFTYPE = 'a';
        actual.REF_DOC_CA_LONG = 'a';
        actual.INCOTERMSV = 'a';
        actual.INCOTERMS2L = 'a';
        actual.INCOTERMS3L = 'a';
        actual.MATERIAL_LONG = 'a';
        actual.PR_REF_MAT_LONG = 'a';
        actual.MAT_ENTRD_LONG = 'a';
        actual.PO_QUAN = 0;
        actual.PO_UNIT = 'a';
        actual.REQ_SEG_LONG = 'a';
        actual.x_FIS_CASH_KOSTL = 'a';
        actual.SHORT_TEXT2 = 'a';
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.HG_LV_ITEM);
        system.assertEquals('a', actual.PO_ITM_NO);
        system.assertEquals('a', actual.MATERIAL);
        system.assertEquals('a', actual.ALT_TO_ITM);
        system.assertEquals('a', actual.CUST_MAT22);
        system.assertEquals('a', actual.BATCH);
        system.assertEquals('a', actual.DLV_GROUP);
        system.assertEquals('a', actual.PART_DLV);
        system.assertEquals('a', actual.REASON_REJ);
        system.assertEquals('a', actual.BILL_BLOCK);
        system.assertEquals(Date.newInstance(2000,1,1), actual.BILL_DATE);
        system.assertEquals('a', actual.PLANT);
        system.assertEquals('a', actual.STORE_LOC);
        system.assertEquals(0, actual.TARGET_QTY);
        system.assertEquals('a', actual.TARGET_QU);
        system.assertEquals('a', actual.T_UNIT_ISO);
        system.assertEquals('a', actual.ITEM_CATEG);
        system.assertEquals('a', actual.SHORT_TEXT);
        system.assertEquals('a', actual.PRC_GROUP1);
        system.assertEquals('a', actual.PRC_GROUP2);
        system.assertEquals('a', actual.PRC_GROUP3);
        system.assertEquals('a', actual.PRC_GROUP4);
        system.assertEquals('a', actual.PRC_GROUP5);
        system.assertEquals('a', actual.PROD_HIERA);
        system.assertEquals('a', actual.MATL_GROUP);
        system.assertEquals('a', actual.PURCH_NO_C);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PURCH_DATE);
        system.assertEquals('a', actual.PO_METHOD);
        system.assertEquals('a', actual.REF_1);
        system.assertEquals('a', actual.PURCH_NO_S);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PO_DAT_S);
        system.assertEquals('a', actual.PO_METH_S);
        system.assertEquals('a', actual.REF_1_S);
        system.assertEquals('a', actual.POITM_NO_S);
        system.assertEquals('a', actual.PRICE_GRP);
        system.assertEquals('a', actual.CUST_GROUP);
        system.assertEquals('a', actual.SALES_DIST);
        system.assertEquals('a', actual.PRICE_LIST);
        system.assertEquals('a', actual.INCOTERMS1);
        system.assertEquals('a', actual.INCOTERMS2);
        system.assertEquals('a', actual.ORDCOMP_IN);
        system.assertEquals('a', actual.BILL_SCHED);
        system.assertEquals('a', actual.INVO_SCHED);
        system.assertEquals('a', actual.MN_INVOICE);
        system.assertEquals(0, actual.EX_RATE_FI);
        system.assertEquals('a', actual.ADD_VAL_DY);
        system.assertEquals(Date.newInstance(2000,1,1), actual.FIX_VAL_DY);
        system.assertEquals('a', actual.PMNTTRMS);
        system.assertEquals('a', actual.PYMT_METH);
        system.assertEquals('a', actual.ACCNT_ASGN);
        system.assertEquals(0, actual.EXCHG_RATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PRICE_DATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.SERV_DATE);
        system.assertEquals('a', actual.DUNN_KEY);
        system.assertEquals('a', actual.DUNN_BLOCK);
        system.assertEquals('a', actual.PROMOTION);
        system.assertEquals('a', actual.PMTGAR_PRO);
        system.assertEquals('a', actual.DOC_NUM_FI);
        system.assertEquals('a', actual.DEPARTM_NO);
        system.assertEquals('a', actual.REC_POINT);
        system.assertEquals('a', actual.CSTCNDGRP1);
        system.assertEquals('a', actual.CSTCNDGRP2);
        system.assertEquals('a', actual.CSTCNDGRP3);
        system.assertEquals('a', actual.CSTCNDGRP4);
        system.assertEquals('a', actual.CSTCNDGRP5);
        system.assertEquals('a', actual.DLV_TIME);
        system.assertEquals('a', actual.SALES_UNIT);
        system.assertEquals('a', actual.S_UNIT_ISO);
        system.assertEquals(0, actual.TRG_QTY_NO);
        system.assertEquals(0, actual.TRGQTY_DEN);
        system.assertEquals(0, actual.RNDDLV_QTY);
        system.assertEquals(0, actual.MAXDEVAMNT);
        system.assertEquals(0, actual.MAXDEVPER);
        system.assertEquals(0, actual.MAXDEV_DAY);
        system.assertEquals('a', actual.USAGE_IND);
        system.assertEquals('a', actual.FIXED_QUAN);
        system.assertEquals('a', actual.UNLMT_DLV);
        system.assertEquals(0, actual.OVERDLVTOL);
        system.assertEquals(0, actual.UNDDLV_TOL);
        system.assertEquals('a', actual.DIVISION);
        system.assertEquals(0, actual.SALQTYNUM);
        system.assertEquals(0, actual.SALQTYDEN);
        system.assertEquals(0, actual.GROSS_WGHT);
        system.assertEquals(0, actual.NET_WEIGHT);
        system.assertEquals('a', actual.UNTOF_WGHT);
        system.assertEquals('a', actual.UNOF_WTISO);
        system.assertEquals(0, actual.VOLUME);
        system.assertEquals('a', actual.VOLUNIT);
        system.assertEquals('a', actual.VOLUNITISO);
        system.assertEquals('a', actual.DLV_PRIO);
        system.assertEquals('a', actual.SHIP_POINT);
        system.assertEquals('a', actual.ROUTE);
        system.assertEquals('a', actual.CREATED_BY);
        system.assertEquals('a', actual.TAX_CLASS1);
        system.assertEquals('a', actual.TAX_CLASS2);
        system.assertEquals('a', actual.TAX_CLASS3);
        system.assertEquals('a', actual.TAX_CLASS4);
        system.assertEquals('a', actual.TAX_CLASS5);
        system.assertEquals('a', actual.TAX_CLASS6);
        system.assertEquals('a', actual.TAX_CLASS7);
        system.assertEquals('a', actual.TAX_CLASS8);
        system.assertEquals('a', actual.TAX_CLASS9);
        system.assertEquals('a', actual.MAT_PR_GRP);
        system.assertEquals('a', actual.VAL_TYPE);
        system.assertEquals('a', actual.FIXDAT_QTY);
        system.assertEquals('a', actual.BOMEXPL_NO);
        system.assertEquals('a', actual.RESANALKEY);
        system.assertEquals('a', actual.REQMTS_TYP);
        system.assertEquals('a', actual.NO_GR_POST);
        system.assertEquals('a', actual.BUS_TRANST);
        system.assertEquals('a', actual.OVERHD_KEY);
        system.assertEquals('a', actual.CSTG_SHEET);
        system.assertEquals('a', actual.MATFRGTGRP);
        system.assertEquals('a', actual.PLDLVSHDIN);
        system.assertEquals('a', actual.SEQ_NO);
        system.assertEquals('a', actual.BIL_FORM);
        system.assertEquals('a', actual.DLI_PROFIL);
        system.assertEquals('a', actual.REV_TYPE);
        system.assertEquals('a', actual.BEGDEM_PER);
        system.assertEquals('a', actual.PR_REF_MAT);
        system.assertEquals('a', actual.REFOBJTYPE);
        system.assertEquals('a', actual.REFOBJKEY);
        system.assertEquals('a', actual.REFLOGSYS);
        system.assertEquals('a', actual.ORDER_PROB);
        system.assertEquals(0, actual.MAX_PL_DLV);
        system.assertEquals('a', actual.CFOP_CODE);
        system.assertEquals('a', actual.TAXLAWICMS);
        system.assertEquals('a', actual.TAXLAWIPI);
        system.assertEquals('a', actual.SD_TAXCODE);
        system.assertEquals('a', actual.ASSORT_MOD);
        system.assertEquals(0, actual.COMP_QUANT);
        system.assertEquals(0, actual.TARGET_VAL);
        system.assertEquals('a', actual.CURRENCY_x);
        system.assertEquals('a', actual.CURR_ISO);
        system.assertEquals('a', actual.PROFIT_CTR);
        system.assertEquals('a', actual.ORDERID);
        system.assertEquals('a', actual.WBS_ELEM);
        system.assertEquals(0, actual.DEPREC_PER);
        system.assertEquals('a', actual.REF_DOC);
        system.assertEquals('a', actual.REF_DOC_IT);
        system.assertEquals('a', actual.REF_DOC_CA);
        system.assertEquals('a', actual.CUST_MAT35);
        system.assertEquals(0, actual.EXCH_RATE_FI_V);
        system.assertEquals(0, actual.EXCHG_RATE_V);
        system.assertEquals('a', actual.ITEMGUID_ATP);
        system.assertEquals('a', actual.VAL_CONTR);
        system.assertEquals('a', actual.VAL_CON_I);
        system.assertEquals('a', actual.CONFIG_ID);
        system.assertEquals('a', actual.INST_ID);
        system.assertEquals('a', actual.MAT_EXT);
        system.assertEquals('a', actual.MAT_GUID);
        system.assertEquals('a', actual.MAT_VERS);
        system.assertEquals('a', actual.P_MAT_EXT);
        system.assertEquals('a', actual.P_MAT_GUID);
        system.assertEquals('a', actual.P_MAT_VERS);
        system.assertEquals('a', actual.FUNC_AREA);
        system.assertEquals('a', actual.ALTERN_BOM);
        system.assertEquals('a', actual.FKK_CONACCT);
        system.assertEquals('a', actual.EAN_UPC);
        system.assertEquals('a', actual.PRODCAT);
        system.assertEquals('a', actual.SHIP_TYPE);
        system.assertEquals('a', actual.S_PROC_IND);
        system.assertEquals('a', actual.FUNC_AREA_LONG);
        system.assertEquals('a', actual.BILL_REL);
        system.assertEquals('a', actual.VW_UEPOS);
        system.assertEquals(null, actual.CAMPAIGN);
        system.assertEquals('a', actual.DLVSCHDUSE);
        system.assertEquals('a', actual.CFOP_LONG);
        system.assertEquals('a', actual.SELECTION);
        system.assertEquals('a', actual.MAT_ENTRD);
        system.assertEquals('a', actual.LOG_SYSTEM_OWN);
        system.assertEquals('a', actual.ITM_TYPE_USAGE);
        system.assertEquals('a', actual.TAXLAWISS);
        system.assertEquals('a', actual.MAT_ENTRD_EXTERNAL);
        system.assertEquals('a', actual.MAT_ENTRD_GUID);
        system.assertEquals('a', actual.MAT_ENTRD_VERSION);
        system.assertEquals('a', actual.LOC_TAXCAT);
        system.assertEquals('a', actual.LOC_ZEROVAT);
        system.assertEquals('a', actual.LOC_ACTCODE);
        system.assertEquals('a', actual.LOC_DISTTYPE);
        system.assertEquals('a', actual.LOC_TXRELCLAS);
        system.assertEquals('a', actual.CALC_MOTIVE);
        system.assertEquals('a', actual.COMPREAS);
        system.assertEquals('a', actual.FUND);
        system.assertEquals('a', actual.FUNDS_CTR);
        system.assertEquals('a', actual.CMMT_ITEM);
        system.assertEquals('a', actual.GRANT_NBR);
        system.assertEquals('a', actual.BUDGET_PERIOD);
        system.assertEquals('a', actual.TAXLAWCOFINS);
        system.assertEquals('a', actual.TAXLAWPIS);
        system.assertEquals('a', actual.TREASURY_ACC_SYMBOL);
        system.assertEquals('a', actual.BUSINESS_EVENT_TCODE);
        system.assertEquals('a', actual.MODIFICATION_ALLOWED);
        system.assertEquals('a', actual.CANCELLATION_ALLOWED);
        system.assertEquals('a', actual.PAYMENT_METHODS);
        system.assertEquals('a', actual.BUSINESS_PARTNER_NO);
        system.assertEquals('a', actual.REPORTING_FREQ);
        system.assertEquals('a', actual.SEPA_MANDATE_ID);
        system.assertEquals('a', actual.REQ_SEGMENT);
        system.assertEquals('a', actual.TP_SUBLEVL);
        system.assertEquals('a', actual.TP_AGENCID);
        system.assertEquals('a', actual.TP_ALTRAID);
        system.assertEquals('a', actual.TP_BEGPER);
        system.assertEquals('a', actual.TP_ENDPER);
        system.assertEquals('a', actual.TP_AVTYPE);
        system.assertEquals('a', actual.TP_MAIN_ACCT);
        system.assertEquals('a', actual.TP_SUB_ACCT);
        system.assertEquals('a', actual.TP_BETC);
        system.assertEquals('a', actual.REVACC_REFID);
        system.assertEquals('a', actual.REVACC_REFTYPE);
        system.assertEquals('a', actual.REF_DOC_CA_LONG);
        system.assertEquals('a', actual.INCOTERMSV);
        system.assertEquals('a', actual.INCOTERMS2L);
        system.assertEquals('a', actual.INCOTERMS3L);
        system.assertEquals('a', actual.MATERIAL_LONG);
        system.assertEquals('a', actual.PR_REF_MAT_LONG);
        system.assertEquals('a', actual.MAT_ENTRD_LONG);
        system.assertEquals(0, actual.PO_QUAN);
        system.assertEquals('a', actual.PO_UNIT);
        system.assertEquals('a', actual.REQ_SEG_LONG);
        system.assertEquals('a', actual.x_FIS_CASH_KOSTL);
        system.assertEquals('a', actual.SHORT_TEXT2);
    }
    @istest
    private static void testORDER_ITEMS_INX() {
        sapSalesOrderCreate.ORDER_ITEMS_INX actual = new sapSalesOrderCreate.ORDER_ITEMS_INX();

        actual.ITM_NUMBER = 'a';
        actual.UPDATEFLAG = 'a';
        actual.HG_LV_ITEM = 'a';
        actual.PO_ITM_NO = 'a';
        actual.MATERIAL = 'a';
        actual.ALT_TO_ITM = 'a';
        actual.CUST_MAT22 = 'a';
        actual.BATCH = 'a';
        actual.DLV_GROUP = 'a';
        actual.PART_DLV = 'a';
        actual.REASON_REJ = 'a';
        actual.BILL_BLOCK = 'a';
        actual.BILL_DATE = 'a';
        actual.PLANT = 'a';
        actual.STORE_LOC = 'a';
        actual.TARGET_QTY = 'a';
        actual.TARGET_QU = 'a';
        actual.T_UNIT_ISO = 'a';
        actual.ITEM_CATEG = 'a';
        actual.SHORT_TEXT = 'a';
        actual.PRC_GROUP1 = 'a';
        actual.PRC_GROUP2 = 'a';
        actual.PRC_GROUP3 = 'a';
        actual.PRC_GROUP4 = 'a';
        actual.PRC_GROUP5 = 'a';
        actual.PROD_HIERA = 'a';
        actual.MATL_GROUP = 'a';
        actual.PURCH_NO_C = 'a';
        actual.PURCH_DATE = 'a';
        actual.PO_METHOD = 'a';
        actual.REF_1 = 'a';
        actual.PURCH_NO_S = 'a';
        actual.PO_DAT_S = 'a';
        actual.PO_METH_S = 'a';
        actual.REF_1_S = 'a';
        actual.POITM_NO_S = 'a';
        actual.PRICE_GRP = 'a';
        actual.CUST_GROUP = 'a';
        actual.SALES_DIST = 'a';
        actual.PRICE_LIST = 'a';
        actual.INCOTERMS1 = 'a';
        actual.INCOTERMS2 = 'a';
        actual.ORDCOMP_IN = 'a';
        actual.BILL_SCHED = 'a';
        actual.INVO_SCHED = 'a';
        actual.MN_INVOICE = 'a';
        actual.EX_RATE_FI = 'a';
        actual.ADD_VAL_DY = 'a';
        actual.FIX_VAL_DY = 'a';
        actual.PMNTTRMS = 'a';
        actual.PYMT_METH = 'a';
        actual.ACCNT_ASGN = 'a';
        actual.EXCHG_RATE = 'a';
        actual.PRICE_DATE = 'a';
        actual.SERV_DATE = 'a';
        actual.DUNN_KEY = 'a';
        actual.DUNN_BLOCK = 'a';
        actual.PROMOTION = 'a';
        actual.PMTGAR_PRO = 'a';
        actual.DOC_NUM_FI = 'a';
        actual.DEPARTM_NO = 'a';
        actual.REC_POINT = 'a';
        actual.CSTCNDGRP1 = 'a';
        actual.CSTCNDGRP2 = 'a';
        actual.CSTCNDGRP3 = 'a';
        actual.CSTCNDGRP4 = 'a';
        actual.CSTCNDGRP5 = 'a';
        actual.DLV_TIME = 'a';
        actual.SALES_UNIT = 'a';
        actual.TRG_QTY_NO = 'a';
        actual.TRGQTY_DEN = 'a';
        actual.RNDDLV_QTY = 'a';
        actual.MAXDEVAMNT = 'a';
        actual.MAXDEVPER = 'a';
        actual.MAXDEV_DAY = 'a';
        actual.USAGE_IND = 'a';
        actual.FIXED_QUAN = 'a';
        actual.UNLMT_DLV = 'a';
        actual.OVERDLVTOL = 'a';
        actual.UNDDLV_TOL = 'a';
        actual.DIVISION = 'a';
        actual.SALQTYNUM = 'a';
        actual.SALQTYDEN = 'a';
        actual.GROSS_WGHT = 'a';
        actual.NET_WEIGHT = 'a';
        actual.UNTOF_WGHT = 'a';
        actual.VOLUME = 'a';
        actual.VOLUNIT = 'a';
        actual.DLV_PRIO = 'a';
        actual.SHIP_POINT = 'a';
        actual.ROUTE = 'a';
        actual.TAX_CLASS1 = 'a';
        actual.TAX_CLASS2 = 'a';
        actual.TAX_CLASS3 = 'a';
        actual.TAX_CLASS4 = 'a';
        actual.TAX_CLASS5 = 'a';
        actual.TAX_CLASS6 = 'a';
        actual.TAX_CLASS7 = 'a';
        actual.TAX_CLASS8 = 'a';
        actual.TAX_CLASS9 = 'a';
        actual.MAT_PR_GRP = 'a';
        actual.VAL_TYPE = 'a';
        actual.FIXDAT_QTY = 'a';
        actual.BOMEXPL_NO = 'a';
        actual.RESANALKEY = 'a';
        actual.REQMTS_TYP = 'a';
        actual.NO_GR_POST = 'a';
        actual.BUS_TRANST = 'a';
        actual.OVERHD_KEY = 'a';
        actual.CSTG_SHEET = 'a';
        actual.MATFRGTGRP = 'a';
        actual.PLDLVSHDIN = 'a';
        actual.SEQ_NO = 'a';
        actual.BIL_FORM = 'a';
        actual.DLI_PROFIL = 'a';
        actual.REV_TYPE = 'a';
        actual.BEGDEM_PER = 'a';
        actual.PR_REF_MAT = 'a';
        actual.REFOBJTYPE = 'a';
        actual.REFOBJKEY = 'a';
        actual.REFLOGSYS = 'a';
        actual.ORDER_PROB = 'a';
        actual.MAX_PL_DLV = 'a';
        actual.CFOP_CODE = 'a';
        actual.TAXLAWICMS = 'a';
        actual.TAXLAWIPI = 'a';
        actual.SD_TAXCODE = 'a';
        actual.ASSORT_MOD = 'a';
        actual.COMP_QUANT = 'a';
        actual.TARGET_VAL = 'a';
        actual.PROFIT_CTR = 'a';
        actual.ORDERID = 'a';
        actual.WBS_ELEM = 'a';
        actual.DEPREC_PER = 'a';
        actual.REF_DOC = 'a';
        actual.REF_DOC_IT = 'a';
        actual.REF_DOC_CA = 'a';
        actual.CUST_MAT35 = 'a';
        actual.EXCH_RATE_FI_V = 'a';
        actual.EXCHG_RATE_V = 'a';
        actual.ITEMGUID_ATP = 'a';
        actual.VAL_CONTR = 'a';
        actual.VAL_CON_I = 'a';
        actual.CONFIG_ID = 'a';
        actual.INST_ID = 'a';
        actual.MAT_EXT = 'a';
        actual.MAT_GUID = 'a';
        actual.MAT_VERS = 'a';
        actual.P_MAT_EXT = 'a';
        actual.P_MAT_GUID = 'a';
        actual.P_MAT_VERS = 'a';
        actual.FUNC_AREA = 'a';
        actual.ALTERN_BOM = 'a';
        actual.FKK_CONACCT = 'a';
        actual.EAN_UPC = 'a';
        actual.PRODCAT = 'a';
        actual.SHIP_TYPE = 'a';
        actual.S_PROC_IND = 'a';
        actual.BILL_REL = 'a';
        actual.VW_UEPOS = 'a';
        actual.CAMPAIGN = 'a';
        actual.DLVSCHDUSE = 'a';
        actual.SELECTION = 'a';
        actual.MAT_ENTRD = 'a';
        actual.LOG_SYSTEM_OWN = 'a';
        actual.ITM_TYPE_USAGE = 'a';
        actual.MAT_ENTRD_EXTERNAL = 'a';
        actual.MAT_ENTRD_GUID = 'a';
        actual.MAT_ENTRD_VERSION = 'a';
        actual.LOC_TAXCAT = 'a';
        actual.LOC_ZEROVAT = 'a';
        actual.LOC_ACTCODE = 'a';
        actual.LOC_DISTTYPE = 'a';
        actual.LOC_TXRELCLAS = 'a';
        actual.CALC_MOTIVE = 'a';
        actual.FUND = 'a';
        actual.FUNDS_CTR = 'a';
        actual.CMMT_ITEM = 'a';
        actual.GRANT_NBR = 'a';
        actual.BUDGET_PERIOD = 'a';
        actual.TAXLAWISS = 'a';
        actual.TAXLAWCOFINS = 'a';
        actual.TAXLAWPIS = 'a';
        actual.TREASURY_ACC_SYMBOL = 'a';
        actual.BUSINESS_EVENT_TCODE = 'a';
        actual.MODIFICATION_ALLOWED = 'a';
        actual.CANCELLATION_ALLOWED = 'a';
        actual.PAYMENT_METHODS = 'a';
        actual.BUSINESS_PARTNER_NO = 'a';
        actual.REPORTING_FREQ = 'a';
        actual.CFOP_LONG = 'a';
        actual.SEPA_MANDATE_ID = 'a';
        actual.REQ_SEGMENT = 'a';
        actual.TP_SUBLEVL = 'a';
        actual.TP_AGENCID = 'a';
        actual.TP_ALTRAID = 'a';
        actual.TP_BEGPER = 'a';
        actual.TP_ENDPER = 'a';
        actual.TP_AVTYPE = 'a';
        actual.TP_MAIN_ACCT = 'a';
        actual.TP_SUB_ACCT = 'a';
        actual.TP_BETC = 'a';
        actual.REVACC_REFID = 'a';
        actual.REVACC_REFTYPE = 'a';
        actual.REF_DOC_CA_LONG = 'a';
        actual.INCOTERMSV = 'a';
        actual.INCOTERMS2L = 'a';
        actual.INCOTERMS3L = 'a';
        actual.MATERIAL_LONG = 'a';
        actual.PR_REF_MAT_LONG = 'a';
        actual.MAT_ENTRD_LONG = 'a';
        actual.PO_QUAN = 'a';
        actual.PO_UNIT = 'a';
        actual.REQ_SEG_LONG = 'a';
        actual.SHORT_TEXT2 = 'a';
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.UPDATEFLAG);
        system.assertEquals('a', actual.HG_LV_ITEM);
        system.assertEquals('a', actual.PO_ITM_NO);
        system.assertEquals('a', actual.MATERIAL);
        system.assertEquals('a', actual.ALT_TO_ITM);
        system.assertEquals('a', actual.CUST_MAT22);
        system.assertEquals('a', actual.BATCH);
        system.assertEquals('a', actual.DLV_GROUP);
        system.assertEquals('a', actual.PART_DLV);
        system.assertEquals('a', actual.REASON_REJ);
        system.assertEquals('a', actual.BILL_BLOCK);
        system.assertEquals('a', actual.BILL_DATE);
        system.assertEquals('a', actual.PLANT);
        system.assertEquals('a', actual.STORE_LOC);
        system.assertEquals('a', actual.TARGET_QTY);
        system.assertEquals('a', actual.TARGET_QU);
        system.assertEquals('a', actual.T_UNIT_ISO);
        system.assertEquals('a', actual.ITEM_CATEG);
        system.assertEquals('a', actual.SHORT_TEXT);
        system.assertEquals('a', actual.PRC_GROUP1);
        system.assertEquals('a', actual.PRC_GROUP2);
        system.assertEquals('a', actual.PRC_GROUP3);
        system.assertEquals('a', actual.PRC_GROUP4);
        system.assertEquals('a', actual.PRC_GROUP5);
        system.assertEquals('a', actual.PROD_HIERA);
        system.assertEquals('a', actual.MATL_GROUP);
        system.assertEquals('a', actual.PURCH_NO_C);
        system.assertEquals('a', actual.PURCH_DATE);
        system.assertEquals('a', actual.PO_METHOD);
        system.assertEquals('a', actual.REF_1);
        system.assertEquals('a', actual.PURCH_NO_S);
        system.assertEquals('a', actual.PO_DAT_S);
        system.assertEquals('a', actual.PO_METH_S);
        system.assertEquals('a', actual.REF_1_S);
        system.assertEquals('a', actual.POITM_NO_S);
        system.assertEquals('a', actual.PRICE_GRP);
        system.assertEquals('a', actual.CUST_GROUP);
        system.assertEquals('a', actual.SALES_DIST);
        system.assertEquals('a', actual.PRICE_LIST);
        system.assertEquals('a', actual.INCOTERMS1);
        system.assertEquals('a', actual.INCOTERMS2);
        system.assertEquals('a', actual.ORDCOMP_IN);
        system.assertEquals('a', actual.BILL_SCHED);
        system.assertEquals('a', actual.INVO_SCHED);
        system.assertEquals('a', actual.MN_INVOICE);
        system.assertEquals('a', actual.EX_RATE_FI);
        system.assertEquals('a', actual.ADD_VAL_DY);
        system.assertEquals('a', actual.FIX_VAL_DY);
        system.assertEquals('a', actual.PMNTTRMS);
        system.assertEquals('a', actual.PYMT_METH);
        system.assertEquals('a', actual.ACCNT_ASGN);
        system.assertEquals('a', actual.EXCHG_RATE);
        system.assertEquals('a', actual.PRICE_DATE);
        system.assertEquals('a', actual.SERV_DATE);
        system.assertEquals('a', actual.DUNN_KEY);
        system.assertEquals('a', actual.DUNN_BLOCK);
        system.assertEquals('a', actual.PROMOTION);
        system.assertEquals('a', actual.PMTGAR_PRO);
        system.assertEquals('a', actual.DOC_NUM_FI);
        system.assertEquals('a', actual.DEPARTM_NO);
        system.assertEquals('a', actual.REC_POINT);
        system.assertEquals('a', actual.CSTCNDGRP1);
        system.assertEquals('a', actual.CSTCNDGRP2);
        system.assertEquals('a', actual.CSTCNDGRP3);
        system.assertEquals('a', actual.CSTCNDGRP4);
        system.assertEquals('a', actual.CSTCNDGRP5);
        system.assertEquals('a', actual.DLV_TIME);
        system.assertEquals('a', actual.SALES_UNIT);
        system.assertEquals('a', actual.TRG_QTY_NO);
        system.assertEquals('a', actual.TRGQTY_DEN);
        system.assertEquals('a', actual.RNDDLV_QTY);
        system.assertEquals('a', actual.MAXDEVAMNT);
        system.assertEquals('a', actual.MAXDEVPER);
        system.assertEquals('a', actual.MAXDEV_DAY);
        system.assertEquals('a', actual.USAGE_IND);
        system.assertEquals('a', actual.FIXED_QUAN);
        system.assertEquals('a', actual.UNLMT_DLV);
        system.assertEquals('a', actual.OVERDLVTOL);
        system.assertEquals('a', actual.UNDDLV_TOL);
        system.assertEquals('a', actual.DIVISION);
        system.assertEquals('a', actual.SALQTYNUM);
        system.assertEquals('a', actual.SALQTYDEN);
        system.assertEquals('a', actual.GROSS_WGHT);
        system.assertEquals('a', actual.NET_WEIGHT);
        system.assertEquals('a', actual.UNTOF_WGHT);
        system.assertEquals('a', actual.VOLUME);
        system.assertEquals('a', actual.VOLUNIT);
        system.assertEquals('a', actual.DLV_PRIO);
        system.assertEquals('a', actual.SHIP_POINT);
        system.assertEquals('a', actual.ROUTE);
        system.assertEquals('a', actual.TAX_CLASS1);
        system.assertEquals('a', actual.TAX_CLASS2);
        system.assertEquals('a', actual.TAX_CLASS3);
        system.assertEquals('a', actual.TAX_CLASS4);
        system.assertEquals('a', actual.TAX_CLASS5);
        system.assertEquals('a', actual.TAX_CLASS6);
        system.assertEquals('a', actual.TAX_CLASS7);
        system.assertEquals('a', actual.TAX_CLASS8);
        system.assertEquals('a', actual.TAX_CLASS9);
        system.assertEquals('a', actual.MAT_PR_GRP);
        system.assertEquals('a', actual.VAL_TYPE);
        system.assertEquals('a', actual.FIXDAT_QTY);
        system.assertEquals('a', actual.BOMEXPL_NO);
        system.assertEquals('a', actual.RESANALKEY);
        system.assertEquals('a', actual.REQMTS_TYP);
        system.assertEquals('a', actual.NO_GR_POST);
        system.assertEquals('a', actual.BUS_TRANST);
        system.assertEquals('a', actual.OVERHD_KEY);
        system.assertEquals('a', actual.CSTG_SHEET);
        system.assertEquals('a', actual.MATFRGTGRP);
        system.assertEquals('a', actual.PLDLVSHDIN);
        system.assertEquals('a', actual.SEQ_NO);
        system.assertEquals('a', actual.BIL_FORM);
        system.assertEquals('a', actual.DLI_PROFIL);
        system.assertEquals('a', actual.REV_TYPE);
        system.assertEquals('a', actual.BEGDEM_PER);
        system.assertEquals('a', actual.PR_REF_MAT);
        system.assertEquals('a', actual.REFOBJTYPE);
        system.assertEquals('a', actual.REFOBJKEY);
        system.assertEquals('a', actual.REFLOGSYS);
        system.assertEquals('a', actual.ORDER_PROB);
        system.assertEquals('a', actual.MAX_PL_DLV);
        system.assertEquals('a', actual.CFOP_CODE);
        system.assertEquals('a', actual.TAXLAWICMS);
        system.assertEquals('a', actual.TAXLAWIPI);
        system.assertEquals('a', actual.SD_TAXCODE);
        system.assertEquals('a', actual.ASSORT_MOD);
        system.assertEquals('a', actual.COMP_QUANT);
        system.assertEquals('a', actual.TARGET_VAL);
        system.assertEquals('a', actual.PROFIT_CTR);
        system.assertEquals('a', actual.ORDERID);
        system.assertEquals('a', actual.WBS_ELEM);
        system.assertEquals('a', actual.DEPREC_PER);
        system.assertEquals('a', actual.REF_DOC);
        system.assertEquals('a', actual.REF_DOC_IT);
        system.assertEquals('a', actual.REF_DOC_CA);
        system.assertEquals('a', actual.CUST_MAT35);
        system.assertEquals('a', actual.EXCH_RATE_FI_V);
        system.assertEquals('a', actual.EXCHG_RATE_V);
        system.assertEquals('a', actual.ITEMGUID_ATP);
        system.assertEquals('a', actual.VAL_CONTR);
        system.assertEquals('a', actual.VAL_CON_I);
        system.assertEquals('a', actual.CONFIG_ID);
        system.assertEquals('a', actual.INST_ID);
        system.assertEquals('a', actual.MAT_EXT);
        system.assertEquals('a', actual.MAT_GUID);
        system.assertEquals('a', actual.MAT_VERS);
        system.assertEquals('a', actual.P_MAT_EXT);
        system.assertEquals('a', actual.P_MAT_GUID);
        system.assertEquals('a', actual.P_MAT_VERS);
        system.assertEquals('a', actual.FUNC_AREA);
        system.assertEquals('a', actual.ALTERN_BOM);
        system.assertEquals('a', actual.FKK_CONACCT);
        system.assertEquals('a', actual.EAN_UPC);
        system.assertEquals('a', actual.PRODCAT);
        system.assertEquals('a', actual.SHIP_TYPE);
        system.assertEquals('a', actual.S_PROC_IND);
        system.assertEquals('a', actual.BILL_REL);
        system.assertEquals('a', actual.VW_UEPOS);
        system.assertEquals('a', actual.CAMPAIGN);
        system.assertEquals('a', actual.DLVSCHDUSE);
        system.assertEquals('a', actual.SELECTION);
        system.assertEquals('a', actual.MAT_ENTRD);
        system.assertEquals('a', actual.LOG_SYSTEM_OWN);
        system.assertEquals('a', actual.ITM_TYPE_USAGE);
        system.assertEquals('a', actual.MAT_ENTRD_EXTERNAL);
        system.assertEquals('a', actual.MAT_ENTRD_GUID);
        system.assertEquals('a', actual.MAT_ENTRD_VERSION);
        system.assertEquals('a', actual.LOC_TAXCAT);
        system.assertEquals('a', actual.LOC_ZEROVAT);
        system.assertEquals('a', actual.LOC_ACTCODE);
        system.assertEquals('a', actual.LOC_DISTTYPE);
        system.assertEquals('a', actual.LOC_TXRELCLAS);
        system.assertEquals('a', actual.CALC_MOTIVE);
        system.assertEquals('a', actual.FUND);
        system.assertEquals('a', actual.FUNDS_CTR);
        system.assertEquals('a', actual.CMMT_ITEM);
        system.assertEquals('a', actual.GRANT_NBR);
        system.assertEquals('a', actual.BUDGET_PERIOD);
        system.assertEquals('a', actual.TAXLAWISS);
        system.assertEquals('a', actual.TAXLAWCOFINS);
        system.assertEquals('a', actual.TAXLAWPIS);
        system.assertEquals('a', actual.TREASURY_ACC_SYMBOL);
        system.assertEquals('a', actual.BUSINESS_EVENT_TCODE);
        system.assertEquals('a', actual.MODIFICATION_ALLOWED);
        system.assertEquals('a', actual.CANCELLATION_ALLOWED);
        system.assertEquals('a', actual.PAYMENT_METHODS);
        system.assertEquals('a', actual.BUSINESS_PARTNER_NO);
        system.assertEquals('a', actual.REPORTING_FREQ);
        system.assertEquals('a', actual.CFOP_LONG);
        system.assertEquals('a', actual.SEPA_MANDATE_ID);
        system.assertEquals('a', actual.REQ_SEGMENT);
        system.assertEquals('a', actual.TP_SUBLEVL);
        system.assertEquals('a', actual.TP_AGENCID);
        system.assertEquals('a', actual.TP_ALTRAID);
        system.assertEquals('a', actual.TP_BEGPER);
        system.assertEquals('a', actual.TP_ENDPER);
        system.assertEquals('a', actual.TP_AVTYPE);
        system.assertEquals('a', actual.TP_MAIN_ACCT);
        system.assertEquals('a', actual.TP_SUB_ACCT);
        system.assertEquals('a', actual.TP_BETC);
        system.assertEquals('a', actual.REVACC_REFID);
        system.assertEquals('a', actual.REVACC_REFTYPE);
        system.assertEquals('a', actual.REF_DOC_CA_LONG);
        system.assertEquals('a', actual.INCOTERMSV);
        system.assertEquals('a', actual.INCOTERMS2L);
        system.assertEquals('a', actual.INCOTERMS3L);
        system.assertEquals('a', actual.MATERIAL_LONG);
        system.assertEquals('a', actual.PR_REF_MAT_LONG);
        system.assertEquals('a', actual.MAT_ENTRD_LONG);
        system.assertEquals('a', actual.PO_QUAN);
        system.assertEquals('a', actual.PO_UNIT);
        system.assertEquals('a', actual.REQ_SEG_LONG);
        system.assertEquals('a', actual.SHORT_TEXT2);
    }
    @istest
    private static void testORDER_PARTNERS() {
        sapSalesOrderCreate.ORDER_PARTNERS actual = new sapSalesOrderCreate.ORDER_PARTNERS();

        actual.PARTN_ROLE = 'a';
        actual.PARTN_NUMB = 'a';
        actual.ITM_NUMBER = 'a';
        actual.TITLE = 'a';
        actual.NAME = 'a';
        actual.NAME_2 = 'a';
        actual.NAME_3 = 'a';
        actual.NAME_4 = 'a';
        actual.STREET = 'a';
        actual.COUNTRY = 'a';
        actual.COUNTR_ISO = 'a';
        actual.POSTL_CODE = 'a';
        actual.POBX_PCD = 'a';
        actual.POBX_CTY = 'a';
        actual.CITY = 'a';
        actual.DISTRICT = 'a';
        actual.REGION = 'a';
        actual.PO_BOX = 'a';
        actual.TELEPHONE = 'a';
        actual.TELEPHONE2 = 'a';
        actual.TELEBOX = 'a';
        actual.FAX_NUMBER = 'a';
        actual.TELETEX_NO = 'a';
        actual.TELEX_NO = 'a';
        actual.LANGU = 'a';
        actual.LANGU_ISO = 'a';
        actual.UNLOAD_PT = 'a';
        actual.TRANSPZONE = 'a';
        actual.TAXJURCODE = 'a';
        actual.ADDRESS = 'a';
        actual.PRIV_ADDR = 'a';
        actual.ADDR_TYPE = 'a';
        actual.ADDR_ORIG = 'a';
        actual.ADDR_LINK = 'a';
        actual.REFOBJTYPE = 'a';
        actual.REFOBJKEY = 'a';
        actual.REFLOGSYS = 'a';
        actual.VAT_REG_NO = 'a';
        system.assertEquals('a', actual.PARTN_ROLE);
        system.assertEquals('a', actual.PARTN_NUMB);
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.TITLE);
        system.assertEquals('a', actual.NAME);
        system.assertEquals('a', actual.NAME_2);
        system.assertEquals('a', actual.NAME_3);
        system.assertEquals('a', actual.NAME_4);
        system.assertEquals('a', actual.STREET);
        system.assertEquals('a', actual.COUNTRY);
        system.assertEquals('a', actual.COUNTR_ISO);
        system.assertEquals('a', actual.POSTL_CODE);
        system.assertEquals('a', actual.POBX_PCD);
        system.assertEquals('a', actual.POBX_CTY);
        system.assertEquals('a', actual.CITY);
        system.assertEquals('a', actual.DISTRICT);
        system.assertEquals('a', actual.REGION);
        system.assertEquals('a', actual.PO_BOX);
        system.assertEquals('a', actual.TELEPHONE);
        system.assertEquals('a', actual.TELEPHONE2);
        system.assertEquals('a', actual.TELEBOX);
        system.assertEquals('a', actual.FAX_NUMBER);
        system.assertEquals('a', actual.TELETEX_NO);
        system.assertEquals('a', actual.TELEX_NO);
        system.assertEquals('a', actual.LANGU);
        system.assertEquals('a', actual.LANGU_ISO);
        system.assertEquals('a', actual.UNLOAD_PT);
        system.assertEquals('a', actual.TRANSPZONE);
        system.assertEquals('a', actual.TAXJURCODE);
        system.assertEquals('a', actual.ADDRESS);
        system.assertEquals('a', actual.PRIV_ADDR);
        system.assertEquals('a', actual.ADDR_TYPE);
        system.assertEquals('a', actual.ADDR_ORIG);
        system.assertEquals('a', actual.ADDR_LINK);
        system.assertEquals('a', actual.REFOBJTYPE);
        system.assertEquals('a', actual.REFOBJKEY);
        system.assertEquals('a', actual.REFLOGSYS);
        system.assertEquals('a', actual.VAT_REG_NO);
    }
    @istest
    private static void testORDER_SCHEDULES_IN() {
        sapSalesOrderCreate.ORDER_SCHEDULES_IN actual = new sapSalesOrderCreate.ORDER_SCHEDULES_IN();

        actual.ITM_NUMBER = 'a';
        actual.SCHED_LINE = 'a';
        actual.REQ_DATE = Date.newInstance(2000,1,1);
        actual.DATE_TYPE = 'a';
        actual.REQ_TIME = 'a';
        actual.REQ_QTY = 0;
        actual.REQ_DLV_BL = 'a';
        actual.SCHED_TYPE = 'a';
        actual.TP_DATE = Date.newInstance(2000,1,1);
        actual.MS_DATE = Date.newInstance(2000,1,1);
        actual.LOAD_DATE = Date.newInstance(2000,1,1);
        actual.GI_DATE = Date.newInstance(2000,1,1);
        actual.TP_TIME = 'a';
        actual.MS_TIME = 'a';
        actual.LOAD_TIME = 'a';
        actual.GI_TIME = 'a';
        actual.REFOBJTYPE = 'a';
        actual.REFOBJKEY = 'a';
        actual.REFLOGSYS = 'a';
        actual.DLV_DATE = Date.newInstance(2000,1,1);
        actual.DLV_TIME = 'a';
        actual.REL_TYPE = 'a';
        actual.PLAN_SCHED_TYPE = 'a';
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.SCHED_LINE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.REQ_DATE);
        system.assertEquals('a', actual.DATE_TYPE);
        system.assertEquals('a', actual.REQ_TIME);
        system.assertEquals(0, actual.REQ_QTY);
        system.assertEquals('a', actual.REQ_DLV_BL);
        system.assertEquals('a', actual.SCHED_TYPE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.TP_DATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.MS_DATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.LOAD_DATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.GI_DATE);
        system.assertEquals('a', actual.TP_TIME);
        system.assertEquals('a', actual.MS_TIME);
        system.assertEquals('a', actual.LOAD_TIME);
        system.assertEquals('a', actual.GI_TIME);
        system.assertEquals('a', actual.REFOBJTYPE);
        system.assertEquals('a', actual.REFOBJKEY);
        system.assertEquals('a', actual.REFLOGSYS);
        system.assertEquals(Date.newInstance(2000,1,1), actual.DLV_DATE);
        system.assertEquals('a', actual.DLV_TIME);
        system.assertEquals('a', actual.REL_TYPE);
        system.assertEquals('a', actual.PLAN_SCHED_TYPE);
    }
    @istest
    private static void testORDER_SCHEDULES_INX() {
        sapSalesOrderCreate.ORDER_SCHEDULES_INX actual = new sapSalesOrderCreate.ORDER_SCHEDULES_INX();

        actual.ITM_NUMBER = 'a';
        actual.SCHED_LINE = 'a';
        actual.UPDATEFLAG = 'a';
        actual.REQ_DATE = 'a';
        actual.DATE_TYPE = 'a';
        actual.REQ_TIME = 'a';
        actual.REQ_QTY = 'a';
        actual.REQ_DLV_BL = 'a';
        actual.SCHED_TYPE = 'a';
        actual.TP_DATE = 'a';
        actual.MS_DATE = 'a';
        actual.LOAD_DATE = 'a';
        actual.GI_DATE = 'a';
        actual.TP_TIME = 'a';
        actual.MS_TIME = 'a';
        actual.LOAD_TIME = 'a';
        actual.GI_TIME = 'a';
        actual.REFOBJTYPE = 'a';
        actual.REFOBJKEY = 'a';
        actual.DLV_DATE = 'a';
        actual.DLV_TIME = 'a';
        actual.REL_TYPE = 'a';
        actual.PLAN_SCHED_TYPE = 'a';
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.SCHED_LINE);
        system.assertEquals('a', actual.UPDATEFLAG);
        system.assertEquals('a', actual.REQ_DATE);
        system.assertEquals('a', actual.DATE_TYPE);
        system.assertEquals('a', actual.REQ_TIME);
        system.assertEquals('a', actual.REQ_QTY);
        system.assertEquals('a', actual.REQ_DLV_BL);
        system.assertEquals('a', actual.SCHED_TYPE);
        system.assertEquals('a', actual.TP_DATE);
        system.assertEquals('a', actual.MS_DATE);
        system.assertEquals('a', actual.LOAD_DATE);
        system.assertEquals('a', actual.GI_DATE);
        system.assertEquals('a', actual.TP_TIME);
        system.assertEquals('a', actual.MS_TIME);
        system.assertEquals('a', actual.LOAD_TIME);
        system.assertEquals('a', actual.GI_TIME);
        system.assertEquals('a', actual.REFOBJTYPE);
        system.assertEquals('a', actual.REFOBJKEY);
        system.assertEquals('a', actual.DLV_DATE);
        system.assertEquals('a', actual.DLV_TIME);
        system.assertEquals('a', actual.REL_TYPE);
        system.assertEquals('a', actual.PLAN_SCHED_TYPE);
    }
    @istest
    private static void testORDER_CONDITIONS_IN() {
        sapSalesOrderCreate.ORDER_CONDITIONS_IN actual = new sapSalesOrderCreate.ORDER_CONDITIONS_IN();

        actual.ITM_NUMBER = 'a';
        actual.COND_ST_NO = 'a';
        actual.COND_COUNT = 'a';
        actual.COND_TYPE = 'a';
        actual.COND_VALUE = 0;
        actual.CURRENCY_x = 'a';
        actual.COND_UNIT = 'a';
        actual.COND_P_UNT = 0;
        actual.CURR_ISO = 'a';
        actual.CD_UNT_ISO = 'a';
        actual.REFOBJTYPE = 'a';
        actual.REFOBJKEY = 'a';
        actual.REFLOGSYS = 'a';
        actual.APPLICATIO = 'a';
        actual.CONPRICDAT = Date.newInstance(2000,1,1);
        actual.CALCTYPCON = 'a';
        actual.CONBASEVAL = 0;
        actual.CONEXCHRAT = 0;
        actual.NUMCONVERT = 0;
        actual.DENOMINATO = 0;
        actual.CONDTYPE = 'a';
        actual.STAT_CON = 'a';
        actual.SCALETYPE = 'a';
        actual.ACCRUALS = 'a';
        actual.CONINVOLST = 'a';
        actual.CONDORIGIN = 'a';
        actual.GROUPCOND = 'a';
        actual.COND_UPDAT = 'a';
        actual.ACCESS_SEQ = 'a';
        actual.CONDCOUNT = 'a';
        actual.ROUNDOFFDI = 0;
        actual.CONDVALUE = 0;
        actual.CURRENCY_2 = 'a';
        actual.CURR_ISO_2 = 'a';
        actual.CONDCNTRL = 'a';
        actual.CONDISACTI = 'a';
        actual.CONDCLASS = 'a';
        actual.FACTBASVAL = 0;
        actual.SCALEBASIN = 'a';
        actual.SCALBASVAL = 0;
        actual.UNITMEASUR = 'a';
        actual.ISO_UNIT = 'a';
        actual.CURRENCKEY = 'a';
        actual.CURRENISO = 'a';
        actual.CONDINCOMP = 'a';
        actual.CONDCONFIG = 'a';
        actual.CONDCHAMAN = 'a';
        actual.COND_NO = 'a';
        actual.TAX_CODE = 'a';
        actual.VARCOND = 'a';
        actual.ACCOUNTKEY = 'a';
        actual.ACCOUNT_KE = 'a';
        actual.WT_WITHCD = 'a';
        actual.STRUCTCOND = 'a';
        actual.FACTCONBAS = 0;
        actual.CONDCOINHD = 'a';
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.COND_ST_NO);
        system.assertEquals('a', actual.COND_COUNT);
        system.assertEquals('a', actual.COND_TYPE);
        system.assertEquals(0, actual.COND_VALUE);
        system.assertEquals('a', actual.CURRENCY_x);
        system.assertEquals('a', actual.COND_UNIT);
        system.assertEquals(0, actual.COND_P_UNT);
        system.assertEquals('a', actual.CURR_ISO);
        system.assertEquals('a', actual.CD_UNT_ISO);
        system.assertEquals('a', actual.REFOBJTYPE);
        system.assertEquals('a', actual.REFOBJKEY);
        system.assertEquals('a', actual.REFLOGSYS);
        system.assertEquals('a', actual.APPLICATIO);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CONPRICDAT);
        system.assertEquals('a', actual.CALCTYPCON);
        system.assertEquals(0, actual.CONBASEVAL);
        system.assertEquals(0, actual.CONEXCHRAT);
        system.assertEquals(0, actual.NUMCONVERT);
        system.assertEquals(0, actual.DENOMINATO);
        system.assertEquals('a', actual.CONDTYPE);
        system.assertEquals('a', actual.STAT_CON);
        system.assertEquals('a', actual.SCALETYPE);
        system.assertEquals('a', actual.ACCRUALS);
        system.assertEquals('a', actual.CONINVOLST);
        system.assertEquals('a', actual.CONDORIGIN);
        system.assertEquals('a', actual.GROUPCOND);
        system.assertEquals('a', actual.COND_UPDAT);
        system.assertEquals('a', actual.ACCESS_SEQ);
        system.assertEquals('a', actual.CONDCOUNT);
        system.assertEquals(0, actual.ROUNDOFFDI);
        system.assertEquals(0, actual.CONDVALUE);
        system.assertEquals('a', actual.CURRENCY_2);
        system.assertEquals('a', actual.CURR_ISO_2);
        system.assertEquals('a', actual.CONDCNTRL);
        system.assertEquals('a', actual.CONDISACTI);
        system.assertEquals('a', actual.CONDCLASS);
        system.assertEquals(0, actual.FACTBASVAL);
        system.assertEquals('a', actual.SCALEBASIN);
        system.assertEquals(0, actual.SCALBASVAL);
        system.assertEquals('a', actual.UNITMEASUR);
        system.assertEquals('a', actual.ISO_UNIT);
        system.assertEquals('a', actual.CURRENCKEY);
        system.assertEquals('a', actual.CURRENISO);
        system.assertEquals('a', actual.CONDINCOMP);
        system.assertEquals('a', actual.CONDCONFIG);
        system.assertEquals('a', actual.CONDCHAMAN);
        system.assertEquals('a', actual.COND_NO);
        system.assertEquals('a', actual.TAX_CODE);
        system.assertEquals('a', actual.VARCOND);
        system.assertEquals('a', actual.ACCOUNTKEY);
        system.assertEquals('a', actual.ACCOUNT_KE);
        system.assertEquals('a', actual.WT_WITHCD);
        system.assertEquals('a', actual.STRUCTCOND);
        system.assertEquals(0, actual.FACTCONBAS);
        system.assertEquals('a', actual.CONDCOINHD);
    }
    @istest
    private static void testORDER_CONDITIONS_INX() {
        sapSalesOrderCreate.ORDER_CONDITIONS_INX actual = new sapSalesOrderCreate.ORDER_CONDITIONS_INX();

        actual.ITM_NUMBER = 'a';
        actual.COND_ST_NO = 'a';
        actual.COND_COUNT = 'a';
        actual.COND_TYPE = 'a';
        actual.UPDATEFLAG = 'a';
        actual.COND_VALUE = 'a';
        actual.CURRENCY_x = 'a';
        actual.COND_UNIT = 'a';
        actual.COND_P_UNT = 'a';
        actual.VARCOND = 'a';
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.COND_ST_NO);
        system.assertEquals('a', actual.COND_COUNT);
        system.assertEquals('a', actual.COND_TYPE);
        system.assertEquals('a', actual.UPDATEFLAG);
        system.assertEquals('a', actual.COND_VALUE);
        system.assertEquals('a', actual.CURRENCY_x);
        system.assertEquals('a', actual.COND_UNIT);
        system.assertEquals('a', actual.COND_P_UNT);
        system.assertEquals('a', actual.VARCOND);
    }
    @istest
    private static void testORDER_CFGS_REF() {
        sapSalesOrderCreate.ORDER_CFGS_REF actual = new sapSalesOrderCreate.ORDER_CFGS_REF();

        actual.POSEX = 'a';
        actual.CONFIG_ID = 'a';
        actual.ROOT_ID = 'a';
        actual.SCE = 'a';
        actual.KBNAME = 'a';
        actual.KBVERSION = 'a';
        actual.COMPLETE = 'a';
        actual.CONSISTENT = 'a';
        actual.CFGINFO = 'a';
        actual.KBPROFILE = 'a';
        actual.KBLANGUAGE = 'a';
        actual.CBASE_ID = 'a';
        actual.CBASE_ID_TYPE = 'a';
        system.assertEquals('a', actual.POSEX);
        system.assertEquals('a', actual.CONFIG_ID);
        system.assertEquals('a', actual.ROOT_ID);
        system.assertEquals('a', actual.SCE);
        system.assertEquals('a', actual.KBNAME);
        system.assertEquals('a', actual.KBVERSION);
        system.assertEquals('a', actual.COMPLETE);
        system.assertEquals('a', actual.CONSISTENT);
        system.assertEquals('a', actual.CFGINFO);
        system.assertEquals('a', actual.KBPROFILE);
        system.assertEquals('a', actual.KBLANGUAGE);
        system.assertEquals('a', actual.CBASE_ID);
        system.assertEquals('a', actual.CBASE_ID_TYPE);
    }
    @istest
    private static void testORDER_CFGS_INST() {
        sapSalesOrderCreate.ORDER_CFGS_INST actual = new sapSalesOrderCreate.ORDER_CFGS_INST();

        actual.CONFIG_ID = 'a';
        actual.INST_ID = 'a';
        actual.OBJ_TYPE = 'a';
        actual.CLASS_TYPE = 'a';
        actual.OBJ_KEY = 'a';
        actual.OBJ_TXT = 'a';
        actual.QUANTITY = 'a';
        actual.AUTHOR = 'a';
        actual.QUANTITY_UNIT = 'a';
        actual.COMPLETE = 'a';
        actual.CONSISTENT = 'a';
        actual.OBJECT_GUID = 'a';
        actual.PERSIST_ID = 'a';
        actual.PERSIST_ID_TYPE = 'a';
        system.assertEquals('a', actual.CONFIG_ID);
        system.assertEquals('a', actual.INST_ID);
        system.assertEquals('a', actual.OBJ_TYPE);
        system.assertEquals('a', actual.CLASS_TYPE);
        system.assertEquals('a', actual.OBJ_KEY);
        system.assertEquals('a', actual.OBJ_TXT);
        system.assertEquals('a', actual.QUANTITY);
        system.assertEquals('a', actual.AUTHOR);
        system.assertEquals('a', actual.QUANTITY_UNIT);
        system.assertEquals('a', actual.COMPLETE);
        system.assertEquals('a', actual.CONSISTENT);
        system.assertEquals('a', actual.OBJECT_GUID);
        system.assertEquals('a', actual.PERSIST_ID);
        system.assertEquals('a', actual.PERSIST_ID_TYPE);
    }
    @istest
    private static void testORDER_CFGS_PART_OF() {
        sapSalesOrderCreate.ORDER_CFGS_PART_OF actual = new sapSalesOrderCreate.ORDER_CFGS_PART_OF();

        actual.CONFIG_ID = 'a';
        actual.PARENT_ID = 'a';
        actual.INST_ID = 'a';
        actual.PART_OF_NO = 'a';
        actual.OBJ_TYPE = 'a';
        actual.CLASS_TYPE = 'a';
        actual.OBJ_KEY = 'a';
        actual.AUTHOR = 'a';
        actual.SALES_RELEVANT = 'a';
        actual.PART_OF_GUID = 'a';
        system.assertEquals('a', actual.CONFIG_ID);
        system.assertEquals('a', actual.PARENT_ID);
        system.assertEquals('a', actual.INST_ID);
        system.assertEquals('a', actual.PART_OF_NO);
        system.assertEquals('a', actual.OBJ_TYPE);
        system.assertEquals('a', actual.CLASS_TYPE);
        system.assertEquals('a', actual.OBJ_KEY);
        system.assertEquals('a', actual.AUTHOR);
        system.assertEquals('a', actual.SALES_RELEVANT);
        system.assertEquals('a', actual.PART_OF_GUID);
    }
    @istest
    private static void testORDER_CFGS_VALUE() {
        sapSalesOrderCreate.ORDER_CFGS_VALUE actual = new sapSalesOrderCreate.ORDER_CFGS_VALUE();

        actual.CONFIG_ID = 'a';
        actual.INST_ID = 'a';
        actual.CHARC = 'a';
        actual.CHARC_TXT = 'a';
        actual.VALUE = 'a';
        actual.VALUE_TXT = 'a';
        actual.AUTHOR = 'a';
        actual.VALUE_TO = 'a';
        actual.VALCODE = 'a';
        system.assertEquals('a', actual.CONFIG_ID);
        system.assertEquals('a', actual.INST_ID);
        system.assertEquals('a', actual.CHARC);
        system.assertEquals('a', actual.CHARC_TXT);
        system.assertEquals('a', actual.VALUE);
        system.assertEquals('a', actual.VALUE_TXT);
        system.assertEquals('a', actual.AUTHOR);
        system.assertEquals('a', actual.VALUE_TO);
        system.assertEquals('a', actual.VALCODE);
    }
    @istest
    private static void testORDER_CFGS_BLOB() {
        sapSalesOrderCreate.ORDER_CFGS_BLOB actual = new sapSalesOrderCreate.ORDER_CFGS_BLOB();

        actual.CONFIG_ID = 'a';
        actual.CONTEXT = 'a';
        system.assertEquals('a', actual.CONFIG_ID);
        system.assertEquals('a', actual.CONTEXT);
    }
    @istest
    private static void testORDER_CFGS_VK() {
        sapSalesOrderCreate.ORDER_CFGS_VK actual = new sapSalesOrderCreate.ORDER_CFGS_VK();

        actual.CONFIG_ID = 'a';
        actual.INST_ID = 'a';
        actual.VKEY = 'a';
        actual.FACTOR = 'a';
        system.assertEquals('a', actual.CONFIG_ID);
        system.assertEquals('a', actual.INST_ID);
        system.assertEquals('a', actual.VKEY);
        system.assertEquals('a', actual.FACTOR);
    }
    @istest
    private static void testORDER_CFGS_REFINST() {
        sapSalesOrderCreate.ORDER_CFGS_REFINST actual = new sapSalesOrderCreate.ORDER_CFGS_REFINST();

        actual.POSEX = 'a';
        actual.CONFIG_ID = 'a';
        actual.INST_ID = 'a';
        system.assertEquals('a', actual.POSEX);
        system.assertEquals('a', actual.CONFIG_ID);
        system.assertEquals('a', actual.INST_ID);
    }
    @istest
    private static void testORDER_CCARD() {
        sapSalesOrderCreate.ORDER_CCARD actual = new sapSalesOrderCreate.ORDER_CCARD();

        actual.CC_TYPE = 'a';
        actual.CC_NUMBER = 'a';
        actual.CC_VALID_T = Date.newInstance(2000,1,1);
        actual.CC_NAME = 'a';
        actual.BILLAMOUNT = 0;
        actual.AUTH_FLAG = 'a';
        actual.AUTHAMOUNT = 0;
        actual.CURRENCY_x = 'a';
        actual.CURR_ISO = 'a';
        actual.AUTH_DATE = Date.newInstance(2000,1,1);
        actual.AUTH_TIME = 'a';
        actual.AUTH_CC_NO = 'a';
        actual.AUTH_REFNO = 'a';
        actual.CC_REACT = 'a';
        actual.CC_RE_AMOUNT = 0;
        actual.GL_ACCOUNT = 'a';
        actual.CC_STAT_EX = 'a';
        actual.CC_REACT_T = 'a';
        actual.VIRT_CARD = 'a';
        actual.MERCHIDCL = 'a';
        actual.PRE_AUTH = 'a';
        actual.CC_SEQ_NO = 'a';
        actual.AMOUNTCHAN = 'a';
        actual.AUTHORTYPE = 'a';
        actual.DATAORIGIN = 'a';
        actual.RADRCHECK1 = 'a';
        actual.RADRCHECK2 = 'a';
        actual.RADRCHECK3 = 'a';
        actual.RCARDCHECK = 'a';
        actual.CC_LIMITED = 'a';
        actual.CC_VERIF_VALUE = 'a';
        actual.CC_CTRL_FIELD = 'a';
        actual.CC_IN_USE_ST = 'a';
        system.assertEquals('a', actual.CC_TYPE);
        system.assertEquals('a', actual.CC_NUMBER);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CC_VALID_T);
        system.assertEquals('a', actual.CC_NAME);
        system.assertEquals(0, actual.BILLAMOUNT);
        system.assertEquals('a', actual.AUTH_FLAG);
        system.assertEquals(0, actual.AUTHAMOUNT);
        system.assertEquals('a', actual.CURRENCY_x);
        system.assertEquals('a', actual.CURR_ISO);
        system.assertEquals(Date.newInstance(2000,1,1), actual.AUTH_DATE);
        system.assertEquals('a', actual.AUTH_TIME);
        system.assertEquals('a', actual.AUTH_CC_NO);
        system.assertEquals('a', actual.AUTH_REFNO);
        system.assertEquals('a', actual.CC_REACT);
        system.assertEquals(0, actual.CC_RE_AMOUNT);
        system.assertEquals('a', actual.GL_ACCOUNT);
        system.assertEquals('a', actual.CC_STAT_EX);
        system.assertEquals('a', actual.CC_REACT_T);
        system.assertEquals('a', actual.VIRT_CARD);
        system.assertEquals('a', actual.MERCHIDCL);
        system.assertEquals('a', actual.PRE_AUTH);
        system.assertEquals('a', actual.CC_SEQ_NO);
        system.assertEquals('a', actual.AMOUNTCHAN);
        system.assertEquals('a', actual.AUTHORTYPE);
        system.assertEquals('a', actual.DATAORIGIN);
        system.assertEquals('a', actual.RADRCHECK1);
        system.assertEquals('a', actual.RADRCHECK2);
        system.assertEquals('a', actual.RADRCHECK3);
        system.assertEquals('a', actual.RCARDCHECK);
        system.assertEquals('a', actual.CC_LIMITED);
        system.assertEquals('a', actual.CC_VERIF_VALUE);
        system.assertEquals('a', actual.CC_CTRL_FIELD);
        system.assertEquals('a', actual.CC_IN_USE_ST);
    }
    @istest
    private static void testORDER_TEXT() {
        sapSalesOrderCreate.ORDER_TEXT actual = new sapSalesOrderCreate.ORDER_TEXT();

        actual.DOC_NUMBER = 'a';
        actual.ITM_NUMBER = 'a';
        actual.TEXT_ID = 'a';
        actual.LANGU = 'a';
        actual.LANGU_ISO = 'a';
        actual.FORMAT_COL = 'a';
        actual.TEXT_LINE = 'a';
        actual.FUNCTION = 'a';
        system.assertEquals('a', actual.DOC_NUMBER);
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.TEXT_ID);
        system.assertEquals('a', actual.LANGU);
        system.assertEquals('a', actual.LANGU_ISO);
        system.assertEquals('a', actual.FORMAT_COL);
        system.assertEquals('a', actual.TEXT_LINE);
        system.assertEquals('a', actual.FUNCTION);
    }
    @istest
    private static void testORDER_KEYS() {
        sapSalesOrderCreate.ORDER_KEYS actual = new sapSalesOrderCreate.ORDER_KEYS();

        actual.REFOBJTYP = 'a';
        actual.REFOBJECT = 'a';
        actual.REFOBJKEY = 'a';
        actual.REFLOGSYS = 'a';
        actual.DOC_NUMBER = 'a';
        actual.ITM_NUMBER = 'a';
        actual.SCHED_LIN = 'a';
        actual.COND_NO = 'a';
        actual.CONDITEMNO = 'a';
        actual.COND_ST_NO = 'a';
        actual.COND_COUNT = 'a';
        actual.COND_TYPE = 'a';
        actual.STATUS = 'a';
        actual.TINDEX = 'a';
        actual.ADDRESS = 'a';
        actual.ABRLI = 'a';
        actual.ABART = 'a';
        system.assertEquals('a', actual.REFOBJTYP);
        system.assertEquals('a', actual.REFOBJECT);
        system.assertEquals('a', actual.REFOBJKEY);
        system.assertEquals('a', actual.REFLOGSYS);
        system.assertEquals('a', actual.DOC_NUMBER);
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.SCHED_LIN);
        system.assertEquals('a', actual.COND_NO);
        system.assertEquals('a', actual.CONDITEMNO);
        system.assertEquals('a', actual.COND_ST_NO);
        system.assertEquals('a', actual.COND_COUNT);
        system.assertEquals('a', actual.COND_TYPE);
        system.assertEquals('a', actual.STATUS);
        system.assertEquals('a', actual.TINDEX);
        system.assertEquals('a', actual.ADDRESS);
        system.assertEquals('a', actual.ABRLI);
        system.assertEquals('a', actual.ABART);
    }
    @istest
    private static void testEXTENSIONIN() {
        sapSalesOrderCreate.EXTENSIONIN actual = new sapSalesOrderCreate.EXTENSIONIN();

        actual.STRUCTURE = 'a';
        actual.VALUEPART1 = 'a';
        actual.VALUEPART2 = 'a';
        actual.VALUEPART3 = 'a';
        actual.VALUEPART4 = 'a';
        system.assertEquals('a', actual.STRUCTURE);
        system.assertEquals('a', actual.VALUEPART1);
        system.assertEquals('a', actual.VALUEPART2);
        system.assertEquals('a', actual.VALUEPART3);
        system.assertEquals('a', actual.VALUEPART4);
    }
    @istest
    private static void testPARTNERADDRESSES() {
        sapSalesOrderCreate.PARTNERADDRESSES actual = new sapSalesOrderCreate.PARTNERADDRESSES();

        actual.ADDR_NO = 'a';
        actual.FORMOFADDR = 'a';
        actual.NAME = 'a';
        actual.NAME_2 = 'a';
        actual.NAME_3 = 'a';
        actual.NAME_4 = 'a';
        actual.C_O_NAME = 'a';
        actual.CITY = 'a';
        actual.DISTRICT = 'a';
        actual.CITY_NO = 'a';
        actual.POSTL_COD1 = 'a';
        actual.POSTL_COD2 = 'a';
        actual.POSTL_COD3 = 'a';
        actual.PO_BOX = 'a';
        actual.PO_BOX_CIT = 'a';
        actual.DELIV_DIS = 'a';
        actual.STREET = 'a';
        actual.STREET_NO = 'a';
        actual.STR_ABBR = 'a';
        actual.HOUSE_NO = 'a';
        actual.STR_SUPPL1 = 'a';
        actual.STR_SUPPL2 = 'a';
        actual.LOCATION = 'a';
        actual.BUILDING = 'a';
        actual.FLOOR = 'a';
        actual.ROOM_NO = 'a';
        actual.COUNTRY = 'a';
        actual.LANGU = 'a';
        actual.REGION = 'a';
        actual.SORT1 = 'a';
        actual.SORT2 = 'a';
        actual.TIME_ZONE = 'a';
        actual.TAXJURCODE = 'a';
        actual.ADR_NOTES = 'a';
        actual.COMM_TYPE = 'a';
        actual.TEL1_NUMBR = 'a';
        actual.TEL1_EXT = 'a';
        actual.FAX_NUMBER = 'a';
        actual.FAX_EXTENS = 'a';
        actual.STREET_LNG = 'a';
        actual.DISTRCT_NO = 'a';
        actual.CHCKSTATUS = 'a';
        actual.PBOXCIT_NO = 'a';
        actual.TRANSPZONE = 'a';
        actual.HOUSE_NO2 = 'a';
        actual.E_MAIL = 'a';
        actual.STR_SUPPL3 = 'a';
        actual.TITLE = 'a';
        actual.COUNTRYISO = 'a';
        actual.LANGU_ISO = 'a';
        actual.BUILD_LONG = 'a';
        actual.REGIOGROUP = 'a';
        actual.HOME_CITY = 'a';
        actual.HOMECITYNO = 'a';
        actual.PCODE1_EXT = 'a';
        actual.PCODE2_EXT = 'a';
        actual.PCODE3_EXT = 'a';
        actual.PO_W_O_NO = 'a';
        actual.PO_BOX_REG = 'a';
        actual.POBOX_CTRY = 'a';
        actual.PO_CTRYISO = 'a';
        actual.HOMEPAGE = 'a';
        actual.DONT_USE_S = 'a';
        actual.DONT_USE_P = 'a';
        actual.HOUSE_NO3 = 'a';
        actual.LANGU_CR = 'a';
        actual.LANGUCRISO = 'a';
        actual.PO_BOX_LOBBY = 'a';
        actual.DELI_SERV_TYPE = 'a';
        actual.DELI_SERV_NUMBER = 'a';
        actual.URI_TYPE = 'a';
        actual.COUNTY_CODE = 'a';
        actual.COUNTY = 'a';
        actual.TOWNSHIP_CODE = 'a';
        actual.TOWNSHIP = 'a';
        actual.XPCPT = 'a';
        actual.ZZMOBPHONE = 'a';
        actual.ZZMOBPHONECOUNTRY = 'a';
        actual.ZZTELCOUNTRY = 'a';
        actual.ZZFAXCOUNTRY = 'a';
        system.assertEquals('a', actual.ADDR_NO);
        system.assertEquals('a', actual.FORMOFADDR);
        system.assertEquals('a', actual.NAME);
        system.assertEquals('a', actual.NAME_2);
        system.assertEquals('a', actual.NAME_3);
        system.assertEquals('a', actual.NAME_4);
        system.assertEquals('a', actual.C_O_NAME);
        system.assertEquals('a', actual.CITY);
        system.assertEquals('a', actual.DISTRICT);
        system.assertEquals('a', actual.CITY_NO);
        system.assertEquals('a', actual.POSTL_COD1);
        system.assertEquals('a', actual.POSTL_COD2);
        system.assertEquals('a', actual.POSTL_COD3);
        system.assertEquals('a', actual.PO_BOX);
        system.assertEquals('a', actual.PO_BOX_CIT);
        system.assertEquals('a', actual.DELIV_DIS);
        system.assertEquals('a', actual.STREET);
        system.assertEquals('a', actual.STREET_NO);
        system.assertEquals('a', actual.STR_ABBR);
        system.assertEquals('a', actual.HOUSE_NO);
        system.assertEquals('a', actual.STR_SUPPL1);
        system.assertEquals('a', actual.STR_SUPPL2);
        system.assertEquals('a', actual.LOCATION);
        system.assertEquals('a', actual.BUILDING);
        system.assertEquals('a', actual.FLOOR);
        system.assertEquals('a', actual.ROOM_NO);
        system.assertEquals('a', actual.COUNTRY);
        system.assertEquals('a', actual.LANGU);
        system.assertEquals('a', actual.REGION);
        system.assertEquals('a', actual.SORT1);
        system.assertEquals('a', actual.SORT2);
        system.assertEquals('a', actual.TIME_ZONE);
        system.assertEquals('a', actual.TAXJURCODE);
        system.assertEquals('a', actual.ADR_NOTES);
        system.assertEquals('a', actual.COMM_TYPE);
        system.assertEquals('a', actual.TEL1_NUMBR);
        system.assertEquals('a', actual.TEL1_EXT);
        system.assertEquals('a', actual.FAX_NUMBER);
        system.assertEquals('a', actual.FAX_EXTENS);
        system.assertEquals('a', actual.STREET_LNG);
        system.assertEquals('a', actual.DISTRCT_NO);
        system.assertEquals('a', actual.CHCKSTATUS);
        system.assertEquals('a', actual.PBOXCIT_NO);
        system.assertEquals('a', actual.TRANSPZONE);
        system.assertEquals('a', actual.HOUSE_NO2);
        system.assertEquals('a', actual.E_MAIL);
        system.assertEquals('a', actual.STR_SUPPL3);
        system.assertEquals('a', actual.TITLE);
        system.assertEquals('a', actual.COUNTRYISO);
        system.assertEquals('a', actual.LANGU_ISO);
        system.assertEquals('a', actual.BUILD_LONG);
        system.assertEquals('a', actual.REGIOGROUP);
        system.assertEquals('a', actual.HOME_CITY);
        system.assertEquals('a', actual.HOMECITYNO);
        system.assertEquals('a', actual.PCODE1_EXT);
        system.assertEquals('a', actual.PCODE2_EXT);
        system.assertEquals('a', actual.PCODE3_EXT);
        system.assertEquals('a', actual.PO_W_O_NO);
        system.assertEquals('a', actual.PO_BOX_REG);
        system.assertEquals('a', actual.POBOX_CTRY);
        system.assertEquals('a', actual.PO_CTRYISO);
        system.assertEquals('a', actual.HOMEPAGE);
        system.assertEquals('a', actual.DONT_USE_S);
        system.assertEquals('a', actual.DONT_USE_P);
        system.assertEquals('a', actual.HOUSE_NO3);
        system.assertEquals('a', actual.LANGU_CR);
        system.assertEquals('a', actual.LANGUCRISO);
        system.assertEquals('a', actual.PO_BOX_LOBBY);
        system.assertEquals('a', actual.DELI_SERV_TYPE);
        system.assertEquals('a', actual.DELI_SERV_NUMBER);
        system.assertEquals('a', actual.URI_TYPE);
        system.assertEquals('a', actual.COUNTY_CODE);
        system.assertEquals('a', actual.COUNTY);
        system.assertEquals('a', actual.TOWNSHIP_CODE);
        system.assertEquals('a', actual.TOWNSHIP);
        system.assertEquals('a', actual.XPCPT);
        system.assertEquals('a', actual.ZZMOBPHONE);
        system.assertEquals('a', actual.ZZMOBPHONECOUNTRY);
        system.assertEquals('a', actual.ZZTELCOUNTRY);
        system.assertEquals('a', actual.ZZFAXCOUNTRY);
    }
    @istest
    private static void testEXTENSIONEX() {
        sapSalesOrderCreate.EXTENSIONEX actual = new sapSalesOrderCreate.EXTENSIONEX();

        actual.STRUCTURE = 'a';
        actual.VALUEPART1 = 'a';
        actual.VALUEPART2 = 'a';
        actual.VALUEPART3 = 'a';
        actual.VALUEPART4 = 'a';
        system.assertEquals('a', actual.STRUCTURE);
        system.assertEquals('a', actual.VALUEPART1);
        system.assertEquals('a', actual.VALUEPART2);
        system.assertEquals('a', actual.VALUEPART3);
        system.assertEquals('a', actual.VALUEPART4);
    }

    @istest
    private static void testRun() {
        sapSalesOrderCreate request = testSetup();
        sapSalesOrderCreate response = request.run();
        system.assertEquals('a', response.BAPI_SALESORDER_CREATEFROMDAT2.SALESDOCUMENTIN);
        string requestid = request.runAsync(null, null, new Continuation(10));
    }

    private static sapSalesOrderCreate testSetup() {
        overcast.TestingUtilities.SetupTestEnvironment('sapSalesOrderCreate');
        sapSalesOrderCreate request = new sapSalesOrderCreate();
        request.BAPI_SALESORDER_CREATEFROMDAT2.SALESDOCUMENTIN = 'a';

        string s = request.serialize();
        request.testResponse = '{"output":' + s + '}';
        return request;
    }


    @istest
    private static void testSerialize() {
        sapSalesOrderCreate input = new sapSalesOrderCreate();
        input.BAPI_SALESORDER_CREATEFROMDAT2.SALESDOCUMENTIN = 'a';
        sapSalesOrderCreate actual = (sapSalesOrderCreate)JSON.deserialize(input.serialize(), sapSalesOrderCreate.class);
        system.assertEquals('a', actual.BAPI_SALESORDER_CREATEFROMDAT2.SALESDOCUMENTIN);
    }

    @istest
    private static void testDeserialize() {
        sapSalesOrderCreate output = new sapSalesOrderCreate();
        output.BAPI_SALESORDER_CREATEFROMDAT2.SALESDOCUMENTIN = 'a';

        string s = output.serialize();
        sapSalesOrderCreate actual = sapSalesOrderCreate.deserialize('{"output":' + s + '}');
        system.assertEquals('a', actual.BAPI_SALESORDER_CREATEFROMDAT2.SALESDOCUMENTIN);
    }

    @istest
    private static void testDeserializeError() {
        try {
            sapSalesOrderCreate actual = sapSalesOrderCreate.deserialize('{"error":["A test error"]}');
            system.assert(false, 'No exception thrown');
        } catch (sapSalesOrderCreate.sapSalesOrderCreateException e) {
            system.assertEquals('A test error', e.getMessage());
            system.assertEquals(0, e.getBackendMessages().size());
        }

        try {
            sapSalesOrderCreate actual = sapSalesOrderCreate.deserialize('{"error":["A test error"],"backendErrorMessages":["A test message"]}');
            system.assert(false, 'No exception thrown');
        } catch (sapSalesOrderCreate.sapSalesOrderCreateException e) {
            system.assertEquals('A test error', e.getMessage());
            system.assertEquals(1, e.getMessages().size());
            system.assertEquals('A test error', e.getMessages()[0]);
            system.assertEquals(1, e.getBackendMessages().size());
            system.assertEquals('A test message', e.getBackendMessages()[0]);
        }
    }

    @istest
    private static void testGetterSetter() {
        sapSalesOrderCreate output = new sapSalesOrderCreate();
        output.set('SAMPLE1', new map<string, object>{
            'FIELD1' => 'VALUE1'
        });
        
        system.assertEquals(null, output.get('NOVAL'));
        
        map<string, object> sample1 = (map<string, object>)output.get('SAMPLE1');
        system.assertNotEquals(null, sample1);
        system.assertEquals('VALUE1', sample1.get('FIELD1'));		
    }
    
    @istest
    private static void testLoadAsyncResponse() {
        sapSalesOrderCreate output = new sapSalesOrderCreate();
        output.loadAsyncResponse('{"output":{"SAMPLE1":{"FIELD1":"VALUE1"}}}');
        system.assertEquals(null, output.get('NOVAL'));
        map<string, object> sample1 = (map<string, object>)output.get('SAMPLE1');
        system.assertNotEquals(null, sample1);
        system.assertEquals('VALUE1', sample1.get('FIELD1'));

        overcast.Globals.IsOCF = true;
        sapSalesOrderCreate output2 = new sapSalesOrderCreate();
        output2.loadAsyncResponse('{"output":{"SAMPLE1":{"FIELD1":"VALUE1"}}}');
        overcast.Globals.IsOCF = false;
        system.assertEquals(null, output2.get('NOVAL'));
        map<string, object> sample2 = (map<string, object>)output2.get('SAMPLE1');
        system.assertNotEquals(null, sample2);
        system.assertEquals('VALUE1', sample2.get('FIELD1'));
    }

    @istest
    private static void testGetMetadata() {
        sapSalesOrderCreate output = new sapSalesOrderCreate();
        map<string, overcast.TypeInfo> metadata = output.getMetadata();
        
        set<string> keys = metadata.keySet();
        system.assert(keys.contains('BAPI_SALESORDER_CREATEFROMDAT2'));
        system.assert(keys.contains('ORDER_HEADER_IN'));
        system.assert(keys.contains('ORDER_HEADER_INX'));
        system.assert(keys.contains('SENDER'));
        system.assert(keys.contains('LOGIC_SWITCH'));
        system.assert(keys.contains('RETURN_x'));
        system.assert(keys.contains('ORDER_ITEMS_IN'));
        system.assert(keys.contains('ORDER_ITEMS_INX'));
        system.assert(keys.contains('ORDER_PARTNERS'));
        system.assert(keys.contains('ORDER_SCHEDULES_IN'));
        system.assert(keys.contains('ORDER_SCHEDULES_INX'));
        system.assert(keys.contains('ORDER_CONDITIONS_IN'));
        system.assert(keys.contains('ORDER_CONDITIONS_INX'));
        system.assert(keys.contains('ORDER_CFGS_REF'));
        system.assert(keys.contains('ORDER_CFGS_INST'));
        system.assert(keys.contains('ORDER_CFGS_PART_OF'));
        system.assert(keys.contains('ORDER_CFGS_VALUE'));
        system.assert(keys.contains('ORDER_CFGS_BLOB'));
        system.assert(keys.contains('ORDER_CFGS_VK'));
        system.assert(keys.contains('ORDER_CFGS_REFINST'));
        system.assert(keys.contains('ORDER_CCARD'));
        system.assert(keys.contains('ORDER_TEXT'));
        system.assert(keys.contains('ORDER_KEYS'));
        system.assert(keys.contains('EXTENSIONIN'));
        system.assert(keys.contains('PARTNERADDRESSES'));
        system.assert(keys.contains('EXTENSIONEX'));
        
        overcast.TypeInfo first = metadata.get(output.getTopTypeName());
        system.assertNotEquals(null, first);
        system.assertEquals('BAPI_SALESORDER_CREATEFROMDAT2', first.name);
    }

    @istest
    private static void testException() {
        sapSalesOrderCreate.sapSalesOrderCreateException e = new sapSalesOrderCreate.sapSalesOrderCreateException();
        e.setMessages(new List<String>{'M1', 'M2'});
        System.assertEquals(2, e.getMessages().size());
    }

    @istest
    private static void testErrorResponse() {
        try {
            sapSalesOrderCreate.deserialize('');
            System.assert(false, 'Expected exception not thrown.');
        } catch (sapSalesOrderCreate.sapSalesOrderCreateException e) {
            System.assert(true);
        }
        
        try {
            sapSalesOrderCreate output = new sapSalesOrderCreate();
            output.loadAsyncResponse('{"error":["ERROR1","ERROR2"]}');
            System.assert(false, 'Expected exception not thrown.');
        } catch (sapSalesOrderCreate.sapSalesOrderCreateException e) {
            System.assertEquals('ERROR1;ERROR2', e.getMessage());
            System.assertEquals('ERROR1', e.getMessages()[0]);
        }
        
        try {
            sapSalesOrderCreate output = new sapSalesOrderCreate();
            output.loadAsyncResponse('{"backendMessage":"TEST RESULT"}');
            System.assert(false, 'Expected exception not thrown.');
        } catch (sapSalesOrderCreate.sapSalesOrderCreateException e) {
            System.assert(true);
        }

        try {
            sapSalesOrderCreate output = new sapSalesOrderCreate();
            output.loadAsyncResponse('{"error":["ERROR1","ERROR2"],"backendErrorMessages":["A test message"]}');
            System.assert(false, 'Expected exception not thrown.');
        } catch (sapSalesOrderCreate.sapSalesOrderCreateException e) {
            System.assertEquals('ERROR1;ERROR2', e.getMessage());
            System.assertEquals(2, e.getMessages().size());
            System.assertEquals('ERROR1', e.getMessages()[0]);
            System.assertEquals('ERROR2', e.getMessages()[1]);
            System.assertEquals(1, e.getBackendMessages().size());
            System.assertEquals('A test message', e.getBackendMessages()[0]);
        }

        overcast.Globals.IsOCF = true;
        
        try {
            sapSalesOrderCreate.deserialize('');
            System.assert(false, 'Expected exception not thrown.');
        } catch (sapSalesOrderCreate.sapSalesOrderCreateException e) {
            System.assert(true);
        }
        
        try {
            sapSalesOrderCreate.deserialize('{"error":["ERROR1","ERROR2"]}');
            System.assert(false, 'Expected exception not thrown.');
        } catch (sapSalesOrderCreate.sapSalesOrderCreateException e) {
            System.assertEquals('ERROR1;ERROR2', e.getMessage());
            System.assertEquals(0, e.getBackendMessages().size());
        }

        try {
            sapSalesOrderCreate.deserialize('{"error":["ERROR1","ERROR2"],"backendErrorMessages":["A test message"]}');
            System.assert(false, 'Expected exception not thrown.');
        } catch (sapSalesOrderCreate.sapSalesOrderCreateException e) {
            System.assertEquals('ERROR1;ERROR2', e.getMessage());
            System.assertEquals(2, e.getMessages().size());
            System.assertEquals('ERROR1', e.getMessages()[0]);
            System.assertEquals('ERROR2', e.getMessages()[1]);
            System.assertEquals(1, e.getBackendMessages().size());
            System.assertEquals('A test message', e.getBackendMessages()[0]);
        }
    }

    @istest
    private static void testGetBackendMessage() {
        sapSalesOrderCreate output = new sapSalesOrderCreate();
        output.loadAsyncResponse('{"output":{}, "backendMessage":"TEST RESULT"}');
        system.assertEquals('TEST RESULT', output.getBackendMessage());
    }

}