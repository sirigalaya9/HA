global class sapSalesOrderChangeMeta0 {
/* 
 * Generated by Overcast UTC 2024-03-12 09:51:40Z.
 * Changes to this class may cause incorrect behavior and will be lost if the scenario is re-activated.
 */

    static overcast.Realtime.StructureType SS = overcast.Realtime.StructureType.STRUCTURE;
    static overcast.Realtime.StructureType ST = overcast.Realtime.StructureType.TABLE;

    static overcast.Realtime.Direction DI = overcast.Realtime.Direction.INPUT;
    static overcast.Realtime.Direction DOx = overcast.Realtime.Direction.OUTPUT;
    static overcast.Realtime.Direction DB = overcast.Realtime.Direction.BOTH;
    
    static overcast.Realtime.ApexType TS = overcast.Realtime.ApexType.STRINGX;
    static overcast.Realtime.ApexType TI = overcast.Realtime.ApexType.INTEGERX;
    static overcast.Realtime.ApexType TL = overcast.Realtime.ApexType.LONGX;
    static overcast.Realtime.ApexType TB = overcast.Realtime.ApexType.BOOLEANX;
    static overcast.Realtime.ApexType TD = overcast.Realtime.ApexType.DATEX;
    static overcast.Realtime.ApexType TDT = overcast.Realtime.ApexType.DATETIMEX;
    static overcast.Realtime.ApexType TDC = overcast.Realtime.ApexType.DECIMALX;
    static overcast.Realtime.ApexType TDBL = overcast.Realtime.ApexType.DOUBLEX;
    static overcast.Realtime.ApexType TT = overcast.Realtime.ApexType.TIMEX;
    static overcast.Realtime.ApexType TBLB = overcast.Realtime.ApexType.BLOBX;

    static overcast.FieldInfo fi(String a, String b, overcast.Realtime.ApexType c, Integer d, overcast.Realtime.Direction e) {
        return new overcast.FieldInfo(a, b, c, d, e);
    }

    static overcast.FieldInfo fi(String a, String b, overcast.Realtime.ApexType c, Integer d, Integer e, overcast.Realtime.Direction f) {
        return new overcast.FieldInfo(a, b, c, d, e, f);
    }

    public static Map<String, overcast.TypeInfo> metadata = new Map<String, overcast.TypeInfo> {
        'BAPI_SALESORDER_CHANGE' => new overcast.TypeInfo('BAPI_SALESORDER_CHANGE', '', SS, DI,
            new Map<String, overcast.FieldInfo> {
                'SALESDOCUMENT' => fi('SALESDOCUMENT', 'Order Number', TS, 10, DI),
                'SIMULATION' => fi('SIMULATION', 'Simulation Mode', TS, 1, DI),
                'BEHAVE_WHEN_ERROR' => fi('BEHAVE_WHEN_ERROR', 'Error Handling', TS, 1, DI),
                'INT_NUMBER_ASSIGNMENT' => fi('INT_NUMBER_ASSIGNMENT', 'Internal Item Number Assignment', TS, 1, DI),
                'NO_STATUS_BUF_INIT' => fi('NO_STATUS_BUF_INIT', 'No Refresh of Status Buffer', TS, 1, DI)
            }
        ),
        'ORDER_HEADER_IN' => new overcast.TypeInfo('ORDER_HEADER_IN', 'Order Header', SS, DI,
            new Map<String, overcast.FieldInfo> {
                'COLLECT_NO' => fi('COLLECT_NO', 'Collective No.', TS, 10, DI),
                'SALES_ORG' => fi('SALES_ORG', 'Sales Org.', TS, 4, DI),
                'DISTR_CHAN' => fi('DISTR_CHAN', 'Distr. Channel', TS, 2, DI),
                'DIVISION' => fi('DIVISION', 'Division', TS, 2, DI),
                'SALES_GRP' => fi('SALES_GRP', 'Sales Group', TS, 3, DI),
                'SALES_OFF' => fi('SALES_OFF', 'Sales Office', TS, 4, DI),
                'REQ_DATE_H' => fi('REQ_DATE_H', 'Request.dlv.dt', TD, 8, DI),
                'DATE_TYPE' => fi('DATE_TYPE', 'Prop.date type', TS, 1, DI),
                'PURCH_NO_C' => fi('PURCH_NO_C', 'PO Number', TS, 35, DI),
                'PURCH_DATE' => fi('PURCH_DATE', 'PO Date', TD, 8, DI),
                'PO_METHOD' => fi('PO_METHOD', 'Pur. ord. type', TS, 4, DI),
                'PO_SUPPLEM' => fi('PO_SUPPLEM', 'Supplement', TS, 4, DI),
                'REF_1' => fi('REF_1', 'Your Reference', TS, 12, DI),
                'NAME' => fi('NAME', 'Name', TS, 35, DI),
                'TELEPHONE' => fi('TELEPHONE', 'Telephone', TS, 16, DI),
                'PRICE_GRP' => fi('PRICE_GRP', 'Price group', TS, 2, DI),
                'CUST_GROUP' => fi('CUST_GROUP', 'Customer group', TS, 2, DI),
                'SALES_DIST' => fi('SALES_DIST', 'Sales district', TS, 6, DI),
                'PRICE_LIST' => fi('PRICE_LIST', 'Price List', TS, 2, DI),
                'INCOTERMS1' => fi('INCOTERMS1', 'Incoterms', TS, 3, DI),
                'INCOTERMS2' => fi('INCOTERMS2', 'Incoterms 2', TS, 28, DI),
                'PMNTTRMS' => fi('PMNTTRMS', 'Pyt Terms', TS, 4, DI),
                'DLV_BLOCK' => fi('DLV_BLOCK', 'Delivery block', TS, 2, DI),
                'BILL_BLOCK' => fi('BILL_BLOCK', 'Billing block', TS, 2, DI),
                'ORD_REASON' => fi('ORD_REASON', 'Order reason', TS, 3, DI),
                'COMPL_DLV' => fi('COMPL_DLV', 'Complete dlv.', TS, 1, DI),
                'PRICE_DATE' => fi('PRICE_DATE', 'Pricing Date', TD, 8, DI),
                'QT_VALID_F' => fi('QT_VALID_F', 'Valid from', TD, 8, DI),
                'QT_VALID_T' => fi('QT_VALID_T', 'Valid to', TD, 8, DI),
                'CT_VALID_F' => fi('CT_VALID_F', 'Valid from', TD, 8, DI),
                'CT_VALID_T' => fi('CT_VALID_T', 'Valid to', TD, 8, DI),
                'CUST_GRP1' => fi('CUST_GRP1', 'Industry sector', TS, 3, DI),
                'CUST_GRP2' => fi('CUST_GRP2', 'Customer group', TS, 3, DI),
                'CUST_GRP3' => fi('CUST_GRP3', 'Customer type', TS, 3, DI),
                'CUST_GRP4' => fi('CUST_GRP4', 'Potential Group', TS, 3, DI),
                'CUST_GRP5' => fi('CUST_GRP5', 'Rebate group', TS, 3, DI),
                'PURCH_NO_S' => fi('PURCH_NO_S', 'PO Number', TS, 35, DI),
                'PO_DAT_S' => fi('PO_DAT_S', 'PurchOrderDate', TD, 8, DI),
                'PO_METH_S' => fi('PO_METH_S', 'Pur. ord. type', TS, 4, DI),
                'REF_1_S' => fi('REF_1_S', 'Your reference', TS, 12, DI),
                'SD_DOC_CAT' => fi('SD_DOC_CAT', 'Document cat.', TS, 1, DI),
                'DOC_DATE' => fi('DOC_DATE', 'Document Date', TD, 8, DI),
                'WAR_DATE' => fi('WAR_DATE', 'Warranty Start', TD, 8, DI),
                'SHIP_COND' => fi('SHIP_COND', 'Shp.Cond.', TS, 2, DI),
                'PP_SEARCH' => fi('PP_SEARCH', 'Description', TS, 40, DI),
                'DUN_COUNT' => fi('DUN_COUNT', 'No.of contacts', TDC, 3,0, DI),
                'DUN_DATE' => fi('DUN_DATE', 'Last contact dt', TD, 8, DI),
                'COSTCENTER' => fi('COSTCENTER', 'Cost Center', TS, 10, DI),
                'WBS_ELEM' => fi('WBS_ELEM', 'WBS Element', TS, 24, DI),
                'DLVSCHDUSE' => fi('DLVSCHDUSE', 'Usage', TS, 3, DI),
                'PLDLVSTYP' => fi('PLDLVSTYP', 'MRP for DS type', TS, 1, DI),
                'REF_DOC' => fi('REF_DOC', 'Reference Doc.', TS, 10, DI),
                'COMP_CDE_B' => fi('COMP_CDE_B', 'CCodeToBeBilled', TS, 4, DI),
                'ALTTAX_CLS' => fi('ALTTAX_CLS', 'Alt.tax class.', TS, 1, DI),
                'TAX_CLASS2' => fi('TAX_CLASS2', 'TaxClass2-Cust.', TS, 1, DI),
                'TAX_CLASS3' => fi('TAX_CLASS3', 'TaxClass3-Cust.', TS, 1, DI),
                'TAX_CLASS4' => fi('TAX_CLASS4', 'TaxClass4-Cust.', TS, 1, DI),
                'TAX_CLASS5' => fi('TAX_CLASS5', 'TaxClass5-Cust.', TS, 1, DI),
                'TAX_CLASS6' => fi('TAX_CLASS6', 'TaxClass6-Cust.', TS, 1, DI),
                'TAX_CLASS7' => fi('TAX_CLASS7', 'TaxClass7-Cust.', TS, 1, DI),
                'TAX_CLASS8' => fi('TAX_CLASS8', 'TaxClass8-Cust.', TS, 1, DI),
                'TAX_CLASS9' => fi('TAX_CLASS9', 'TaxClass9-Cust.', TS, 1, DI),
                'REF_DOC_L' => fi('REF_DOC_L', 'Reference no.', TS, 16, DI),
                'ASS_NUMBER' => fi('ASS_NUMBER', 'Assignment', TS, 18, DI),
                'REFDOC_CAT' => fi('REFDOC_CAT', 'Prec.doc.categ.', TS, 1, DI),
                'ORDCOMB_IN' => fi('ORDCOMB_IN', 'Order Combinat.', TS, 1, DI),
                'BILL_SCHED' => fi('BILL_SCHED', 'Invoicing dates', TS, 2, DI),
                'INVO_SCHED' => fi('INVO_SCHED', 'Inv.list sched.', TS, 2, DI),
                'MN_INVOICE' => fi('MN_INVOICE', 'SubsInvProcess', TS, 1, DI),
                'EXRATE_FI' => fi('EXRATE_FI', 'Exch.rate-acct.', TDC, 9,5, DI),
                'ADD_VAL_DY' => fi('ADD_VAL_DY', 'Add.value days', TS, 2, DI),
                'FIX_VAL_DY' => fi('FIX_VAL_DY', 'Fixed val.date', TD, 8, DI),
                'PYMT_METH' => fi('PYMT_METH', 'Pymt Meth.', TS, 1, DI),
                'ACCNT_ASGN' => fi('ACCNT_ASGN', 'AccAssmtGrpCust', TS, 2, DI),
                'EXCHG_RATE' => fi('EXCHG_RATE', 'Exchange Rate', TDC, 9,5, DI),
                'BILL_DATE' => fi('BILL_DATE', 'Billing Date', TD, 8, DI),
                'SERV_DATE' => fi('SERV_DATE', 'Serv.rendered', TD, 8, DI),
                'DUNN_KEY' => fi('DUNN_KEY', 'Dunning key', TS, 1, DI),
                'DUNN_BLOCK' => fi('DUNN_BLOCK', 'Dunn. Block', TS, 1, DI),
                'PROMOTION' => fi('PROMOTION', 'Promotion', TS, 10, DI),
                'PMTGAR_PRO' => fi('PMTGAR_PRO', 'Paym.guar.proc.', TS, 6, DI),
                'DEPARTM_NO' => fi('DEPARTM_NO', 'Department', TS, 4, DI),
                'REC_POINT' => fi('REC_POINT', 'Recv. point', TS, 25, DI),
                'POITM_NO_S' => fi('POITM_NO_S', 'PO item', TS, 6, DI),
                'DOC_NUM_FI' => fi('DOC_NUM_FI', 'Financ.doc.no.', TS, 10, DI),
                'CSTCNDGRP1' => fi('CSTCNDGRP1', 'Condition grp 1', TS, 2, DI),
                'CSTCNDGRP2' => fi('CSTCNDGRP2', 'Condition grp 2', TS, 2, DI),
                'CSTCNDGRP3' => fi('CSTCNDGRP3', 'Condition grp 3', TS, 2, DI),
                'CSTCNDGRP4' => fi('CSTCNDGRP4', 'Condition grp 4', TS, 2, DI),
                'CSTCNDGRP5' => fi('CSTCNDGRP5', 'Condition grp 5', TS, 2, DI),
                'DLV_TIME' => fi('DLV_TIME', 'Delivery time', TS, 3, DI),
                'CURRENCY_x' => fi('CURRENCY_x', 'Doc. Currency', TS, 5, DI),
                'CURR_ISO' => fi('CURR_ISO', 'ISO code crcy', TS, 3, DI),
                'FKK_CONACCT' => fi('FKK_CONACCT', 'char12', TS, 12, DI),
                'CAMPAIGN' => fi('CAMPAIGN', 'CGPL_GUID', TBLB, 16, DI),
                'DOC_CLASS' => fi('DOC_CLASS', 'Original system', TS, 9, DI),
                'H_CURR' => fi('H_CURR', 'Currency', TS, 5, DI),
                'H_CURR_ISO' => fi('H_CURR_ISO', 'ISO Code', TS, 3, DI),
                'SHIP_TYPE' => fi('SHIP_TYPE', 'Shipping type', TS, 2, DI),
                'S_PROC_IND' => fi('S_PROC_IND', 'Spec.processing', TS, 4, DI),
                'REF_DOC_L_LONG' => fi('REF_DOC_L_LONG', 'Reference', TS, 35, DI),
                'VERSION' => fi('VERSION', 'Version', TS, 12, DI),
                'PSM_PSTNG_DATE' => fi('PSM_PSTNG_DATE', 'Posting Date', TD, 8, DI),
                'TREASURY_ACC_SYMBOL' => fi('TREASURY_ACC_SYMBOL', 'Treasury Acct Symbol', TS, 30, DI),
                'BUSINESS_EVENT_TCODE' => fi('BUSINESS_EVENT_TCODE', 'Business Event TCode', TS, 10, DI),
                'MODIFICATION_ALLOWED' => fi('MODIFICATION_ALLOWED', 'Modification Allowed', TS, 1, DI),
                'CANCELLATION_ALLOWED' => fi('CANCELLATION_ALLOWED', 'Cancellation Allowed', TS, 1, DI),
                'PAYMENT_METHODS' => fi('PAYMENT_METHODS', 'Payment methods', TS, 10, DI),
                'BUSINESS_PARTNER_NO' => fi('BUSINESS_PARTNER_NO', 'Business Partner No.', TS, 6, DI),
                'REPORTING_FREQ' => fi('REPORTING_FREQ', 'Reporting Frequency', TS, 3, DI),
                'SEPA_MANDATE_ID' => fi('SEPA_MANDATE_ID', 'Mandate Ref.', TS, 35, DI),
                'INCOTERMSV' => fi('INCOTERMSV', 'Inco. Version', TS, 4, DI),
                'INCOTERMS2L' => fi('INCOTERMS2L', 'Inco. Location1', TS, 70, DI),
                'INCOTERMS3L' => fi('INCOTERMS3L', 'Inco. Location2', TS, 70, DI),
                'SD_DOC_CAT_LONG' => fi('SD_DOC_CAT_LONG', 'Document Cat.', TS, 4, DI),
                'REFDOC_CAT_LONG' => fi('REFDOC_CAT_LONG', 'Prec.Doc.Categ.', TS, 4, DI),
                'EUTRI_DEAL' => fi('EUTRI_DEAL', 'EU triang. deal', TS, 1, DI)
            }
        ),
        'ORDER_HEADER_INX' => new overcast.TypeInfo('ORDER_HEADER_INX', 'Sales Order Check List', SS, DI,
            new Map<String, overcast.FieldInfo> {
                'UPDATEFLAG' => fi('UPDATEFLAG', 'Update indicator', TS, 1, DI),
                'COLLECT_NO' => fi('COLLECT_NO', 'Updated Info', TS, 1, DI),
                'SALES_ORG' => fi('SALES_ORG', 'Updated Info', TS, 1, DI),
                'DISTR_CHAN' => fi('DISTR_CHAN', 'Updated Info', TS, 1, DI),
                'DIVISION' => fi('DIVISION', 'Updated Info', TS, 1, DI),
                'SALES_GRP' => fi('SALES_GRP', 'Updated Info', TS, 1, DI),
                'SALES_OFF' => fi('SALES_OFF', 'Updated Info', TS, 1, DI),
                'REQ_DATE_H' => fi('REQ_DATE_H', 'Updated Info', TS, 1, DI),
                'DATE_TYPE' => fi('DATE_TYPE', 'Updated Info', TS, 1, DI),
                'PURCH_NO_C' => fi('PURCH_NO_C', 'Updated Info', TS, 1, DI),
                'PURCH_DATE' => fi('PURCH_DATE', 'Updated Info', TS, 1, DI),
                'PO_METHOD' => fi('PO_METHOD', 'Updated Info', TS, 1, DI),
                'PO_SUPPLEM' => fi('PO_SUPPLEM', 'Updated Info', TS, 1, DI),
                'REF_1' => fi('REF_1', 'Updated Info', TS, 1, DI),
                'NAME' => fi('NAME', 'Updated Info', TS, 1, DI),
                'TELEPHONE' => fi('TELEPHONE', 'Updated Info', TS, 1, DI),
                'PRICE_GRP' => fi('PRICE_GRP', 'Updated Info', TS, 1, DI),
                'CUST_GROUP' => fi('CUST_GROUP', 'Updated Info', TS, 1, DI),
                'SALES_DIST' => fi('SALES_DIST', 'Updated Info', TS, 1, DI),
                'PRICE_LIST' => fi('PRICE_LIST', 'Updated Info', TS, 1, DI),
                'INCOTERMS1' => fi('INCOTERMS1', 'Updated Info', TS, 1, DI),
                'INCOTERMS2' => fi('INCOTERMS2', 'Updated Info', TS, 1, DI),
                'PMNTTRMS' => fi('PMNTTRMS', 'Updated Info', TS, 1, DI),
                'DLV_BLOCK' => fi('DLV_BLOCK', 'Updated Info', TS, 1, DI),
                'BILL_BLOCK' => fi('BILL_BLOCK', 'Updated Info', TS, 1, DI),
                'ORD_REASON' => fi('ORD_REASON', 'Updated Info', TS, 1, DI),
                'COMPL_DLV' => fi('COMPL_DLV', 'Updated Info', TS, 1, DI),
                'PRICE_DATE' => fi('PRICE_DATE', 'Updated Info', TS, 1, DI),
                'QT_VALID_F' => fi('QT_VALID_F', 'Updated Info', TS, 1, DI),
                'QT_VALID_T' => fi('QT_VALID_T', 'Updated Info', TS, 1, DI),
                'CT_VALID_F' => fi('CT_VALID_F', 'Updated Info', TS, 1, DI),
                'CT_VALID_T' => fi('CT_VALID_T', 'Updated Info', TS, 1, DI),
                'CUST_GRP1' => fi('CUST_GRP1', 'Updated Info', TS, 1, DI),
                'CUST_GRP2' => fi('CUST_GRP2', 'Updated Info', TS, 1, DI),
                'CUST_GRP3' => fi('CUST_GRP3', 'Updated Info', TS, 1, DI),
                'CUST_GRP4' => fi('CUST_GRP4', 'Updated Info', TS, 1, DI),
                'CUST_GRP5' => fi('CUST_GRP5', 'Updated Info', TS, 1, DI),
                'PURCH_NO_S' => fi('PURCH_NO_S', 'Updated Info', TS, 1, DI),
                'PO_DAT_S' => fi('PO_DAT_S', 'Updated Info', TS, 1, DI),
                'PO_METH_S' => fi('PO_METH_S', 'Updated Info', TS, 1, DI),
                'REF_1_S' => fi('REF_1_S', 'Updated Info', TS, 1, DI),
                'SD_DOC_CAT' => fi('SD_DOC_CAT', 'Updated Info', TS, 1, DI),
                'DOC_DATE' => fi('DOC_DATE', 'Updated Info', TS, 1, DI),
                'WAR_DATE' => fi('WAR_DATE', 'Updated Info', TS, 1, DI),
                'SHIP_COND' => fi('SHIP_COND', 'Updated Info', TS, 1, DI),
                'PP_SEARCH' => fi('PP_SEARCH', 'Updated Info', TS, 1, DI),
                'DUN_COUNT' => fi('DUN_COUNT', 'Updated Info', TS, 1, DI),
                'DUN_DATE' => fi('DUN_DATE', 'Updated Info', TS, 1, DI),
                'COSTCENTER' => fi('COSTCENTER', 'Updated Info', TS, 1, DI),
                'WBS_ELEM' => fi('WBS_ELEM', 'Updated Info', TS, 1, DI),
                'DLVSCHDUSE' => fi('DLVSCHDUSE', 'Updated Info', TS, 1, DI),
                'PLDLVSTYP' => fi('PLDLVSTYP', 'Updated Info', TS, 1, DI),
                'REF_DOC' => fi('REF_DOC', 'Updated Info', TS, 1, DI),
                'COMP_CDE_B' => fi('COMP_CDE_B', 'Updated Info', TS, 1, DI),
                'ALTTAX_CLS' => fi('ALTTAX_CLS', 'Updated Info', TS, 1, DI),
                'TAX_CLASS2' => fi('TAX_CLASS2', 'Updated Info', TS, 1, DI),
                'TAX_CLASS3' => fi('TAX_CLASS3', 'Updated Info', TS, 1, DI),
                'TAX_CLASS4' => fi('TAX_CLASS4', 'Updated Info', TS, 1, DI),
                'TAX_CLASS5' => fi('TAX_CLASS5', 'Updated Info', TS, 1, DI),
                'TAX_CLASS6' => fi('TAX_CLASS6', 'Updated Info', TS, 1, DI),
                'TAX_CLASS7' => fi('TAX_CLASS7', 'Updated Info', TS, 1, DI),
                'TAX_CLASS8' => fi('TAX_CLASS8', 'Updated Info', TS, 1, DI),
                'TAX_CLASS9' => fi('TAX_CLASS9', 'Updated Info', TS, 1, DI),
                'REF_DOC_L' => fi('REF_DOC_L', 'Updated Info', TS, 1, DI),
                'ASS_NUMBER' => fi('ASS_NUMBER', 'Updated Info', TS, 1, DI),
                'REFDOC_CAT' => fi('REFDOC_CAT', 'Updated Info', TS, 1, DI),
                'ORDCOMB_IN' => fi('ORDCOMB_IN', 'Updated Info', TS, 1, DI),
                'BILL_SCHED' => fi('BILL_SCHED', 'Updated Info', TS, 1, DI),
                'INVO_SCHED' => fi('INVO_SCHED', 'Updated Info', TS, 1, DI),
                'MN_INVOICE' => fi('MN_INVOICE', 'Updated Info', TS, 1, DI),
                'EXRATE_FI' => fi('EXRATE_FI', 'Updated Info', TS, 1, DI),
                'ADD_VAL_DY' => fi('ADD_VAL_DY', 'Updated Info', TS, 1, DI),
                'FIX_VAL_DY' => fi('FIX_VAL_DY', 'Updated Info', TS, 1, DI),
                'PYMT_METH' => fi('PYMT_METH', 'Updated Info', TS, 1, DI),
                'ACCNT_ASGN' => fi('ACCNT_ASGN', 'Updated Info', TS, 1, DI),
                'EXCHG_RATE' => fi('EXCHG_RATE', 'Updated Info', TS, 1, DI),
                'BILL_DATE' => fi('BILL_DATE', 'Updated Info', TS, 1, DI),
                'SERV_DATE' => fi('SERV_DATE', 'Updated Info', TS, 1, DI),
                'DUNN_KEY' => fi('DUNN_KEY', 'Updated Info', TS, 1, DI),
                'DUNN_BLOCK' => fi('DUNN_BLOCK', 'Updated Info', TS, 1, DI),
                'PROMOTION' => fi('PROMOTION', 'Updated Info', TS, 1, DI),
                'PMTGAR_PRO' => fi('PMTGAR_PRO', 'Updated Info', TS, 1, DI),
                'DEPARTM_NO' => fi('DEPARTM_NO', 'Updated Info', TS, 1, DI),
                'REC_POINT' => fi('REC_POINT', 'Updated Info', TS, 1, DI),
                'POITM_NO_S' => fi('POITM_NO_S', 'Updated Info', TS, 1, DI),
                'DOC_NUM_FI' => fi('DOC_NUM_FI', 'Updated Info', TS, 1, DI),
                'CSTCNDGRP1' => fi('CSTCNDGRP1', 'Updated Info', TS, 1, DI),
                'CSTCNDGRP2' => fi('CSTCNDGRP2', 'Updated Info', TS, 1, DI),
                'CSTCNDGRP3' => fi('CSTCNDGRP3', 'Updated Info', TS, 1, DI),
                'CSTCNDGRP4' => fi('CSTCNDGRP4', 'Updated Info', TS, 1, DI),
                'CSTCNDGRP5' => fi('CSTCNDGRP5', 'Updated Info', TS, 1, DI),
                'DLV_TIME' => fi('DLV_TIME', 'Updated Info', TS, 1, DI),
                'CURRENCY_x' => fi('CURRENCY_x', 'Updated Info', TS, 1, DI),
                'FKK_CONACCT' => fi('FKK_CONACCT', 'Updated Info', TS, 1, DI),
                'CAMPAIGN' => fi('CAMPAIGN', 'Updated Info', TS, 1, DI),
                'DOC_CLASS' => fi('DOC_CLASS', 'Updated Info', TS, 1, DI),
                'H_CURR' => fi('H_CURR', 'Updated Info', TS, 1, DI),
                'SHIP_TYPE' => fi('SHIP_TYPE', 'Updated Info', TS, 1, DI),
                'S_PROC_IND' => fi('S_PROC_IND', 'Updated Info', TS, 1, DI),
                'VERSION' => fi('VERSION', 'Updated Info', TS, 1, DI),
                'PSM_PSTNG_DATE' => fi('PSM_PSTNG_DATE', 'Updated Info', TS, 1, DI),
                'TREASURY_ACC_SYMBOL' => fi('TREASURY_ACC_SYMBOL', 'Updated Info', TS, 1, DI),
                'BUSINESS_EVENT_TCODE' => fi('BUSINESS_EVENT_TCODE', 'Updated Info', TS, 1, DI),
                'MODIFICATION_ALLOWED' => fi('MODIFICATION_ALLOWED', 'Updated Info', TS, 1, DI),
                'CANCELLATION_ALLOWED' => fi('CANCELLATION_ALLOWED', 'Updated Info', TS, 1, DI),
                'PAYMENT_METHODS' => fi('PAYMENT_METHODS', 'Updated Info', TS, 1, DI),
                'BUSINESS_PARTNER_NO' => fi('BUSINESS_PARTNER_NO', 'Updated Info', TS, 1, DI),
                'REPORTING_FREQ' => fi('REPORTING_FREQ', 'Updated Info', TS, 1, DI),
                'SEPA_MANDATE_ID' => fi('SEPA_MANDATE_ID', 'Updated Info', TS, 1, DI),
                'INCOTERMSV' => fi('INCOTERMSV', 'Updated Info', TS, 1, DI),
                'INCOTERMS2L' => fi('INCOTERMS2L', 'Updated Info', TS, 1, DI),
                'INCOTERMS3L' => fi('INCOTERMS3L', 'Updated Info', TS, 1, DI),
                'SD_DOC_CAT_LONG' => fi('SD_DOC_CAT_LONG', 'Updated Info', TS, 1, DI),
                'REFDOC_CAT_LONG' => fi('REFDOC_CAT_LONG', 'Updated Info', TS, 1, DI),
                'EUTRI_DEAL' => fi('EUTRI_DEAL', 'Updated Info', TS, 1, DI)
            }
        ),
        'LOGIC_SWITCH' => new overcast.TypeInfo('LOGIC_SWITCH', 'SD Checkbox for the Logic Switch', SS, DI,
            new Map<String, overcast.FieldInfo> {
                'PRICING' => fi('PRICING', 'Pricing type', TS, 1, DI),
                'ATP_WRKMOD' => fi('ATP_WRKMOD', 'ATP sess', TS, 1, DI),
                'SCHEDULING' => fi('SCHEDULING', 'Single-Character Flag', TS, 1, DI),
                'NOSTRUCTURE' => fi('NOSTRUCTURE', 'Checkbox', TS, 1, DI),
                'COND_HANDL' => fi('COND_HANDL', 'Sel: Cond Ln Hndling', TS, 1, DI),
                'ADDR_CHECK' => fi('ADDR_CHECK', 'Single-Character Flag', TS, 1, DI)
            }
        ),
        'RETURN_x' => new overcast.TypeInfo('RETURN_x', 'Return Code', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'TYPE_x' => fi('TYPE_x', 'Message type', TS, 1, DB),
                'ID' => fi('ID', 'Message Class', TS, 20, DB),
                'NUMBER_x' => fi('NUMBER_x', 'Message number', TS, 3, DB),
                'MESSAGE' => fi('MESSAGE', 'Message text', TS, 220, DB),
                'LOG_NO' => fi('LOG_NO', 'Log Number', TS, 20, DB),
                'LOG_MSG_NO' => fi('LOG_MSG_NO', 'Message Number', TS, 6, DB),
                'MESSAGE_V1' => fi('MESSAGE_V1', 'Message Variable', TS, 50, DB),
                'MESSAGE_V2' => fi('MESSAGE_V2', 'Message Variable', TS, 50, DB),
                'MESSAGE_V3' => fi('MESSAGE_V3', 'Message Variable', TS, 50, DB),
                'MESSAGE_V4' => fi('MESSAGE_V4', 'Message Variable', TS, 50, DB),
                'PARAMETER' => fi('PARAMETER', 'Parameter Name', TS, 32, DB),
                'ROW' => fi('ROW', 'Parameter line', TI, 10, DB),
                'FIELD' => fi('FIELD', 'Field name', TS, 30, DB),
                'SYSTEM_x' => fi('SYSTEM_x', 'Logical system', TS, 10, DB)
            }
        ),
        'ORDER_ITEM_IN' => new overcast.TypeInfo('ORDER_ITEM_IN', 'Order Items', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'ITM_NUMBER' => fi('ITM_NUMBER', 'Item', TS, 6, DB),
                'HG_LV_ITEM' => fi('HG_LV_ITEM', 'Higher-lev.item', TS, 6, DB),
                'PO_ITM_NO' => fi('PO_ITM_NO', 'PO Item', TS, 6, DB),
                'MATERIAL' => fi('MATERIAL', 'Material', TS, 18, DB),
                'ALT_TO_ITM' => fi('ALT_TO_ITM', 'Altern. to item', TS, 6, DB),
                'CUST_MAT22' => fi('CUST_MAT22', 'Cust.material', TS, 22, DB),
                'BATCH' => fi('BATCH', 'Batch', TS, 10, DB),
                'DLV_GROUP' => fi('DLV_GROUP', 'Delivery group', TS, 3, DB),
                'PART_DLV' => fi('PART_DLV', 'Part.Dlv./Item', TS, 1, DB),
                'REASON_REJ' => fi('REASON_REJ', 'RejectionReason', TS, 2, DB),
                'BILL_BLOCK' => fi('BILL_BLOCK', 'Block', TS, 2, DB),
                'BILL_DATE' => fi('BILL_DATE', 'Billing Date', TD, 8, DB),
                'PLANT' => fi('PLANT', 'Plant', TS, 4, DB),
                'STORE_LOC' => fi('STORE_LOC', 'Storage Loc.', TS, 4, DB),
                'TARGET_QTY' => fi('TARGET_QTY', 'Target quantity', TDC, 13,3, DB),
                'TARGET_QU' => fi('TARGET_QU', 'Target qty UoM', TS, 3, DB),
                'T_UNIT_ISO' => fi('T_UNIT_ISO', 'Target ISO UoM', TS, 3, DB),
                'ITEM_CATEG' => fi('ITEM_CATEG', 'Item Category', TS, 4, DB),
                'SHORT_TEXT' => fi('SHORT_TEXT', 'Description', TS, 40, DB),
                'PRC_GROUP1' => fi('PRC_GROUP1', 'MaterialGroup 1', TS, 3, DB),
                'PRC_GROUP2' => fi('PRC_GROUP2', 'MaterialGroup 2', TS, 3, DB),
                'PRC_GROUP3' => fi('PRC_GROUP3', 'MaterialGroup 3', TS, 3, DB),
                'PRC_GROUP4' => fi('PRC_GROUP4', 'MaterialGroup 4', TS, 3, DB),
                'PRC_GROUP5' => fi('PRC_GROUP5', 'MaterialGroup 5', TS, 3, DB),
                'PROD_HIERA' => fi('PROD_HIERA', 'Prod. Hierarchy', TS, 18, DB),
                'MATL_GROUP' => fi('MATL_GROUP', 'Material Group', TS, 9, DB),
                'PURCH_NO_C' => fi('PURCH_NO_C', 'PO Number', TS, 35, DB),
                'PURCH_DATE' => fi('PURCH_DATE', 'PO Date', TD, 8, DB),
                'PO_METHOD' => fi('PO_METHOD', 'Pur. ord. type', TS, 4, DB),
                'REF_1' => fi('REF_1', 'Your Reference', TS, 12, DB),
                'PURCH_NO_S' => fi('PURCH_NO_S', 'PO Number', TS, 35, DB),
                'PO_DAT_S' => fi('PO_DAT_S', 'PurchOrderDate', TD, 8, DB),
                'PO_METH_S' => fi('PO_METH_S', 'Pur. ord. type', TS, 4, DB),
                'REF_1_S' => fi('REF_1_S', 'Your reference', TS, 12, DB),
                'POITM_NO_S' => fi('POITM_NO_S', 'PO item', TS, 6, DB),
                'PRICE_GRP' => fi('PRICE_GRP', 'Price group', TS, 2, DB),
                'CUST_GROUP' => fi('CUST_GROUP', 'Customer group', TS, 2, DB),
                'SALES_DIST' => fi('SALES_DIST', 'Sales district', TS, 6, DB),
                'PRICE_LIST' => fi('PRICE_LIST', 'Price List', TS, 2, DB),
                'INCOTERMS1' => fi('INCOTERMS1', 'Incoterms', TS, 3, DB),
                'INCOTERMS2' => fi('INCOTERMS2', 'Incoterms 2', TS, 28, DB),
                'ORDCOMP_IN' => fi('ORDCOMP_IN', 'Order Combinat.', TS, 1, DB),
                'BILL_SCHED' => fi('BILL_SCHED', 'Invoicing dates', TS, 2, DB),
                'INVO_SCHED' => fi('INVO_SCHED', 'Inv.list sched.', TS, 2, DB),
                'MN_INVOICE' => fi('MN_INVOICE', 'SubsInvProcess', TS, 1, DB),
                'EX_RATE_FI' => fi('EX_RATE_FI', 'Exch.rate-acct.', TDC, 9,5, DB),
                'ADD_VAL_DY' => fi('ADD_VAL_DY', 'Add.value days', TS, 2, DB),
                'FIX_VAL_DY' => fi('FIX_VAL_DY', 'Fixed val.date', TD, 8, DB),
                'PMNTTRMS' => fi('PMNTTRMS', 'Pyt Terms', TS, 4, DB),
                'PYMT_METH' => fi('PYMT_METH', 'Pymt Meth.', TS, 1, DB),
                'ACCNT_ASGN' => fi('ACCNT_ASGN', 'AccAssmtGrpCust', TS, 2, DB),
                'EXCHG_RATE' => fi('EXCHG_RATE', 'Exchange rate', TDC, 9,5, DB),
                'PRICE_DATE' => fi('PRICE_DATE', 'Pricing Date', TD, 8, DB),
                'SERV_DATE' => fi('SERV_DATE', 'Serv.rendered', TD, 8, DB),
                'DUNN_KEY' => fi('DUNN_KEY', 'Dunning key', TS, 1, DB),
                'DUNN_BLOCK' => fi('DUNN_BLOCK', 'Dunn. Block', TS, 1, DB),
                'PROMOTION' => fi('PROMOTION', 'Promotion', TS, 10, DB),
                'PMTGAR_PRO' => fi('PMTGAR_PRO', 'Paym.guar.proc.', TS, 6, DB),
                'DOC_NUM_FI' => fi('DOC_NUM_FI', 'Financ.doc.no.', TS, 10, DB),
                'DEPARTM_NO' => fi('DEPARTM_NO', 'Department', TS, 4, DB),
                'REC_POINT' => fi('REC_POINT', 'Recv. point', TS, 25, DB),
                'CSTCNDGRP1' => fi('CSTCNDGRP1', 'Condition grp 1', TS, 2, DB),
                'CSTCNDGRP2' => fi('CSTCNDGRP2', 'Condition grp 2', TS, 2, DB),
                'CSTCNDGRP3' => fi('CSTCNDGRP3', 'Condition grp 3', TS, 2, DB),
                'CSTCNDGRP4' => fi('CSTCNDGRP4', 'Condition grp 4', TS, 2, DB),
                'CSTCNDGRP5' => fi('CSTCNDGRP5', 'Condition grp 5', TS, 2, DB),
                'DLV_TIME' => fi('DLV_TIME', 'Delivery time', TS, 3, DB),
                'SALES_UNIT' => fi('SALES_UNIT', 'Sales Unit', TS, 3, DB),
                'S_UNIT_ISO' => fi('S_UNIT_ISO', 'ISO code', TS, 3, DB),
                'TRG_QTY_NO' => fi('TRG_QTY_NO', 'Convers.factor', TDC, 5,0, DB),
                'TRGQTY_DEN' => fi('TRGQTY_DEN', 'Convers.factor', TDC, 5,0, DB),
                'RNDDLV_QTY' => fi('RNDDLV_QTY', 'Rounding qty', TDC, 13,3, DB),
                'MAXDEVAMNT' => fi('MAXDEVAMNT', 'Absolute deviation', TDC, 13,3, DB),
                'MAXDEVPER' => fi('MAXDEVPER', '% deviation', TDC, 3,0, DB),
                'MAXDEV_DAY' => fi('MAXDEV_DAY', 'Dev. days', TDC, 3,0, DB),
                'USAGE_IND' => fi('USAGE_IND', 'Unused - Reserve Length 3', TS, 3, DB),
                'FIXED_QUAN' => fi('FIXED_QUAN', 'Qty. is fixed', TS, 1, DB),
                'UNLMT_DLV' => fi('UNLMT_DLV', 'Unlimited', TS, 1, DB),
                'OVERDLVTOL' => fi('OVERDLVTOL', 'Overdeliv. Tol.', TDC, 3,1, DB),
                'UNDDLV_TOL' => fi('UNDDLV_TOL', 'Underdel. Tol.', TDC, 3,1, DB),
                'DIVISION' => fi('DIVISION', 'Division', TS, 2, DB),
                'SALQTYNUM' => fi('SALQTYNUM', 'Numerator', TDC, 5,0, DB),
                'SALQTYDEN' => fi('SALQTYDEN', 'Denominat.', TDC, 5,0, DB),
                'GROSS_WGHT' => fi('GROSS_WGHT', 'Gross weight', TDC, 15,3, DB),
                'NET_WEIGHT' => fi('NET_WEIGHT', 'Net weight', TDC, 15,3, DB),
                'UNTOF_WGHT' => fi('UNTOF_WGHT', 'Unit of Weight', TS, 3, DB),
                'UNOF_WTISO' => fi('UNOF_WTISO', 'Unit of wt ISO', TS, 3, DB),
                'VOLUME' => fi('VOLUME', 'Volume', TDC, 15,3, DB),
                'VOLUNIT' => fi('VOLUNIT', 'Volume Unit', TS, 3, DB),
                'VOLUNITISO' => fi('VOLUNITISO', 'Volume unit ISO', TS, 3, DB),
                'DLV_PRIO' => fi('DLV_PRIO', 'Delivery Prior.', TS, 2, DB),
                'SHIP_POINT' => fi('SHIP_POINT', 'Shipping Point', TS, 4, DB),
                'ROUTE' => fi('ROUTE', 'Route', TS, 6, DB),
                'CREATED_BY' => fi('CREATED_BY', 'Created By', TS, 12, DB),
                'TAX_CLASS1' => fi('TAX_CLASS1', 'Tax classific.', TS, 1, DB),
                'TAX_CLASS2' => fi('TAX_CLASS2', 'Tax classific.', TS, 1, DB),
                'TAX_CLASS3' => fi('TAX_CLASS3', 'Tax classific.', TS, 1, DB),
                'TAX_CLASS4' => fi('TAX_CLASS4', 'Tax classific.', TS, 1, DB),
                'TAX_CLASS5' => fi('TAX_CLASS5', 'Tax classific.', TS, 1, DB),
                'TAX_CLASS6' => fi('TAX_CLASS6', 'Tax classific.', TS, 1, DB),
                'TAX_CLASS7' => fi('TAX_CLASS7', 'Tax classific.', TS, 1, DB),
                'TAX_CLASS8' => fi('TAX_CLASS8', 'Tax classific.', TS, 1, DB),
                'TAX_CLASS9' => fi('TAX_CLASS9', 'Tax classific.', TS, 1, DB),
                'MAT_PR_GRP' => fi('MAT_PR_GRP', 'Mat.pricing grp', TS, 2, DB),
                'VAL_TYPE' => fi('VAL_TYPE', 'Valuation Type', TS, 10, DB),
                'FIXDAT_QTY' => fi('FIXDAT_QTY', 'Fix qty/date', TS, 1, DB),
                'BOMEXPL_NO' => fi('BOMEXPL_NO', 'BOM expl.number', TS, 8, DB),
                'RESANALKEY' => fi('RESANALKEY', 'RA Key', TS, 6, DB),
                'REQMTS_TYP' => fi('REQMTS_TYP', 'Reqmts type', TS, 4, DB),
                'NO_GR_POST' => fi('NO_GR_POST', 'No GR posted', TS, 1, DB),
                'BUS_TRANST' => fi('BUS_TRANST', 'BusTransactType', TS, 2, DB),
                'OVERHD_KEY' => fi('OVERHD_KEY', 'Overhead key', TS, 6, DB),
                'CSTG_SHEET' => fi('CSTG_SHEET', 'Costing Sheet', TS, 6, DB),
                'MATFRGTGRP' => fi('MATFRGTGRP', 'Mat.freight grp', TS, 8, DB),
                'PLDLVSHDIN' => fi('PLDLVSHDIN', 'PlanDelSchedIns', TS, 4, DB),
                'SEQ_NO' => fi('SEQ_NO', 'Sequence number', TS, 35, DB),
                'BIL_FORM' => fi('BIL_FORM', 'Billing form', TS, 2, DB),
                'DLI_PROFIL' => fi('DLI_PROFIL', 'DIP Profile', TS, 8, DB),
                'REV_TYPE' => fi('REV_TYPE', 'Rev. recognition', TS, 1, DB),
                'BEGDEM_PER' => fi('BEGDEM_PER', 'Acc. period start', TS, 1, DB),
                'PR_REF_MAT' => fi('PR_REF_MAT', 'Pr. Ref. Matl', TS, 18, DB),
                'REFOBJTYPE' => fi('REFOBJTYPE', 'Object Type', TS, 10, DB),
                'REFOBJKEY' => fi('REFOBJKEY', 'Key', TS, 70, DB),
                'REFLOGSYS' => fi('REFLOGSYS', 'Logical System', TS, 10, DB),
                'ORDER_PROB' => fi('ORDER_PROB', 'Order probab.', TS, 3, DB),
                'MAX_PL_DLV' => fi('MAX_PL_DLV', 'Max.Part.Deliv.', TDC, 1,0, DB),
                'CFOP_CODE' => fi('CFOP_CODE', 'CFOP', TS, 5, DB),
                'TAXLAWICMS' => fi('TAXLAWICMS', 'ICMS law', TS, 3, DB),
                'TAXLAWIPI' => fi('TAXLAWIPI', 'IPI law', TS, 3, DB),
                'SD_TAXCODE' => fi('SD_TAXCODE', 'Tax code', TS, 2, DB),
                'ASSORT_MOD' => fi('ASSORT_MOD', 'Module', TS, 18, DB),
                'COMP_QUANT' => fi('COMP_QUANT', 'Quantity', TDC, 13,3, DB),
                'TARGET_VAL' => fi('TARGET_VAL', 'Currency amount', TDC, 29,9, DB),
                'CURRENCY_x' => fi('CURRENCY_x', 'Doc. Currency', TS, 5, DB),
                'CURR_ISO' => fi('CURR_ISO', 'ISO code crcy', TS, 3, DB),
                'PROFIT_CTR' => fi('PROFIT_CTR', 'Profit Center', TS, 10, DB),
                'ORDERID' => fi('ORDERID', 'Order', TS, 12, DB),
                'WBS_ELEM' => fi('WBS_ELEM', 'WBS Element', TS, 24, DB),
                'DEPREC_PER' => fi('DEPREC_PER', 'Depreciation', TDC, 5,2, DB),
                'REF_DOC' => fi('REF_DOC', 'Reference Doc.', TS, 10, DB),
                'REF_DOC_IT' => fi('REF_DOC_IT', 'Reference Item', TS, 6, DB),
                'REF_DOC_CA' => fi('REF_DOC_CA', 'Prec.doc.categ.', TS, 1, DB),
                'CUST_MAT35' => fi('CUST_MAT35', 'Cust.material', TS, 35, DB),
                'EXCH_RATE_FI_V' => fi('EXCH_RATE_FI_V', 'Exch.rate-acct.', TDC, 9,5, DB),
                'EXCHG_RATE_V' => fi('EXCHG_RATE_V', 'Exchange rate', TDC, 9,5, DB),
                'ITEMGUID_ATP' => fi('ITEMGUID_ATP', 'Item indicator', TS, 22, DB),
                'VAL_CONTR' => fi('VAL_CONTR', 'Value contract no.', TS, 10, DB),
                'VAL_CON_I' => fi('VAL_CON_I', 'Val. cont.item', TS, 6, DB),
                'CONFIG_ID' => fi('CONFIG_ID', 'Configuration ID', TS, 6, DB),
                'INST_ID' => fi('INST_ID', 'Instance Number', TS, 8, DB),
                'MAT_EXT' => fi('MAT_EXT', 'Material Number', TS, 40, DB),
                'MAT_GUID' => fi('MAT_GUID', 'GUID (External)', TS, 32, DB),
                'MAT_VERS' => fi('MAT_VERS', 'Version Number', TS, 10, DB),
                'P_MAT_EXT' => fi('P_MAT_EXT', 'Material Number', TS, 40, DB),
                'P_MAT_GUID' => fi('P_MAT_GUID', 'GUID (External)', TS, 32, DB),
                'P_MAT_VERS' => fi('P_MAT_VERS', 'Version Number', TS, 10, DB),
                'FUNC_AREA' => fi('FUNC_AREA', 'Functional Area', TS, 4, DB),
                'ALTERN_BOM' => fi('ALTERN_BOM', 'AltBOM', TS, 2, DB),
                'FKK_CONACCT' => fi('FKK_CONACCT', 'Character Field of Length 12', TS, 12, DB),
                'EAN_UPC' => fi('EAN_UPC', 'EAN/UPC', TS, 18, DB),
                'PRODCAT' => fi('PRODCAT', 'Catalog', TS, 10, DB),
                'SHIP_TYPE' => fi('SHIP_TYPE', 'Shipping type', TS, 2, DB),
                'S_PROC_IND' => fi('S_PROC_IND', 'Spec.processing', TS, 4, DB),
                'FUNC_AREA_LONG' => fi('FUNC_AREA_LONG', 'Functional Area', TS, 16, DB),
                'BILL_REL' => fi('BILL_REL', 'Bill. Relevance', TS, 1, DB),
                'VW_UEPOS' => fi('VW_UEPOS', 'Usage HL item', TS, 1, DB),
                'CAMPAIGN' => fi('CAMPAIGN', 'CGPL_GUID', TBLB, 16, DB),
                'DLVSCHDUSE' => fi('DLVSCHDUSE', 'Usage', TS, 3, DB),
                'CFOP_LONG' => fi('CFOP_LONG', 'CFOP', TS, 10, DB),
                'SELECTION' => fi('SELECTION', 'Selection ID', TS, 32, DB),
                'MAT_ENTRD' => fi('MAT_ENTRD', 'MaterialEntered', TS, 18, DB),
                'LOG_SYSTEM_OWN' => fi('LOG_SYSTEM_OWN', 'Logical System', TS, 10, DB),
                'ITM_TYPE_USAGE' => fi('ITM_TYPE_USAGE', 'Item usage', TS, 4, DB),
                'TAXLAWISS' => fi('TAXLAWISS', 'ISS Law', TS, 3, DB),
                'MAT_ENTRD_EXTERNAL' => fi('MAT_ENTRD_EXTERNAL', 'Material Number', TS, 40, DB),
                'MAT_ENTRD_GUID' => fi('MAT_ENTRD_GUID', 'GUID (External)', TS, 32, DB),
                'MAT_ENTRD_VERSION' => fi('MAT_ENTRD_VERSION', 'Version Number', TS, 10, DB),
                'LOC_TAXCAT' => fi('LOC_TAXCAT', 'Tax Type', TS, 2, DB),
                'LOC_ZEROVAT' => fi('LOC_ZEROVAT', 'Reas.0 VAT', TS, 1, DB),
                'LOC_ACTCODE' => fi('LOC_ACTCODE', 'Activity Code', TS, 2, DB),
                'LOC_DISTTYPE' => fi('LOC_DISTTYPE', 'Distr. Type', TS, 2, DB),
                'LOC_TXRELCLAS' => fi('LOC_TXRELCLAS', 'Tax rel. class.', TS, 10, DB),
                'CALC_MOTIVE' => fi('CALC_MOTIVE', 'AcctIndicator', TS, 2, DB),
                'COMPREAS' => fi('COMPREAS', 'Abbreviation', TS, 4, DB),
                'FUND' => fi('FUND', 'Fund', TS, 10, DB),
                'FUNDS_CTR' => fi('FUNDS_CTR', 'Funds Center', TS, 16, DB),
                'CMMT_ITEM' => fi('CMMT_ITEM', 'Commitment Item', TS, 24, DB),
                'GRANT_NBR' => fi('GRANT_NBR', 'Grant', TS, 20, DB),
                'BUDGET_PERIOD' => fi('BUDGET_PERIOD', 'Budget Period', TS, 10, DB),
                'TAXLAWCOFINS' => fi('TAXLAWCOFINS', 'COFINS Law', TS, 3, DB),
                'TAXLAWPIS' => fi('TAXLAWPIS', 'PIS Law', TS, 3, DB),
                'TREASURY_ACC_SYMBOL' => fi('TREASURY_ACC_SYMBOL', 'Treasury Acct Symbol', TS, 30, DB),
                'BUSINESS_EVENT_TCODE' => fi('BUSINESS_EVENT_TCODE', 'Business Event TCode', TS, 10, DB),
                'MODIFICATION_ALLOWED' => fi('MODIFICATION_ALLOWED', 'Modification Allowed', TS, 1, DB),
                'CANCELLATION_ALLOWED' => fi('CANCELLATION_ALLOWED', 'Cancellation Allowed', TS, 1, DB),
                'PAYMENT_METHODS' => fi('PAYMENT_METHODS', 'Payment methods', TS, 10, DB),
                'BUSINESS_PARTNER_NO' => fi('BUSINESS_PARTNER_NO', 'Business Partner No.', TS, 6, DB),
                'REPORTING_FREQ' => fi('REPORTING_FREQ', 'Reporting Frequency', TS, 3, DB),
                'SEPA_MANDATE_ID' => fi('SEPA_MANDATE_ID', 'Mandate Ref.', TS, 35, DB),
                'REQ_SEGMENT' => fi('REQ_SEGMENT', 'Reqmnt Segment', TS, 16, DB),
                'TP_SUBLEVL' => fi('TP_SUBLEVL', 'Sblvl Prfx (TP)', TS, 2, DB),
                'TP_AGENCID' => fi('TP_AGENCID', 'Agency ID (TP)', TS, 3, DB),
                'TP_ALTRAID' => fi('TP_ALTRAID', 'ATA (TP)', TS, 3, DB),
                'TP_BEGPER' => fi('TP_BEGPER', 'BgnPrdAvail(TP)', TS, 4, DB),
                'TP_ENDPER' => fi('TP_ENDPER', 'EndPrdAvail(TP)', TS, 4, DB),
                'TP_AVTYPE' => fi('TP_AVTYPE', 'AvailTypeCd(TP)', TS, 1, DB),
                'TP_MAIN_ACCT' => fi('TP_MAIN_ACCT', 'Main Acct (TP)', TS, 4, DB),
                'TP_SUB_ACCT' => fi('TP_SUB_ACCT', 'Subaccount (TP)', TS, 3, DB),
                'TP_BETC' => fi('TP_BETC', 'BsEvntTypCd(TP)', TS, 10, DB),
                'REVACC_REFID' => fi('REVACC_REFID', 'Rev.Acc. Ref ID', TS, 30, DB),
                'REVACC_REFTYPE' => fi('REVACC_REFTYPE', 'Rev.Acc. Ref Type', TS, 3, DB),
                'REF_DOC_CA_LONG' => fi('REF_DOC_CA_LONG', 'Document Cat.', TS, 4, DB),
                'INCOTERMSV' => fi('INCOTERMSV', 'Inco. Version', TS, 4, DB),
                'INCOTERMS2L' => fi('INCOTERMS2L', 'Inco. Location1', TS, 70, DB),
                'INCOTERMS3L' => fi('INCOTERMS3L', 'Inco. Location2', TS, 70, DB),
                'MATERIAL_LONG' => fi('MATERIAL_LONG', 'Material', TS, 40, DB),
                'PR_REF_MAT_LONG' => fi('PR_REF_MAT_LONG', 'Pr. Ref. Matl', TS, 40, DB),
                'MAT_ENTRD_LONG' => fi('MAT_ENTRD_LONG', 'MaterialEntered', TS, 40, DB),
                'PO_QUAN' => fi('PO_QUAN', 'PO Quantity', TDC, 13,3, DB),
                'PO_UNIT' => fi('PO_UNIT', 'Order Unit', TS, 3, DB),
                'REQ_SEG_LONG' => fi('REQ_SEG_LONG', 'Reqmnt Segment', TS, 40, DB),
                'x_FIS_CASH_KOSTL' => fi('x_FIS_CASH_KOSTL', 'Cost Center', TS, 10, DB),
                'SHORT_TEXT2' => fi('SHORT_TEXT2', '2. Description', TS, 40, DB)
            }
        ),
        'ORDER_ITEM_INX' => new overcast.TypeInfo('ORDER_ITEM_INX', 'Sales Order Items Check Table', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'ITM_NUMBER' => fi('ITM_NUMBER', 'Item', TS, 6, DB),
                'UPDATEFLAG' => fi('UPDATEFLAG', 'Update indicator', TS, 1, DB),
                'HG_LV_ITEM' => fi('HG_LV_ITEM', 'Updated Info', TS, 1, DB),
                'PO_ITM_NO' => fi('PO_ITM_NO', 'Updated Info', TS, 1, DB),
                'MATERIAL' => fi('MATERIAL', 'Updated Info', TS, 1, DB),
                'ALT_TO_ITM' => fi('ALT_TO_ITM', 'Updated Info', TS, 1, DB),
                'CUST_MAT22' => fi('CUST_MAT22', 'Updated Info', TS, 1, DB),
                'BATCH' => fi('BATCH', 'Updated Info', TS, 1, DB),
                'DLV_GROUP' => fi('DLV_GROUP', 'Updated Info', TS, 1, DB),
                'PART_DLV' => fi('PART_DLV', 'Updated Info', TS, 1, DB),
                'REASON_REJ' => fi('REASON_REJ', 'Updated Info', TS, 1, DB),
                'BILL_BLOCK' => fi('BILL_BLOCK', 'Updated Info', TS, 1, DB),
                'BILL_DATE' => fi('BILL_DATE', 'Updated Info', TS, 1, DB),
                'PLANT' => fi('PLANT', 'Updated Info', TS, 1, DB),
                'STORE_LOC' => fi('STORE_LOC', 'Updated Info', TS, 1, DB),
                'TARGET_QTY' => fi('TARGET_QTY', 'Updated Info', TS, 1, DB),
                'TARGET_QU' => fi('TARGET_QU', 'Updated Info', TS, 1, DB),
                'T_UNIT_ISO' => fi('T_UNIT_ISO', 'Updated Info', TS, 1, DB),
                'ITEM_CATEG' => fi('ITEM_CATEG', 'Updated Info', TS, 1, DB),
                'SHORT_TEXT' => fi('SHORT_TEXT', 'Updated Info', TS, 1, DB),
                'PRC_GROUP1' => fi('PRC_GROUP1', 'Updated Info', TS, 1, DB),
                'PRC_GROUP2' => fi('PRC_GROUP2', 'Updated Info', TS, 1, DB),
                'PRC_GROUP3' => fi('PRC_GROUP3', 'Updated Info', TS, 1, DB),
                'PRC_GROUP4' => fi('PRC_GROUP4', 'Updated Info', TS, 1, DB),
                'PRC_GROUP5' => fi('PRC_GROUP5', 'Updated Info', TS, 1, DB),
                'PROD_HIERA' => fi('PROD_HIERA', 'Updated Info', TS, 1, DB),
                'MATL_GROUP' => fi('MATL_GROUP', 'Updated Info', TS, 1, DB),
                'PURCH_NO_C' => fi('PURCH_NO_C', 'Updated Info', TS, 1, DB),
                'PURCH_DATE' => fi('PURCH_DATE', 'Updated Info', TS, 1, DB),
                'PO_METHOD' => fi('PO_METHOD', 'Updated Info', TS, 1, DB),
                'REF_1' => fi('REF_1', 'Updated Info', TS, 1, DB),
                'PURCH_NO_S' => fi('PURCH_NO_S', 'Updated Info', TS, 1, DB),
                'PO_DAT_S' => fi('PO_DAT_S', 'Updated Info', TS, 1, DB),
                'PO_METH_S' => fi('PO_METH_S', 'Updated Info', TS, 1, DB),
                'REF_1_S' => fi('REF_1_S', 'Updated Info', TS, 1, DB),
                'POITM_NO_S' => fi('POITM_NO_S', 'Updated Info', TS, 1, DB),
                'PRICE_GRP' => fi('PRICE_GRP', 'Updated Info', TS, 1, DB),
                'CUST_GROUP' => fi('CUST_GROUP', 'Updated Info', TS, 1, DB),
                'SALES_DIST' => fi('SALES_DIST', 'Updated Info', TS, 1, DB),
                'PRICE_LIST' => fi('PRICE_LIST', 'Updated Info', TS, 1, DB),
                'INCOTERMS1' => fi('INCOTERMS1', 'Updated Info', TS, 1, DB),
                'INCOTERMS2' => fi('INCOTERMS2', 'Updated Info', TS, 1, DB),
                'ORDCOMP_IN' => fi('ORDCOMP_IN', 'Updated Info', TS, 1, DB),
                'BILL_SCHED' => fi('BILL_SCHED', 'Updated Info', TS, 1, DB),
                'INVO_SCHED' => fi('INVO_SCHED', 'Updated Info', TS, 1, DB),
                'MN_INVOICE' => fi('MN_INVOICE', 'Updated Info', TS, 1, DB),
                'EX_RATE_FI' => fi('EX_RATE_FI', 'Updated Info', TS, 1, DB),
                'ADD_VAL_DY' => fi('ADD_VAL_DY', 'Updated Info', TS, 1, DB),
                'FIX_VAL_DY' => fi('FIX_VAL_DY', 'Updated Info', TS, 1, DB),
                'PMNTTRMS' => fi('PMNTTRMS', 'Updated Info', TS, 1, DB),
                'PYMT_METH' => fi('PYMT_METH', 'Updated Info', TS, 1, DB),
                'ACCNT_ASGN' => fi('ACCNT_ASGN', 'Updated Info', TS, 1, DB),
                'EXCHG_RATE' => fi('EXCHG_RATE', 'Updated Info', TS, 1, DB),
                'PRICE_DATE' => fi('PRICE_DATE', 'Updated Info', TS, 1, DB),
                'SERV_DATE' => fi('SERV_DATE', 'Updated Info', TS, 1, DB),
                'DUNN_KEY' => fi('DUNN_KEY', 'Updated Info', TS, 1, DB),
                'DUNN_BLOCK' => fi('DUNN_BLOCK', 'Updated Info', TS, 1, DB),
                'PROMOTION' => fi('PROMOTION', 'Updated Info', TS, 1, DB),
                'PMTGAR_PRO' => fi('PMTGAR_PRO', 'Updated Info', TS, 1, DB),
                'DOC_NUM_FI' => fi('DOC_NUM_FI', 'Updated Info', TS, 1, DB),
                'DEPARTM_NO' => fi('DEPARTM_NO', 'Updated Info', TS, 1, DB),
                'REC_POINT' => fi('REC_POINT', 'Updated Info', TS, 1, DB),
                'CSTCNDGRP1' => fi('CSTCNDGRP1', 'Updated Info', TS, 1, DB),
                'CSTCNDGRP2' => fi('CSTCNDGRP2', 'Updated Info', TS, 1, DB),
                'CSTCNDGRP3' => fi('CSTCNDGRP3', 'Updated Info', TS, 1, DB),
                'CSTCNDGRP4' => fi('CSTCNDGRP4', 'Updated Info', TS, 1, DB),
                'CSTCNDGRP5' => fi('CSTCNDGRP5', 'Updated Info', TS, 1, DB),
                'DLV_TIME' => fi('DLV_TIME', 'Updated Info', TS, 1, DB),
                'SALES_UNIT' => fi('SALES_UNIT', 'Updated Info', TS, 1, DB),
                'TRG_QTY_NO' => fi('TRG_QTY_NO', 'Updated Info', TS, 1, DB),
                'TRGQTY_DEN' => fi('TRGQTY_DEN', 'Updated Info', TS, 1, DB),
                'RNDDLV_QTY' => fi('RNDDLV_QTY', 'Updated Info', TS, 1, DB),
                'MAXDEVAMNT' => fi('MAXDEVAMNT', 'Updated Info', TS, 1, DB),
                'MAXDEVPER' => fi('MAXDEVPER', 'Updated Info', TS, 1, DB),
                'MAXDEV_DAY' => fi('MAXDEV_DAY', 'Updated Info', TS, 1, DB),
                'USAGE_IND' => fi('USAGE_IND', 'Updated Info', TS, 1, DB),
                'FIXED_QUAN' => fi('FIXED_QUAN', 'Updated Info', TS, 1, DB),
                'UNLMT_DLV' => fi('UNLMT_DLV', 'Updated Info', TS, 1, DB),
                'OVERDLVTOL' => fi('OVERDLVTOL', 'Updated Info', TS, 1, DB),
                'UNDDLV_TOL' => fi('UNDDLV_TOL', 'Updated Info', TS, 1, DB),
                'DIVISION' => fi('DIVISION', 'Updated Info', TS, 1, DB),
                'SALQTYNUM' => fi('SALQTYNUM', 'Updated Info', TS, 1, DB),
                'SALQTYDEN' => fi('SALQTYDEN', 'Updated Info', TS, 1, DB),
                'GROSS_WGHT' => fi('GROSS_WGHT', 'Updated Info', TS, 1, DB),
                'NET_WEIGHT' => fi('NET_WEIGHT', 'Updated Info', TS, 1, DB),
                'UNTOF_WGHT' => fi('UNTOF_WGHT', 'Updated Info', TS, 1, DB),
                'VOLUME' => fi('VOLUME', 'Updated Info', TS, 1, DB),
                'VOLUNIT' => fi('VOLUNIT', 'Updated Info', TS, 1, DB),
                'DLV_PRIO' => fi('DLV_PRIO', 'Updated Info', TS, 1, DB),
                'SHIP_POINT' => fi('SHIP_POINT', 'Updated Info', TS, 1, DB),
                'ROUTE' => fi('ROUTE', 'Updated Info', TS, 1, DB),
                'TAX_CLASS1' => fi('TAX_CLASS1', 'Updated Info', TS, 1, DB),
                'TAX_CLASS2' => fi('TAX_CLASS2', 'Updated Info', TS, 1, DB),
                'TAX_CLASS3' => fi('TAX_CLASS3', 'Updated Info', TS, 1, DB),
                'TAX_CLASS4' => fi('TAX_CLASS4', 'Updated Info', TS, 1, DB),
                'TAX_CLASS5' => fi('TAX_CLASS5', 'Updated Info', TS, 1, DB),
                'TAX_CLASS6' => fi('TAX_CLASS6', 'Updated Info', TS, 1, DB),
                'TAX_CLASS7' => fi('TAX_CLASS7', 'Updated Info', TS, 1, DB),
                'TAX_CLASS8' => fi('TAX_CLASS8', 'Updated Info', TS, 1, DB),
                'TAX_CLASS9' => fi('TAX_CLASS9', 'Updated Info', TS, 1, DB),
                'MAT_PR_GRP' => fi('MAT_PR_GRP', 'Updated Info', TS, 1, DB),
                'VAL_TYPE' => fi('VAL_TYPE', 'Updated Info', TS, 1, DB),
                'FIXDAT_QTY' => fi('FIXDAT_QTY', 'Updated Info', TS, 1, DB),
                'BOMEXPL_NO' => fi('BOMEXPL_NO', 'Updated Info', TS, 1, DB),
                'RESANALKEY' => fi('RESANALKEY', 'Updated Info', TS, 1, DB),
                'REQMTS_TYP' => fi('REQMTS_TYP', 'Updated Info', TS, 1, DB),
                'NO_GR_POST' => fi('NO_GR_POST', 'Updated Info', TS, 1, DB),
                'BUS_TRANST' => fi('BUS_TRANST', 'Updated Info', TS, 1, DB),
                'OVERHD_KEY' => fi('OVERHD_KEY', 'Updated Info', TS, 1, DB),
                'CSTG_SHEET' => fi('CSTG_SHEET', 'Updated Info', TS, 1, DB),
                'MATFRGTGRP' => fi('MATFRGTGRP', 'Updated Info', TS, 1, DB),
                'PLDLVSHDIN' => fi('PLDLVSHDIN', 'Updated Info', TS, 1, DB),
                'SEQ_NO' => fi('SEQ_NO', 'Updated Info', TS, 1, DB),
                'BIL_FORM' => fi('BIL_FORM', 'Updated Info', TS, 1, DB),
                'DLI_PROFIL' => fi('DLI_PROFIL', 'Updated Info', TS, 1, DB),
                'REV_TYPE' => fi('REV_TYPE', 'Updated Info', TS, 1, DB),
                'BEGDEM_PER' => fi('BEGDEM_PER', 'Updated Info', TS, 1, DB),
                'PR_REF_MAT' => fi('PR_REF_MAT', 'Updated Info', TS, 1, DB),
                'REFOBJTYPE' => fi('REFOBJTYPE', 'Updated Info', TS, 1, DB),
                'REFOBJKEY' => fi('REFOBJKEY', 'Updated Info', TS, 1, DB),
                'REFLOGSYS' => fi('REFLOGSYS', 'Updated Info', TS, 1, DB),
                'ORDER_PROB' => fi('ORDER_PROB', 'Updated Info', TS, 1, DB),
                'MAX_PL_DLV' => fi('MAX_PL_DLV', 'Updated Info', TS, 1, DB),
                'CFOP_CODE' => fi('CFOP_CODE', 'Updated Info', TS, 1, DB),
                'TAXLAWICMS' => fi('TAXLAWICMS', 'Updated Info', TS, 1, DB),
                'TAXLAWIPI' => fi('TAXLAWIPI', 'Updated Info', TS, 1, DB),
                'SD_TAXCODE' => fi('SD_TAXCODE', 'Updated Info', TS, 1, DB),
                'ASSORT_MOD' => fi('ASSORT_MOD', 'Updated Info', TS, 1, DB),
                'COMP_QUANT' => fi('COMP_QUANT', 'Updated Info', TS, 1, DB),
                'TARGET_VAL' => fi('TARGET_VAL', 'Updated Info', TS, 1, DB),
                'PROFIT_CTR' => fi('PROFIT_CTR', 'Updated Info', TS, 1, DB),
                'ORDERID' => fi('ORDERID', 'Updated Info', TS, 1, DB),
                'WBS_ELEM' => fi('WBS_ELEM', 'Updated Info', TS, 1, DB),
                'DEPREC_PER' => fi('DEPREC_PER', 'Updated Info', TS, 1, DB),
                'REF_DOC' => fi('REF_DOC', 'Updated Info', TS, 1, DB),
                'REF_DOC_IT' => fi('REF_DOC_IT', 'Updated Info', TS, 1, DB),
                'REF_DOC_CA' => fi('REF_DOC_CA', 'Updated Info', TS, 1, DB),
                'CUST_MAT35' => fi('CUST_MAT35', 'Updated Info', TS, 1, DB),
                'EXCH_RATE_FI_V' => fi('EXCH_RATE_FI_V', 'Updated Info', TS, 1, DB),
                'EXCHG_RATE_V' => fi('EXCHG_RATE_V', 'Updated Info', TS, 1, DB),
                'ITEMGUID_ATP' => fi('ITEMGUID_ATP', 'Updated Info', TS, 1, DB),
                'VAL_CONTR' => fi('VAL_CONTR', 'Updated Info', TS, 1, DB),
                'VAL_CON_I' => fi('VAL_CON_I', 'Updated Info', TS, 1, DB),
                'CONFIG_ID' => fi('CONFIG_ID', 'Updated Info', TS, 1, DB),
                'INST_ID' => fi('INST_ID', 'Updated Info', TS, 1, DB),
                'MAT_EXT' => fi('MAT_EXT', 'Updated Info', TS, 1, DB),
                'MAT_GUID' => fi('MAT_GUID', 'Updated Info', TS, 1, DB),
                'MAT_VERS' => fi('MAT_VERS', 'Updated Info', TS, 1, DB),
                'P_MAT_EXT' => fi('P_MAT_EXT', 'Updated Info', TS, 1, DB),
                'P_MAT_GUID' => fi('P_MAT_GUID', 'Updated Info', TS, 1, DB),
                'P_MAT_VERS' => fi('P_MAT_VERS', 'Updated Info', TS, 1, DB),
                'FUNC_AREA' => fi('FUNC_AREA', 'Updated Info', TS, 1, DB),
                'ALTERN_BOM' => fi('ALTERN_BOM', 'Updated Info', TS, 1, DB),
                'FKK_CONACCT' => fi('FKK_CONACCT', 'Updated Info', TS, 1, DB),
                'EAN_UPC' => fi('EAN_UPC', 'Updated Info', TS, 1, DB),
                'PRODCAT' => fi('PRODCAT', 'Updated Info', TS, 1, DB),
                'SHIP_TYPE' => fi('SHIP_TYPE', 'Updated Info', TS, 1, DB),
                'S_PROC_IND' => fi('S_PROC_IND', 'Updated Info', TS, 1, DB),
                'BILL_REL' => fi('BILL_REL', 'Updated Info', TS, 1, DB),
                'VW_UEPOS' => fi('VW_UEPOS', 'Updated Info', TS, 1, DB),
                'CAMPAIGN' => fi('CAMPAIGN', 'Updated Info', TS, 1, DB),
                'DLVSCHDUSE' => fi('DLVSCHDUSE', 'Updated Info', TS, 1, DB),
                'SELECTION' => fi('SELECTION', 'Updated Info', TS, 1, DB),
                'MAT_ENTRD' => fi('MAT_ENTRD', 'Updated Info', TS, 1, DB),
                'LOG_SYSTEM_OWN' => fi('LOG_SYSTEM_OWN', 'Updated Info', TS, 1, DB),
                'ITM_TYPE_USAGE' => fi('ITM_TYPE_USAGE', 'Updated Info', TS, 1, DB),
                'MAT_ENTRD_EXTERNAL' => fi('MAT_ENTRD_EXTERNAL', 'Updated Info', TS, 1, DB),
                'MAT_ENTRD_GUID' => fi('MAT_ENTRD_GUID', 'Updated Info', TS, 1, DB),
                'MAT_ENTRD_VERSION' => fi('MAT_ENTRD_VERSION', 'Updated Info', TS, 1, DB),
                'LOC_TAXCAT' => fi('LOC_TAXCAT', 'Updated Info', TS, 1, DB),
                'LOC_ZEROVAT' => fi('LOC_ZEROVAT', 'Updated Info', TS, 1, DB),
                'LOC_ACTCODE' => fi('LOC_ACTCODE', 'Updated Info', TS, 1, DB),
                'LOC_DISTTYPE' => fi('LOC_DISTTYPE', 'Updated Info', TS, 1, DB),
                'LOC_TXRELCLAS' => fi('LOC_TXRELCLAS', 'Updated Info', TS, 1, DB),
                'CALC_MOTIVE' => fi('CALC_MOTIVE', 'Updated Info', TS, 1, DB),
                'FUND' => fi('FUND', 'Updated Info', TS, 1, DB),
                'FUNDS_CTR' => fi('FUNDS_CTR', 'Updated Info', TS, 1, DB),
                'CMMT_ITEM' => fi('CMMT_ITEM', 'Updated Info', TS, 1, DB),
                'GRANT_NBR' => fi('GRANT_NBR', 'Updated Info', TS, 1, DB),
                'BUDGET_PERIOD' => fi('BUDGET_PERIOD', 'Updated Info', TS, 1, DB),
                'TAXLAWISS' => fi('TAXLAWISS', 'Updated Info', TS, 1, DB),
                'TAXLAWCOFINS' => fi('TAXLAWCOFINS', 'Updated Info', TS, 1, DB),
                'TAXLAWPIS' => fi('TAXLAWPIS', 'Updated Info', TS, 1, DB),
                'TREASURY_ACC_SYMBOL' => fi('TREASURY_ACC_SYMBOL', 'Updated Info', TS, 1, DB),
                'BUSINESS_EVENT_TCODE' => fi('BUSINESS_EVENT_TCODE', 'Updated Info', TS, 1, DB),
                'MODIFICATION_ALLOWED' => fi('MODIFICATION_ALLOWED', 'Updated Info', TS, 1, DB),
                'CANCELLATION_ALLOWED' => fi('CANCELLATION_ALLOWED', 'Updated Info', TS, 1, DB),
                'PAYMENT_METHODS' => fi('PAYMENT_METHODS', 'Updated Info', TS, 1, DB),
                'BUSINESS_PARTNER_NO' => fi('BUSINESS_PARTNER_NO', 'Updated Info', TS, 1, DB),
                'REPORTING_FREQ' => fi('REPORTING_FREQ', 'Updated Info', TS, 1, DB),
                'CFOP_LONG' => fi('CFOP_LONG', 'Updated Info', TS, 1, DB),
                'SEPA_MANDATE_ID' => fi('SEPA_MANDATE_ID', 'Updated Info', TS, 1, DB),
                'REQ_SEGMENT' => fi('REQ_SEGMENT', 'Updated Info', TS, 1, DB),
                'TP_SUBLEVL' => fi('TP_SUBLEVL', 'Updated Info', TS, 1, DB),
                'TP_AGENCID' => fi('TP_AGENCID', 'Updated Info', TS, 1, DB),
                'TP_ALTRAID' => fi('TP_ALTRAID', 'Updated Info', TS, 1, DB),
                'TP_BEGPER' => fi('TP_BEGPER', 'Updated Info', TS, 1, DB),
                'TP_ENDPER' => fi('TP_ENDPER', 'Updated Info', TS, 1, DB),
                'TP_AVTYPE' => fi('TP_AVTYPE', 'Updated Info', TS, 1, DB),
                'TP_MAIN_ACCT' => fi('TP_MAIN_ACCT', 'Updated Info', TS, 1, DB),
                'TP_SUB_ACCT' => fi('TP_SUB_ACCT', 'Updated Info', TS, 1, DB),
                'TP_BETC' => fi('TP_BETC', 'Updated Info', TS, 1, DB),
                'REVACC_REFID' => fi('REVACC_REFID', 'Updated Info', TS, 1, DB),
                'REVACC_REFTYPE' => fi('REVACC_REFTYPE', 'Updated Info', TS, 1, DB),
                'REF_DOC_CA_LONG' => fi('REF_DOC_CA_LONG', 'Updated Info', TS, 1, DB),
                'INCOTERMSV' => fi('INCOTERMSV', 'Updated Info', TS, 1, DB),
                'INCOTERMS2L' => fi('INCOTERMS2L', 'Updated Info', TS, 1, DB),
                'INCOTERMS3L' => fi('INCOTERMS3L', 'Updated Info', TS, 1, DB),
                'MATERIAL_LONG' => fi('MATERIAL_LONG', 'Updated Info', TS, 1, DB),
                'PR_REF_MAT_LONG' => fi('PR_REF_MAT_LONG', 'Updated Info', TS, 1, DB),
                'MAT_ENTRD_LONG' => fi('MAT_ENTRD_LONG', 'Updated Info', TS, 1, DB),
                'PO_QUAN' => fi('PO_QUAN', 'Updated Info', TS, 1, DB),
                'PO_UNIT' => fi('PO_UNIT', 'Updated Info', TS, 1, DB),
                'REQ_SEG_LONG' => fi('REQ_SEG_LONG', 'Updated Info', TS, 1, DB),
                'SHORT_TEXT2' => fi('SHORT_TEXT2', 'Updated Info', TS, 1, DB)
            }
        ),
        'PARTNERS' => new overcast.TypeInfo('PARTNERS', 'Communications Fields: SD Document Partner: WWW', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'PARTN_ROLE' => fi('PARTN_ROLE', 'Partner Functn', TS, 2, DB),
                'PARTN_NUMB' => fi('PARTN_NUMB', 'Customer', TS, 10, DB),
                'ITM_NUMBER' => fi('ITM_NUMBER', 'Item', TS, 6, DB),
                'TITLE' => fi('TITLE', 'Form of address', TS, 15, DB),
                'NAME' => fi('NAME', 'Name', TS, 35, DB),
                'NAME_2' => fi('NAME_2', 'Name 2', TS, 35, DB),
                'NAME_3' => fi('NAME_3', 'Name 3', TS, 35, DB),
                'NAME_4' => fi('NAME_4', 'Name 4', TS, 35, DB),
                'STREET' => fi('STREET', 'Street', TS, 35, DB),
                'COUNTRY' => fi('COUNTRY', 'Country', TS, 3, DB),
                'COUNTR_ISO' => fi('COUNTR_ISO', 'Country ISO', TS, 2, DB),
                'POSTL_CODE' => fi('POSTL_CODE', 'Postal Code', TS, 10, DB),
                'POBX_PCD' => fi('POBX_PCD', 'PO Box PCode', TS, 10, DB),
                'POBX_CTY' => fi('POBX_CTY', 'P.O.Box city', TS, 35, DB),
                'CITY' => fi('CITY', 'City', TS, 35, DB),
                'DISTRICT' => fi('DISTRICT', 'District', TS, 35, DB),
                'REGION' => fi('REGION', 'Region', TS, 3, DB),
                'PO_BOX' => fi('PO_BOX', 'PO Box', TS, 10, DB),
                'TELEPHONE' => fi('TELEPHONE', 'Telephone 1', TS, 16, DB),
                'TELEPHONE2' => fi('TELEPHONE2', 'Telephone 2', TS, 16, DB),
                'TELEBOX' => fi('TELEBOX', 'Telebox', TS, 15, DB),
                'FAX_NUMBER' => fi('FAX_NUMBER', 'Fax Number', TS, 31, DB),
                'TELETEX_NO' => fi('TELETEX_NO', 'Teletex', TS, 30, DB),
                'TELEX_NO' => fi('TELEX_NO', 'Telex', TS, 30, DB),
                'LANGU' => fi('LANGU', 'Language', TS, 1, DB),
                'LANGU_ISO' => fi('LANGU_ISO', 'Lang. (ISO)', TS, 2, DB),
                'UNLOAD_PT' => fi('UNLOAD_PT', 'Unloading Point', TS, 25, DB),
                'TRANSPZONE' => fi('TRANSPZONE', 'Transport Zone', TS, 10, DB),
                'TAXJURCODE' => fi('TAXJURCODE', 'Tax Jur.', TS, 15, DB),
                'ADDRESS' => fi('ADDRESS', 'Address', TS, 10, DB),
                'PRIV_ADDR' => fi('PRIV_ADDR', 'Home address', TS, 10, DB),
                'ADDR_TYPE' => fi('ADDR_TYPE', 'Address Type', TS, 1, DB),
                'ADDR_ORIG' => fi('ADDR_ORIG', 'Address origin', TS, 1, DB),
                'ADDR_LINK' => fi('ADDR_LINK', 'Address no.', TS, 10, DB),
                'REFOBJTYPE' => fi('REFOBJTYPE', 'Object Type', TS, 10, DB),
                'REFOBJKEY' => fi('REFOBJKEY', 'Key', TS, 70, DB),
                'REFLOGSYS' => fi('REFLOGSYS', 'Logical System', TS, 10, DB),
                'VAT_REG_NO' => fi('VAT_REG_NO', 'VAT Reg. No.', TS, 20, DB)
            }
        ),
        'PARTNERCHANGES' => new overcast.TypeInfo('PARTNERCHANGES', 'Partner changes', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'DOCUMENT' => fi('DOCUMENT', 'SD Document', TS, 10, DB),
                'ITM_NUMBER' => fi('ITM_NUMBER', 'Item', TS, 6, DB),
                'UPDATEFLAG' => fi('UPDATEFLAG', 'Update indicator', TS, 1, DB),
                'PARTN_ROLE' => fi('PARTN_ROLE', 'Partner Functn', TS, 2, DB),
                'P_NUMB_OLD' => fi('P_NUMB_OLD', 'Partner', TS, 10, DB),
                'P_NUMB_NEW' => fi('P_NUMB_NEW', 'Partner', TS, 10, DB),
                'ADDRESS' => fi('ADDRESS', 'Address', TS, 10, DB),
                'ADDR_LINK' => fi('ADDR_LINK', 'Address no.', TS, 10, DB),
                'REFOBJTYPE' => fi('REFOBJTYPE', 'Object Type', TS, 10, DB),
                'REFOBJKEY' => fi('REFOBJKEY', 'Key', TS, 70, DB),
                'REFLOGSYS' => fi('REFLOGSYS', 'Logical System', TS, 10, DB)
            }
        ),
        'PARTNERADDRESSES' => new overcast.TypeInfo('PARTNERADDRESSES', 'BAPI Reference Structure for Addresses (Org./Company)', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'ADDR_NO' => fi('ADDR_NO', 'Address Number', TS, 10, DB),
                'FORMOFADDR' => fi('FORMOFADDR', 'Form of address', TS, 20, DB),
                'NAME' => fi('NAME', 'Name', TS, 40, DB),
                'NAME_2' => fi('NAME_2', 'Name 2', TS, 40, DB),
                'NAME_3' => fi('NAME_3', 'Name 3', TS, 40, DB),
                'NAME_4' => fi('NAME_4', 'Name 4', TS, 40, DB),
                'C_O_NAME' => fi('C_O_NAME', 'c/o', TS, 40, DB),
                'CITY' => fi('CITY', 'City', TS, 40, DB),
                'DISTRICT' => fi('DISTRICT', 'District', TS, 40, DB),
                'CITY_NO' => fi('CITY_NO', 'City Code', TS, 12, DB),
                'POSTL_COD1' => fi('POSTL_COD1', 'Postal Code', TS, 10, DB),
                'POSTL_COD2' => fi('POSTL_COD2', 'PO Box Post Cde', TS, 10, DB),
                'POSTL_COD3' => fi('POSTL_COD3', 'Company Post Cd', TS, 10, DB),
                'PO_BOX' => fi('PO_BOX', 'PO Box', TS, 10, DB),
                'PO_BOX_CIT' => fi('PO_BOX_CIT', 'PO Box City', TS, 40, DB),
                'DELIV_DIS' => fi('DELIV_DIS', 'Delivery Dist.', TS, 15, DB),
                'STREET' => fi('STREET', 'Street', TS, 40, DB),
                'STREET_NO' => fi('STREET_NO', 'Street Code', TS, 12, DB),
                'STR_ABBR' => fi('STR_ABBR', 'Street Abbrev.', TS, 2, DB),
                'HOUSE_NO' => fi('HOUSE_NO', 'House Number', TS, 10, DB),
                'STR_SUPPL1' => fi('STR_SUPPL1', 'Street 2', TS, 40, DB),
                'STR_SUPPL2' => fi('STR_SUPPL2', 'Street 3', TS, 40, DB),
                'LOCATION' => fi('LOCATION', 'Street 5', TS, 40, DB),
                'BUILDING' => fi('BUILDING', 'Building code', TS, 10, DB),
                'FLOOR' => fi('FLOOR', 'Floor', TS, 10, DB),
                'ROOM_NO' => fi('ROOM_NO', 'Room Number', TS, 10, DB),
                'COUNTRY' => fi('COUNTRY', 'Country', TS, 3, DB),
                'LANGU' => fi('LANGU', 'Language', TS, 1, DB),
                'REGION' => fi('REGION', 'Region', TS, 3, DB),
                'SORT1' => fi('SORT1', 'Search Term 1', TS, 20, DB),
                'SORT2' => fi('SORT2', 'Search Term 2', TS, 20, DB),
                'TIME_ZONE' => fi('TIME_ZONE', 'Time Zone', TS, 6, DB),
                'TAXJURCODE' => fi('TAXJURCODE', 'Tax Jurisdiction', TS, 15, DB),
                'ADR_NOTES' => fi('ADR_NOTES', 'Notes', TS, 50, DB),
                'COMM_TYPE' => fi('COMM_TYPE', 'Comm. Method', TS, 3, DB),
                'TEL1_NUMBR' => fi('TEL1_NUMBR', 'Telephone', TS, 30, DB),
                'TEL1_EXT' => fi('TEL1_EXT', 'Extension', TS, 10, DB),
                'FAX_NUMBER' => fi('FAX_NUMBER', 'Fax', TS, 30, DB),
                'FAX_EXTENS' => fi('FAX_EXTENS', 'Extension', TS, 10, DB),
                'STREET_LNG' => fi('STREET_LNG', 'Street', TS, 60, DB),
                'DISTRCT_NO' => fi('DISTRCT_NO', 'District', TS, 8, DB),
                'CHCKSTATUS' => fi('CHCKSTATUS', 'Check Status', TS, 1, DB),
                'PBOXCIT_NO' => fi('PBOXCIT_NO', 'City Code', TS, 12, DB),
                'TRANSPZONE' => fi('TRANSPZONE', 'Transport Zone', TS, 10, DB),
                'HOUSE_NO2' => fi('HOUSE_NO2', 'Supplement', TS, 10, DB),
                'E_MAIL' => fi('E_MAIL', 'E-Mail Address', TS, 241, DB),
                'STR_SUPPL3' => fi('STR_SUPPL3', 'Street 4', TS, 40, DB),
                'TITLE' => fi('TITLE', 'Title', TS, 30, DB),
                'COUNTRYISO' => fi('COUNTRYISO', 'ISO Code', TS, 2, DB),
                'LANGU_ISO' => fi('LANGU_ISO', 'Lang. (ISO)', TS, 2, DB),
                'BUILD_LONG' => fi('BUILD_LONG', 'Building Code', TS, 20, DB),
                'REGIOGROUP' => fi('REGIOGROUP', 'Structure Group', TS, 8, DB),
                'HOME_CITY' => fi('HOME_CITY', 'Different City', TS, 40, DB),
                'HOMECITYNO' => fi('HOMECITYNO', 'City Code', TS, 12, DB),
                'PCODE1_EXT' => fi('PCODE1_EXT', 'Postal Code Ext', TS, 10, DB),
                'PCODE2_EXT' => fi('PCODE2_EXT', 'Postal Code Ext', TS, 10, DB),
                'PCODE3_EXT' => fi('PCODE3_EXT', 'Postal Code Ext', TS, 10, DB),
                'PO_W_O_NO' => fi('PO_W_O_NO', 'PO Box w/o No.', TS, 1, DB),
                'PO_BOX_REG' => fi('PO_BOX_REG', 'PO Region', TS, 3, DB),
                'POBOX_CTRY' => fi('POBOX_CTRY', 'PO box country', TS, 3, DB),
                'PO_CTRYISO' => fi('PO_CTRYISO', 'ISO Code', TS, 2, DB),
                'HOMEPAGE' => fi('HOMEPAGE', 'URI', TS, 132, DB),
                'DONT_USE_S' => fi('DONT_USE_S', 'Undeliverable', TS, 4, DB),
                'DONT_USE_P' => fi('DONT_USE_P', 'Undeliverable', TS, 4, DB),
                'HOUSE_NO3' => fi('HOUSE_NO3', 'Number Range', TS, 10, DB),
                'LANGU_CR' => fi('LANGU_CR', 'Creation lang.', TS, 1, DB),
                'LANGUCRISO' => fi('LANGUCRISO', 'Lang. (ISO)', TS, 2, DB),
                'PO_BOX_LOBBY' => fi('PO_BOX_LOBBY', 'PO Box Lobby', TS, 40, DB),
                'DELI_SERV_TYPE' => fi('DELI_SERV_TYPE', 'Delvry Serv Type', TS, 4, DB),
                'DELI_SERV_NUMBER' => fi('DELI_SERV_NUMBER', 'Delivery Service No.', TS, 10, DB),
                'URI_TYPE' => fi('URI_TYPE', 'URI type', TS, 3, DB),
                'COUNTY_CODE' => fi('COUNTY_CODE', 'County code', TS, 8, DB),
                'COUNTY' => fi('COUNTY', 'County', TS, 40, DB),
                'TOWNSHIP_CODE' => fi('TOWNSHIP_CODE', 'Township code', TS, 8, DB),
                'TOWNSHIP' => fi('TOWNSHIP', 'Township', TS, 40, DB),
                'XPCPT' => fi('XPCPT', 'PurposeComplete Flag', TS, 1, DB),
                'ZZMOBPHONE' => fi('ZZMOBPHONE', 'Telephone No.', TS, 30, DB),
                'ZZMOBPHONECOUNTRY' => fi('ZZMOBPHONECOUNTRY', 'Country', TS, 3, DB),
                'ZZTELCOUNTRY' => fi('ZZTELCOUNTRY', 'Country', TS, 3, DB),
                'ZZFAXCOUNTRY' => fi('ZZFAXCOUNTRY', 'Country', TS, 3, DB)
            }
        ),
        'ORDER_CFGS_REF' => new overcast.TypeInfo('ORDER_CFGS_REF', 'Configuration: Reference Data', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'POSEX' => fi('POSEX', 'External Item', TS, 6, DB),
                'CONFIG_ID' => fi('CONFIG_ID', 'Configuration ID', TS, 6, DB),
                'ROOT_ID' => fi('ROOT_ID', 'Instance Number', TS, 8, DB),
                'SCE' => fi('SCE', 'Config. Type', TS, 1, DB),
                'KBNAME' => fi('KBNAME', 'KB Object', TS, 30, DB),
                'KBVERSION' => fi('KBVERSION', 'Version', TS, 30, DB),
                'COMPLETE' => fi('COMPLETE', 'Indicators', TS, 1, DB),
                'CONSISTENT' => fi('CONSISTENT', 'Indicators', TS, 1, DB),
                'CFGINFO' => fi('CFGINFO', 'BLOB', TS, 250, DB),
                'KBPROFILE' => fi('KBPROFILE', 'KB Profile', TS, 30, DB),
                'KBLANGUAGE' => fi('KBLANGUAGE', 'KB Language', TS, 1, DB),
                'CBASE_ID' => fi('CBASE_ID', 'Instance', TS, 32, DB),
                'CBASE_ID_TYPE' => fi('CBASE_ID_TYPE', 'ID Type', TS, 1, DB)
            }
        ),
        'ORDER_CFGS_INST' => new overcast.TypeInfo('ORDER_CFGS_INST', 'Configuration: Instances', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'CONFIG_ID' => fi('CONFIG_ID', 'Configuration ID', TS, 6, DB),
                'INST_ID' => fi('INST_ID', 'Instance Number', TS, 8, DB),
                'OBJ_TYPE' => fi('OBJ_TYPE', 'External Obj. Type', TS, 10, DB),
                'CLASS_TYPE' => fi('CLASS_TYPE', 'Class Type', TS, 3, DB),
                'OBJ_KEY' => fi('OBJ_KEY', 'Object Key', TS, 50, DB),
                'OBJ_TXT' => fi('OBJ_TXT', 'Obj.Description', TS, 70, DB),
                'QUANTITY' => fi('QUANTITY', 'Instance Qty', TS, 15, DB),
                'AUTHOR' => fi('AUTHOR', 'Inferred', TS, 1, DB),
                'QUANTITY_UNIT' => fi('QUANTITY_UNIT', 'Unit of Measure', TS, 3, DB),
                'COMPLETE' => fi('COMPLETE', 'Indicators', TS, 1, DB),
                'CONSISTENT' => fi('CONSISTENT', 'Indicators', TS, 1, DB),
                'OBJECT_GUID' => fi('OBJECT_GUID', 'TYPE_OF', TS, 32, DB),
                'PERSIST_ID' => fi('PERSIST_ID', 'Instance', TS, 32, DB),
                'PERSIST_ID_TYPE' => fi('PERSIST_ID_TYPE', 'ID Type', TS, 1, DB)
            }
        ),
        'ORDER_CFGS_PART_OF' => new overcast.TypeInfo('ORDER_CFGS_PART_OF', 'Configuration: Part-of Specifications', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'CONFIG_ID' => fi('CONFIG_ID', 'Configuration ID', TS, 6, DB),
                'PARENT_ID' => fi('PARENT_ID', 'Instance Number', TS, 8, DB),
                'INST_ID' => fi('INST_ID', 'Instance Number', TS, 8, DB),
                'PART_OF_NO' => fi('PART_OF_NO', 'Item Number', TS, 4, DB),
                'OBJ_TYPE' => fi('OBJ_TYPE', 'External Obj. Type', TS, 10, DB),
                'CLASS_TYPE' => fi('CLASS_TYPE', 'Class Type', TS, 3, DB),
                'OBJ_KEY' => fi('OBJ_KEY', 'Object Key', TS, 50, DB),
                'AUTHOR' => fi('AUTHOR', 'Inferred', TS, 1, DB),
                'SALES_RELEVANT' => fi('SALES_RELEVANT', 'Sales relevant', TS, 1, DB),
                'PART_OF_GUID' => fi('PART_OF_GUID', 'PART_OF', TS, 32, DB)
            }
        ),
        'ORDER_CFGS_VALUE' => new overcast.TypeInfo('ORDER_CFGS_VALUE', 'Configuration: Characteristic Values', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'CONFIG_ID' => fi('CONFIG_ID', 'Configuration ID', TS, 6, DB),
                'INST_ID' => fi('INST_ID', 'Instance Number', TS, 8, DB),
                'CHARC' => fi('CHARC', 'Char. Name', TS, 40, DB),
                'CHARC_TXT' => fi('CHARC_TXT', 'Char. Description', TS, 70, DB),
                'VALUE' => fi('VALUE', 'Char. Value', TS, 40, DB),
                'VALUE_TXT' => fi('VALUE_TXT', 'Value Descript.', TS, 70, DB),
                'AUTHOR' => fi('AUTHOR', 'Inferred', TS, 1, DB),
                'VALUE_TO' => fi('VALUE_TO', 'Char. Value', TS, 40, DB),
                'VALCODE' => fi('VALCODE', 'Value Type', TS, 1, DB)
            }
        ),
        'ORDER_CFGS_BLOB' => new overcast.TypeInfo('ORDER_CFGS_BLOB', 'Internal Configuration Data (SCE)', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'CONFIG_ID' => fi('CONFIG_ID', 'Configuration ID', TS, 6, DB),
                'CONTEXT' => fi('CONTEXT', 'BLOB', TS, 250, DB)
            }
        ),
        'ORDER_CFGS_VK' => new overcast.TypeInfo('ORDER_CFGS_VK', 'Configuration: Variant Condition Key', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'CONFIG_ID' => fi('CONFIG_ID', 'Configuration ID', TS, 6, DB),
                'INST_ID' => fi('INST_ID', 'Instance Number', TS, 8, DB),
                'VKEY' => fi('VKEY', 'Var. Cond. Key', TS, 26, DB),
                'FACTOR' => fi('FACTOR', 'Factor', TS, 15, DB)
            }
        ),
        'ORDER_CFGS_REFINST' => new overcast.TypeInfo('ORDER_CFGS_REFINST', 'Configuration: Reference Item / Instance', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'POSEX' => fi('POSEX', 'External Item', TS, 6, DB),
                'CONFIG_ID' => fi('CONFIG_ID', 'Configuration ID', TS, 6, DB),
                'INST_ID' => fi('INST_ID', 'Instance Number', TS, 8, DB)
            }
        ),
        'SCHEDULE_LINES' => new overcast.TypeInfo('SCHEDULE_LINES', 'Schedule Lines', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'ITM_NUMBER' => fi('ITM_NUMBER', 'Item', TS, 6, DB),
                'SCHED_LINE' => fi('SCHED_LINE', 'Schedule Line', TS, 4, DB),
                'REQ_DATE' => fi('REQ_DATE', 'Delivery Date', TD, 8, DB),
                'DATE_TYPE' => fi('DATE_TYPE', 'Date type', TS, 1, DB),
                'REQ_TIME' => fi('REQ_TIME', 'Arrival time', TS, 8, DB),
                'REQ_QTY' => fi('REQ_QTY', 'Order quantity', TDC, 13,3, DB),
                'REQ_DLV_BL' => fi('REQ_DLV_BL', 'Delivery block', TS, 2, DB),
                'SCHED_TYPE' => fi('SCHED_TYPE', 'Sched.line cat.', TS, 2, DB),
                'TP_DATE' => fi('TP_DATE', 'TranspPlngDate', TD, 8, DB),
                'MS_DATE' => fi('MS_DATE', 'Mat.Avail.Date', TD, 8, DB),
                'LOAD_DATE' => fi('LOAD_DATE', 'Loading Date', TD, 8, DB),
                'GI_DATE' => fi('GI_DATE', 'Goods Issue', TD, 8, DB),
                'TP_TIME' => fi('TP_TIME', 'Tr. Plan. Time', TS, 8, DB),
                'MS_TIME' => fi('MS_TIME', 'Matl Staging Tme', TS, 8, DB),
                'LOAD_TIME' => fi('LOAD_TIME', 'Loading Time', TS, 8, DB),
                'GI_TIME' => fi('GI_TIME', 'GI Time', TS, 8, DB),
                'REFOBJTYPE' => fi('REFOBJTYPE', 'Object Type', TS, 10, DB),
                'REFOBJKEY' => fi('REFOBJKEY', 'Key', TS, 70, DB),
                'REFLOGSYS' => fi('REFLOGSYS', 'Logical System', TS, 10, DB),
                'DLV_DATE' => fi('DLV_DATE', 'Delivery Date', TD, 8, DB),
                'DLV_TIME' => fi('DLV_TIME', 'Arrival time', TS, 8, DB),
                'REL_TYPE' => fi('REL_TYPE', 'Rel. Type', TS, 1, DB),
                'PLAN_SCHED_TYPE' => fi('PLAN_SCHED_TYPE', 'Sched.line type', TS, 1, DB)
            }
        ),
        'SCHEDULE_LINESX' => new overcast.TypeInfo('SCHEDULE_LINESX', 'Check Table for Schedule Lines', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'ITM_NUMBER' => fi('ITM_NUMBER', 'Item', TS, 6, DB),
                'SCHED_LINE' => fi('SCHED_LINE', 'Schedule Line', TS, 4, DB),
                'UPDATEFLAG' => fi('UPDATEFLAG', 'Update indicator', TS, 1, DB),
                'REQ_DATE' => fi('REQ_DATE', 'Updated Info', TS, 1, DB),
                'DATE_TYPE' => fi('DATE_TYPE', 'Updated Info', TS, 1, DB),
                'REQ_TIME' => fi('REQ_TIME', 'Updated Info', TS, 1, DB),
                'REQ_QTY' => fi('REQ_QTY', 'Updated Info', TS, 1, DB),
                'REQ_DLV_BL' => fi('REQ_DLV_BL', 'Updated Info', TS, 1, DB),
                'SCHED_TYPE' => fi('SCHED_TYPE', 'Updated Info', TS, 1, DB),
                'TP_DATE' => fi('TP_DATE', 'Updated Info', TS, 1, DB),
                'MS_DATE' => fi('MS_DATE', 'Updated Info', TS, 1, DB),
                'LOAD_DATE' => fi('LOAD_DATE', 'Updated Info', TS, 1, DB),
                'GI_DATE' => fi('GI_DATE', 'Updated Info', TS, 1, DB),
                'TP_TIME' => fi('TP_TIME', 'Updated Info', TS, 1, DB),
                'MS_TIME' => fi('MS_TIME', 'Updated Info', TS, 1, DB),
                'LOAD_TIME' => fi('LOAD_TIME', 'Updated Info', TS, 1, DB),
                'GI_TIME' => fi('GI_TIME', 'Updated Info', TS, 1, DB),
                'REFOBJTYPE' => fi('REFOBJTYPE', 'Object Type', TS, 10, DB),
                'REFOBJKEY' => fi('REFOBJKEY', 'Key', TS, 70, DB),
                'DLV_DATE' => fi('DLV_DATE', 'Updated Info', TS, 1, DB),
                'DLV_TIME' => fi('DLV_TIME', 'Updated Info', TS, 1, DB),
                'REL_TYPE' => fi('REL_TYPE', 'Updated Info', TS, 1, DB),
                'PLAN_SCHED_TYPE' => fi('PLAN_SCHED_TYPE', 'Updated Info', TS, 1, DB)
            }
        ),
        'ORDER_TEXT' => new overcast.TypeInfo('ORDER_TEXT', 'Texts', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'DOC_NUMBER' => fi('DOC_NUMBER', 'Sales Document', TS, 10, DB),
                'ITM_NUMBER' => fi('ITM_NUMBER', 'Item', TS, 6, DB),
                'TEXT_ID' => fi('TEXT_ID', 'Text ID', TS, 4, DB),
                'LANGU' => fi('LANGU', 'Language', TS, 1, DB),
                'LANGU_ISO' => fi('LANGU_ISO', 'Lang. (ISO)', TS, 2, DB),
                'FORMAT_COL' => fi('FORMAT_COL', 'Tag column', TS, 2, DB),
                'TEXT_LINE' => fi('TEXT_LINE', 'Text Line', TS, 132, DB),
                'FUNCTION' => fi('FUNCTION', 'Function', TS, 3, DB)
            }
        ),
        'ORDER_KEYS' => new overcast.TypeInfo('ORDER_KEYS', 'Output Table of Reference Keys', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'REFOBJTYP' => fi('REFOBJTYP', 'Object Type', TS, 10, DB),
                'REFOBJECT' => fi('REFOBJECT', 'Object name', TS, 32, DB),
                'REFOBJKEY' => fi('REFOBJKEY', 'Key', TS, 70, DB),
                'REFLOGSYS' => fi('REFLOGSYS', 'Logical System', TS, 10, DB),
                'DOC_NUMBER' => fi('DOC_NUMBER', 'SD Document', TS, 10, DB),
                'ITM_NUMBER' => fi('ITM_NUMBER', 'Item', TS, 6, DB),
                'SCHED_LIN' => fi('SCHED_LIN', 'Schedule Line', TS, 4, DB),
                'COND_NO' => fi('COND_NO', 'Doc. condition', TS, 10, DB),
                'CONDITEMNO' => fi('CONDITEMNO', 'Item', TS, 6, DB),
                'COND_ST_NO' => fi('COND_ST_NO', 'Step number', TS, 3, DB),
                'COND_COUNT' => fi('COND_COUNT', 'Counter', TS, 2, DB),
                'COND_TYPE' => fi('COND_TYPE', 'Condition Type', TS, 4, DB),
                'STATUS' => fi('STATUS', 'Single-Character Flag', TS, 1, DB),
                'TINDEX' => fi('TINDEX', 'Number', TS, 6, DB),
                'ADDRESS' => fi('ADDRESS', 'Address', TS, 10, DB),
                'ABRLI' => fi('ABRLI', 'Int.dlv.scd.no.', TS, 4, DB),
                'ABART' => fi('ABART', 'Rel. Type', TS, 1, DB)
            }
        ),
        'CONDITIONS_IN' => new overcast.TypeInfo('CONDITIONS_IN', 'Conditions', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'ITM_NUMBER' => fi('ITM_NUMBER', 'Item', TS, 6, DB),
                'COND_ST_NO' => fi('COND_ST_NO', 'Step number', TS, 3, DB),
                'COND_COUNT' => fi('COND_COUNT', 'Counter', TS, 2, DB),
                'COND_TYPE' => fi('COND_TYPE', 'Condition Type', TS, 4, DB),
                'COND_VALUE' => fi('COND_VALUE', 'Amount', TDC, 29,9, DB),
                'CURRENCY_x' => fi('CURRENCY_x', 'Currency', TS, 5, DB),
                'COND_UNIT' => fi('COND_UNIT', 'Unit of measure', TS, 3, DB),
                'COND_P_UNT' => fi('COND_P_UNT', 'Pricing unit', TDC, 5,0, DB),
                'CURR_ISO' => fi('CURR_ISO', 'ISO code crcy', TS, 3, DB),
                'CD_UNT_ISO' => fi('CD_UNT_ISO', 'ISO cond. UoM', TS, 3, DB),
                'REFOBJTYPE' => fi('REFOBJTYPE', 'Object Type', TS, 10, DB),
                'REFOBJKEY' => fi('REFOBJKEY', 'Key', TS, 70, DB),
                'REFLOGSYS' => fi('REFLOGSYS', 'Logical System', TS, 10, DB),
                'APPLICATIO' => fi('APPLICATIO', 'Application', TS, 2, DB),
                'CONPRICDAT' => fi('CONPRICDAT', 'CondPricingDate', TD, 8, DB),
                'CALCTYPCON' => fi('CALCTYPCON', 'Calculat.type', TS, 1, DB),
                'CONBASEVAL' => fi('CONBASEVAL', 'Cond.base value', TDC, 29,9, DB),
                'CONEXCHRAT' => fi('CONEXCHRAT', 'Cond.exch.rate', TDC, 9,5, DB),
                'NUMCONVERT' => fi('NUMCONVERT', 'Numer.for conv.', TDC, 5,0, DB),
                'DENOMINATO' => fi('DENOMINATO', 'Den. for conv.', TDC, 5,0, DB),
                'CONDTYPE' => fi('CONDTYPE', 'Condit.category', TS, 1, DB),
                'STAT_CON' => fi('STAT_CON', 'Statistical', TS, 1, DB),
                'SCALETYPE' => fi('SCALETYPE', 'Scale type', TS, 1, DB),
                'ACCRUALS' => fi('ACCRUALS', 'Accruals', TS, 1, DB),
                'CONINVOLST' => fi('CONINVOLST', 'Inv.list cond.', TS, 1, DB),
                'CONDORIGIN' => fi('CONDORIGIN', 'Condit.origin', TS, 1, DB),
                'GROUPCOND' => fi('GROUPCOND', 'Group condition', TS, 1, DB),
                'COND_UPDAT' => fi('COND_UPDAT', 'Condit.update', TS, 1, DB),
                'ACCESS_SEQ' => fi('ACCESS_SEQ', 'Access', TS, 2, DB),
                'CONDCOUNT' => fi('CONDCOUNT', 'SequNo of cond.', TS, 2, DB),
                'ROUNDOFFDI' => fi('ROUNDOFFDI', 'Currency amount', TDC, 29,9, DB),
                'CONDVALUE' => fi('CONDVALUE', 'Condition value', TDC, 29,9, DB),
                'CURRENCY_2' => fi('CURRENCY_2', 'Doc. Currency', TS, 5, DB),
                'CURR_ISO_2' => fi('CURR_ISO_2', 'ISO code crcy', TS, 3, DB),
                'CONDCNTRL' => fi('CONDCNTRL', 'Cond.control', TS, 1, DB),
                'CONDISACTI' => fi('CONDISACTI', 'Inactive', TS, 1, DB),
                'CONDCLASS' => fi('CONDCLASS', 'Condition class', TS, 1, DB),
                'FACTBASVAL' => fi('FACTBASVAL', 'CondFactor', TDBL, 16,8, DB),
                'SCALEBASIN' => fi('SCALEBASIN', 'Scale basis', TS, 1, DB),
                'SCALBASVAL' => fi('SCALBASVAL', 'Scale base val.', TDC, 29,9, DB),
                'UNITMEASUR' => fi('UNITMEASUR', 'Scale UoM', TS, 3, DB),
                'ISO_UNIT' => fi('ISO_UNIT', 'ISO code', TS, 3, DB),
                'CURRENCKEY' => fi('CURRENCKEY', 'Scale currency', TS, 5, DB),
                'CURRENISO' => fi('CURRENISO', 'ISO code crcy', TS, 3, DB),
                'CONDINCOMP' => fi('CONDINCOMP', 'Int-comBillCond', TS, 1, DB),
                'CONDCONFIG' => fi('CONDCONFIG', 'Variant cond.', TS, 1, DB),
                'CONDCHAMAN' => fi('CONDCHAMAN', 'Changed manual.', TS, 1, DB),
                'COND_NO' => fi('COND_NO', 'Cond.record no.', TS, 10, DB),
                'TAX_CODE' => fi('TAX_CODE', 'Tax Code', TS, 2, DB),
                'VARCOND' => fi('VARCOND', 'Variant', TS, 26, DB),
                'ACCOUNTKEY' => fi('ACCOUNTKEY', 'Account key', TS, 3, DB),
                'ACCOUNT_KE' => fi('ACCOUNT_KE', 'Accruals', TS, 3, DB),
                'WT_WITHCD' => fi('WT_WITHCD', 'W/tax code', TS, 2, DB),
                'STRUCTCOND' => fi('STRUCTCOND', 'StrucCond.', TS, 1, DB),
                'FACTCONBAS' => fi('FACTCONBAS', 'CondFactor', TDBL, 16,8, DB),
                'CONDCOINHD' => fi('CONDCOINHD', 'HdCond.counter', TS, 2, DB)
            }
        ),
        'CONDITIONS_INX' => new overcast.TypeInfo('CONDITIONS_INX', 'Conditions Checkbox', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'ITM_NUMBER' => fi('ITM_NUMBER', 'Item', TS, 6, DB),
                'COND_ST_NO' => fi('COND_ST_NO', 'Step number', TS, 3, DB),
                'COND_COUNT' => fi('COND_COUNT', 'SequNo of cond.', TS, 2, DB),
                'COND_TYPE' => fi('COND_TYPE', 'Condition Type', TS, 4, DB),
                'UPDATEFLAG' => fi('UPDATEFLAG', 'Update indicator', TS, 1, DB),
                'COND_VALUE' => fi('COND_VALUE', 'Updated Info', TS, 1, DB),
                'CURRENCY_x' => fi('CURRENCY_x', 'Updated Info', TS, 1, DB),
                'COND_UNIT' => fi('COND_UNIT', 'Updated Info', TS, 1, DB),
                'COND_P_UNT' => fi('COND_P_UNT', 'Updated Info', TS, 1, DB),
                'VARCOND' => fi('VARCOND', 'Variant', TS, 26, DB)
            }
        ),
        'EXTENSIONIN' => new overcast.TypeInfo('EXTENSIONIN', 'Customer Enhancement for VBAK, VBAP, VBEP', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'STRUCTURE' => fi('STRUCTURE', 'Structure name of  BAPI table extension', TS, 30, DB),
                'VALUEPART1' => fi('VALUEPART1', 'Data part of BAPI extension parameter', TS, 240, DB),
                'VALUEPART2' => fi('VALUEPART2', 'Data part of BAPI extension parameter', TS, 240, DB),
                'VALUEPART3' => fi('VALUEPART3', 'Data part of BAPI extension parameter', TS, 240, DB),
                'VALUEPART4' => fi('VALUEPART4', 'Data part of BAPI extension parameter', TS, 240, DB)
            }
        ),
        'EXTENSIONEX' => new overcast.TypeInfo('EXTENSIONEX', 'Reference Structure for BAPI Parameters ExtensionIn/ExtensionOut', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'STRUCTURE' => fi('STRUCTURE', 'Table ext.struct.', TS, 30, DB),
                'VALUEPART1' => fi('VALUEPART1', 'Data', TS, 240, DB),
                'VALUEPART2' => fi('VALUEPART2', 'Data', TS, 240, DB),
                'VALUEPART3' => fi('VALUEPART3', 'Data', TS, 240, DB),
                'VALUEPART4' => fi('VALUEPART4', 'Data', TS, 240, DB)
            }
        )
    };
}