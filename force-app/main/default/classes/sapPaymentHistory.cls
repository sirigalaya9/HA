global class sapPaymentHistory extends overcast.Realtime.ScenarioExtension implements overcast.Realtime.Queryable {
/* 
 * Generated by Overcast UTC 2024-03-12 09:51:20Z.
 * This class belongs to the sapPaymentHistory Real-time Integration Scenario.
 * Changes to this class may cause incorrect behavior and will be lost if the scenario is re-activated.
 */
     global class sapPaymentHistoryException extends overcast.Realtime.ScenarioException {
         private List<String> messages;
        global override List<String> getMessages() {
            return messages;
        }
        public void setMessages(List<String> messages) {
            this.messages = messages;
        }

        private List<String> backendMessages;
        global override List<String> getBackendMessages() {
            return backendMessages;
        }
        public void setBackendMessages(List<String> backendMessages) {
            this.backendMessages = backendMessages;
        }

        public sapPaymentHistoryException(List<object> messages, List<object> backendMessages) {
            super(string.join(messages, ';'));
            this.messages = new List<String>();
            for (object message : messages) {
                this.messages.add((String)message);
            }
            this.backendMessages = new List<String>();
            if (backendMessages != null) {
                for (object message : backendMessages) {
                    this.backendMessages.add((String)message);
                }
            }
        }
    }
    global sapPaymentHistory() {
        this.KNB4 = new list<sapPaymentHistory.KNB4>();
    }

    public class KNB4 {
        @AuraEnabled public String KUNNR { get; set; }
        @AuraEnabled public String BUKRS { get; set; }
        @AuraEnabled public String JAH01 { get; set; }
        @AuraEnabled public String MON01 { get; set; }
        @AuraEnabled public Decimal AGS01 { get; set; }
        @AuraEnabled public Decimal VZS01 { get; set; }
        @AuraEnabled public Decimal AGN01 { get; set; }
        @AuraEnabled public Decimal VZN01 { get; set; }
        @AuraEnabled public Decimal ANZ01 { get; set; }
        @AuraEnabled public String JAH02 { get; set; }
        @AuraEnabled public String MON02 { get; set; }
        @AuraEnabled public Decimal AGS02 { get; set; }
        @AuraEnabled public Decimal VZS02 { get; set; }
        @AuraEnabled public Decimal AGN02 { get; set; }
        @AuraEnabled public Decimal VZN02 { get; set; }
        @AuraEnabled public Decimal ANZ02 { get; set; }
        @AuraEnabled public String JAH03 { get; set; }
        @AuraEnabled public String MON03 { get; set; }
        @AuraEnabled public Decimal AGS03 { get; set; }
        @AuraEnabled public Decimal VZS03 { get; set; }
        @AuraEnabled public Decimal AGN03 { get; set; }
        @AuraEnabled public Decimal VZN03 { get; set; }
        @AuraEnabled public Decimal ANZ03 { get; set; }
        @AuraEnabled public String JAH04 { get; set; }
        @AuraEnabled public String MON04 { get; set; }
        @AuraEnabled public Decimal AGS04 { get; set; }
        @AuraEnabled public Decimal VZS04 { get; set; }
        @AuraEnabled public Decimal AGN04 { get; set; }
        @AuraEnabled public Decimal VZN04 { get; set; }
        @AuraEnabled public Decimal ANZ04 { get; set; }
        @AuraEnabled public String JAH05 { get; set; }
        @AuraEnabled public String MON05 { get; set; }
        @AuraEnabled public Decimal AGS05 { get; set; }
        @AuraEnabled public Decimal VZS05 { get; set; }
        @AuraEnabled public Decimal AGN05 { get; set; }
        @AuraEnabled public Decimal VZN05 { get; set; }
        @AuraEnabled public Decimal ANZ05 { get; set; }
        @AuraEnabled public String JAH06 { get; set; }
        @AuraEnabled public String MON06 { get; set; }
        @AuraEnabled public Decimal AGS06 { get; set; }
        @AuraEnabled public Decimal VZS06 { get; set; }
        @AuraEnabled public Decimal AGN06 { get; set; }
        @AuraEnabled public Decimal VZN06 { get; set; }
        @AuraEnabled public Decimal ANZ06 { get; set; }
        @AuraEnabled public String JAH07 { get; set; }
        @AuraEnabled public String MON07 { get; set; }
        @AuraEnabled public Decimal AGS07 { get; set; }
        @AuraEnabled public Decimal VZS07 { get; set; }
        @AuraEnabled public Decimal AGN07 { get; set; }
        @AuraEnabled public Decimal VZN07 { get; set; }
        @AuraEnabled public Decimal ANZ07 { get; set; }
        @AuraEnabled public String JAH08 { get; set; }
        @AuraEnabled public String MON08 { get; set; }
        @AuraEnabled public Decimal AGS08 { get; set; }
        @AuraEnabled public Decimal VZS08 { get; set; }
        @AuraEnabled public Decimal AGN08 { get; set; }
        @AuraEnabled public Decimal VZN08 { get; set; }
        @AuraEnabled public Decimal ANZ08 { get; set; }
        @AuraEnabled public String JAH09 { get; set; }
        @AuraEnabled public String MON09 { get; set; }
        @AuraEnabled public Decimal AGS09 { get; set; }
        @AuraEnabled public Decimal VZS09 { get; set; }
        @AuraEnabled public Decimal AGN09 { get; set; }
        @AuraEnabled public Decimal VZN09 { get; set; }
        @AuraEnabled public Decimal ANZ09 { get; set; }
        @AuraEnabled public String JAH10 { get; set; }
        @AuraEnabled public String MON10 { get; set; }
        @AuraEnabled public Decimal AGS10 { get; set; }
        @AuraEnabled public Decimal VZS10 { get; set; }
        @AuraEnabled public Decimal AGN10 { get; set; }
        @AuraEnabled public Decimal VZN10 { get; set; }
        @AuraEnabled public Decimal ANZ10 { get; set; }
        @AuraEnabled public String JAH11 { get; set; }
        @AuraEnabled public String MON11 { get; set; }
        @AuraEnabled public Decimal AGS11 { get; set; }
        @AuraEnabled public Decimal VZS11 { get; set; }
        @AuraEnabled public Decimal AGN11 { get; set; }
        @AuraEnabled public Decimal VZN11 { get; set; }
        @AuraEnabled public Decimal ANZ11 { get; set; }

        public KNB4() {}
    }

    @AuraEnabled public list<sapPaymentHistory.KNB4> KNB4 { get; set; }

    public string inputSetName { get; set; }

    public sapPaymentHistory runQuery(overcast.Query query) {
        overcast.Logger logger1 = createLogger();
        try {
            sapPaymentHistory response = this.runQuery(query, logger1, null);
            logger1.commitToDatabase();
            return response;
        }
        catch (Exception e) {
            logger1.addLog('ERROR', e.getTypeName() + ': ' + e.getMessage());
            logger1.setStatusCode(300);
            logger1.commitToDatabase();
            throw e;
        }
    }

    public sapPaymentHistory runQuery(overcast.Query query, overcast.Logger logger, string namedCredential) {
        return run(overcast.SynchronousHandler.OperationType.EpgwSelect, query, logger, namedCredential);
    }

    public string runQueryAsync(overcast.Query query, overcast.Logger logger, string namedCredential, Continuation con) {
        return runAsync(overcast.SynchronousHandler.OperationType.EpgwSelect, query, logger, namedCredential, con);
    }

    public static sapPaymentHistory getAsyncResponse(String requestLabel) {
        HttpResponse response = Continuation.getResponse(requestLabel);
        return sapPaymentHistory.deserialize(response.getBody());
    }

    private overcast.SynchronousHandler setup(overcast.SynchronousHandler.OperationType operation, overcast.Query query, overcast.Logger logger, string namedCredential) {
        overcast.SynchronousHandler sh = overcast.SynchronousHandler.CreateFromName('sapPaymentHistory');
        sh.InputSetName = this.inputSetName;
        sh.InputJson = this.serialize();
        sh.NamedCredential = namedCredential;
        if (logger != null) {
            logger.setInputSetName(String.isBlank(this.inputSetName) ? sh.CorrelationId : this.inputSetName);
            logger.setIdemId(sh.CorrelationId);
        }
        sh.Operation = operation;
        
        if (query != null) {
            sh.query = query;
        }

        sh.loadExtensions(this);

        return sh;
    }
    
    private sapPaymentHistory run(overcast.SynchronousHandler.OperationType operation, overcast.Query query, overcast.Logger logger, string namedCredential) {
        overcast.SynchronousHandler sh = setup(operation, query, logger, namedCredential);

        if (Test.isRunningTest()) {
            if (this.dynamicBody != null) {
                return this;
            }
            return sapPaymentHistory.deserialize(this.testResponse);
        }
        overcast.EpgwController.ExecuteScenarioSynchronously(sh, logger);

        return sapPaymentHistory.deserialize(sh.Response);
    }

    private string runAsync(overcast.SynchronousHandler.OperationType operation, overcast.Query query, overcast.Logger logger, string namedCredential, Continuation con) {
        overcast.SynchronousHandler sh = setup(operation, query, logger, namedCredential);

        sh.ContinuationWebRequest = new HttpRequest();

        overcast.EpgwController.ExecuteScenarioSynchronously(sh, logger);

        return con.addHttpRequest(sh.ContinuationWebRequest);
    }
        

    private static overcast.Logger createLogger() {
        return new overcast.Logger('sapPaymentHistory');
    }

    global override string getBackendMessage() {
        return this.backendMessage;
    }

    global string serialize() {
        if (dynamicBody != null) {
            return JSON.serialize(dynamicBody, true);
        }
        return JSON.serialize(this, true);
    }

        
    public class BodyContents extends overcast.Realtime.ContentsBody {
        public sapPaymentHistory output { get; set; }
    }

    private static sapPaymentHistory.BodyContents getBodyContents(string responseData) {
        if (string.isblank(responseData)) {
            throw new sapPaymentHistoryException('Response null for sapPaymentHistory request.');
        }

        sapPaymentHistory.BodyContents contents = (sapPaymentHistory.BodyContents) JSON.deserialize(responseData, sapPaymentHistory.BodyContents.class);
        if (contents.error != null) {
            sapPaymentHistoryException ex = new sapPaymentHistoryException(string.join(contents.error, ';'));
            ex.setMessages(contents.error);
            ex.setBackendMessages(contents.backendErrorMessages == null ? new List<String>() : contents.backendErrorMessages);
            throw ex;
        }
        return contents;
    }

    public static sapPaymentHistory deserialize(string responsedata) {
        if (overcast.Globals.IsOCF) {
            sapPaymentHistory obj = new sapPaymentHistory();
            obj.loadAsyncResponse(responsedata);
            return obj;
        }
        sapPaymentHistory.BodyContents contents = getBodyContents(responsedata);
        contents.output.backendMessage = contents.backendMessage;

        return contents.output;
    }

    private static map<string, string> getOutputData(string responseData) {
        if (string.isblank(responsedata)) {
            throw new sapPaymentHistoryException('Response null for sapPaymentHistory request.');
        }

        map<string, string> m = new map<string, string>();

        JSONParser jresponse = JSON.createParser(responsedata);
        jresponse.nextValue();

        boolean hasOutput = false;
        string[] errors = null;
        string[] backendErrorMessages = null;
        while (jresponse.nextValue() != JSONToken.END_OBJECT && jresponse.getCurrentToken() != null) {
            if (jresponse.getCurrentName() == 'output') {
                jresponse.skipChildren();
                hasOutput = true;
                continue;
            }
            if (jresponse.getCurrentName() == 'backendMessage') {
                m.put('backendMessage', (string)jresponse.readValueAs(string.class));
                continue;
            }
            if (jresponse.getCurrentName() == 'error') {
                errors = (string[])jresponse.readValueAs(list<string>.class);
                jresponse.skipChildren();
                continue;
            }
            if (jresponse.getCurrentName() == 'backendErrorMessages') {
                backendErrorMessages = (string[])jresponse.readValueAs(list<string>.class);
                jresponse.skipChildren();
                continue;
            }
        }
        if (errors != null) {
            sapPaymentHistoryException ex = new sapPaymentHistoryException(string.join(errors, ';'));
            ex.setMessages(errors);
            ex.setBackendMessages(backendErrorMessages == null ? new List<String>() : backendErrorMessages);
            throw ex;
        }
        if (!hasOutput) {
            throw new sapPaymentHistoryException('Malformed response for sapPaymentHistory request.');
        }
        integer start = responsedata.indexOf(':') + 1;
        integer lastIndex = m.get('backendMessage') == null
            ? responsedata.length() - 2
            : responsedata.lastIndexOf('backendMessage');
        integer finish = responsedata.lastIndexOf('}', lastIndex) + 1;
        m.put('output', responseData.substring(start, finish));
        return m;
    }


    public transient string testResponse;
    private transient string outputData;
    private transient string backendMessage;

    private transient map<string, overcast.TypeInfo> metadata;
    private transient map<string, object> dynamicBody;

    global void loadAsyncResponse(string responseBody) {
        if (overcast.Globals.IsOCF) {
            if (string.isblank(responseBody)) {
                throw new sapPaymentHistoryException('Response null for sapPaymentHistory request.');
            }
            map<string, object> responseObj = (map<string, object>)JSON.deserializeUntyped(responseBody);
            if (responseObj.containsKey('error')) {
                throw new sapPaymentHistoryException((List<object>)responseObj.get('error'), (List<object>)responseObj.get('backendErrorMessages'));
            }
            backendMessage = (string)responseObj.get('backendMessage');
            dynamicBody = (map<string, object>)responseObj.get('output');
            return;
        }

        map<string, string> m = getOutputData(responseBody);
        outputData = m.get('output');
        backendMessage = m.get('backendMessage');
        
        if (outputData != null) {
            dynamicBody = (map<string, object>)JSON.deserializeUntyped(outputData);
        }
    }

    global string getTopTypeName() {
        return 'KNB4';
    }

    global void set(string typeName, object records) {
        if (typeName == '@testResponse') {
            dynamicBody = (map<string, object>)records;
            return;
        }
        if (dynamicBody == null) {
            dynamicBody = new map<string, object>();
        }
        
        dynamicBody.put(typeName, records);
    }
    
    global object get(string typeName) {
        if (dynamicBody == null && outputData != null) {
            dynamicBody = (map<string, object>)JSON.deserializeUntyped(outputData);
        }
        if (dynamicBody == null) { 
            return null;
        }
        return dynamicBody.get(typeName);
    }

    global map<string, overcast.TypeInfo> getMetadata() {
        if (metadata == null) {
            metadata = new Map<String, overcast.TypeInfo>();
            metadata.putAll(sapPaymentHistoryMeta0.metadata);
        }
        return metadata;
    }

}