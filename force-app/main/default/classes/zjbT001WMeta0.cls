global class zjbT001WMeta0 {
/* 
 * Generated by Overcast UTC 2024-02-20 10:52:43Z.
 * Changes to this class may cause incorrect behavior and will be lost if the scenario is re-activated.
 */

    static overcast.Realtime.StructureType SS = overcast.Realtime.StructureType.STRUCTURE;
    static overcast.Realtime.StructureType ST = overcast.Realtime.StructureType.TABLE;

    static overcast.Realtime.Direction DI = overcast.Realtime.Direction.INPUT;
    static overcast.Realtime.Direction DOx = overcast.Realtime.Direction.OUTPUT;
    static overcast.Realtime.Direction DB = overcast.Realtime.Direction.BOTH;
    
    static overcast.Realtime.ApexType TS = overcast.Realtime.ApexType.STRINGX;
    static overcast.Realtime.ApexType TI = overcast.Realtime.ApexType.INTEGERX;
    static overcast.Realtime.ApexType TL = overcast.Realtime.ApexType.LONGX;
    static overcast.Realtime.ApexType TB = overcast.Realtime.ApexType.BOOLEANX;
    static overcast.Realtime.ApexType TD = overcast.Realtime.ApexType.DATEX;
    static overcast.Realtime.ApexType TDT = overcast.Realtime.ApexType.DATETIMEX;
    static overcast.Realtime.ApexType TDC = overcast.Realtime.ApexType.DECIMALX;
    static overcast.Realtime.ApexType TDBL = overcast.Realtime.ApexType.DOUBLEX;
    static overcast.Realtime.ApexType TT = overcast.Realtime.ApexType.TIMEX;
    static overcast.Realtime.ApexType TBLB = overcast.Realtime.ApexType.BLOBX;

    static overcast.FieldInfo fi(String a, String b, overcast.Realtime.ApexType c, Integer d, overcast.Realtime.Direction e) {
        return new overcast.FieldInfo(a, b, c, d, e);
    }

    static overcast.FieldInfo fi(String a, String b, overcast.Realtime.ApexType c, Integer d, Integer e, overcast.Realtime.Direction f) {
        return new overcast.FieldInfo(a, b, c, d, e, f);
    }

    public static Map<String, overcast.TypeInfo> metadata = new Map<String, overcast.TypeInfo> {
        'T001W' => new overcast.TypeInfo('T001W', '', ST, DOx,
            new Map<String, overcast.FieldInfo> {
                'MANDT' => fi('MANDT', 'Mandant', TS, 3, DOx),
                'WERKS' => fi('WERKS', 'Werk', TS, 4, DOx),
                'NAME1' => fi('NAME1', 'Name 1', TS, 30, DOx),
                'BWKEY' => fi('BWKEY', 'Bewertungskreis', TS, 4, DOx),
                'KUNNR' => fi('KUNNR', 'Debitor', TS, 10, DOx),
                'LIFNR' => fi('LIFNR', 'Kreditor', TS, 10, DOx),
                'FABKL' => fi('FABKL', 'Fabrikkal', TS, 2, DOx),
                'NAME2' => fi('NAME2', 'Name 2', TS, 30, DOx),
                'STRAS' => fi('STRAS', 'Straße/Hausnr', TS, 30, DOx),
                'PFACH' => fi('PFACH', 'Postfach', TS, 10, DOx),
                'PSTLZ' => fi('PSTLZ', 'Postleitzahl', TS, 10, DOx),
                'ORT01' => fi('ORT01', 'Ort', TS, 25, DOx),
                'EKORG' => fi('EKORG', 'Einkaufsorg', TS, 4, DOx),
                'VKORG' => fi('VKORG', 'Verkaufsorg.', TS, 4, DOx),
                'CHAZV' => fi('CHAZV', 'ChargZustVerw', TS, 1, DOx),
                'KKOWK' => fi('KKOWK', 'Kond.Werksebene', TS, 1, DOx),
                'KORDB' => fi('KORDB', 'Orderbuchpfl.', TS, 1, DOx),
                'BEDPL' => fi('BEDPL', 'Bedarfspl.', TS, 1, DOx),
                'LAND1' => fi('LAND1', 'Land', TS, 3, DOx),
                'REGIO' => fi('REGIO', 'Region', TS, 3, DOx),
                'COUNC' => fi('COUNC', 'County Code', TS, 3, DOx),
                'CITYC' => fi('CITYC', 'City-Code', TS, 4, DOx),
                'ADRNR' => fi('ADRNR', 'Adresse', TS, 10, DOx),
                'IWERK' => fi('IWERK', 'Planungswerk', TS, 4, DOx),
                'TXJCD' => fi('TXJCD', 'Steuerstandort', TS, 15, DOx),
                'VTWEG' => fi('VTWEG', 'Vertriebsweg', TS, 2, DOx),
                'SPART' => fi('SPART', 'Sparte', TS, 2, DOx),
                'SPRAS' => fi('SPRAS', 'Sprache', TS, 1, DOx),
                'WKSOP' => fi('WKSOP', 'SOP-Werk', TS, 1, DOx),
                'AWSLS' => fi('AWSLS', 'AbweichSchl.', TS, 6, DOx),
                'CHAZV_OLD' => fi('CHAZV_OLD', 'Kennzeichen: Chargenzustandsverwaltung aktiv', TS, 1, DOx),
                'VLFKZ' => fi('VLFKZ', 'Werkstyp', TS, 1, DOx),
                'BZIRK' => fi('BZIRK', 'Kundenbezirk', TS, 6, DOx),
                'ZONE1' => fi('ZONE1', 'Lieferregion', TS, 10, DOx),
                'TAXIW' => fi('TAXIW', 'Steuerindikator Werk (Einkauf)', TS, 1, DOx),
                'BZQHL' => fi('BZQHL', 'Regellieferant', TS, 1, DOx),
                'LET01' => fi('LET01', 'Toleranztage_1', TDC, 3,0, DOx),
                'LET02' => fi('LET02', 'Toleranztage_2', TDC, 3,0, DOx),
                'LET03' => fi('LET03', 'Toleranztage_3', TDC, 3,0, DOx),
                'TXNAM_MA1' => fi('TXNAM_MA1', 'Text 1. Mahnung', TS, 16, DOx),
                'TXNAM_MA2' => fi('TXNAM_MA2', 'Text 2. Mahnung', TS, 16, DOx),
                'TXNAM_MA3' => fi('TXNAM_MA3', 'Text 3. Mahnung', TS, 16, DOx),
                'BETOL' => fi('BETOL', 'Bestelltoleranz', TS, 3, DOx),
                'J_1BBRANCH' => fi('J_1BBRANCH', 'Geschäftsort', TS, 4, DOx),
                'VTBFI' => fi('VTBFI', 'Vertr.ber.Find.', TS, 2, DOx),
                'FPRFW' => fi('FPRFW', 'Verteilungsprofil', TS, 3, DOx),
                'ACHVM' => fi('ACHVM', 'Zentrale Archivierungsvormerkung für Stammsatz', TS, 1, DOx),
                'DVSART' => fi('DVSART', 'DVS-Art', TS, 1, DOx),
                'NODETYPE' => fi('NODETYPE', 'Knotentyp SCM', TS, 3, DOx),
                'NSCHEMA' => fi('NSCHEMA', 'Schema für die Namensbildung', TS, 4, DOx),
                'PKOSA' => fi('PKOSA', 'Anbindung der Kostenträgerrechnung aktiv', TS, 1, DOx),
                'MISCH' => fi('MISCH', 'Fortschreibung für die Mischkalkulation aktiv', TS, 1, DOx),
                'MGVUPD' => fi('MGVUPD', 'Fortschreibung für die Istkalkulation aktiv', TS, 1, DOx),
                'VSTEL' => fi('VSTEL', 'Versandstelle', TS, 4, DOx),
                'MGVLAUPD' => fi('MGVLAUPD', 'Leistungsverbrauchsfortschreibung im Mengengerüst', TS, 1, DOx),
                'MGVLAREVAL' => fi('MGVLAREVAL', 'Steuerung der Kostenstellen-Entlastung', TS, 1, DOx),
                'SOURCING' => fi('SOURCING', 'Ansprung Sourcing über ATP', TS, 1, DOx),
                'OILIVAL' => fi('OILIVAL', 'Exchange-Bewertungskennzeichen', TS, 1, DOx),
                'OIHVTYPE' => fi('OIHVTYPE', 'Lieferantenart (Raffinerie/Fabrik/andere) - Brasilien', TS, 1, DOx),
                'OIHCREDIPI' => fi('OIHCREDIPI', 'Kredit für IPI zulässig', TS, 1, DOx),
                'STORETYPE' => fi('STORETYPE', 'Filialtyp zur Unterscheidung Filiale, Warenhaus, Shop', TS, 1, DOx),
                'DEP_STORE' => fi('DEP_STORE', 'übergeordnetes Warenhaus', TS, 4, DOx),
                'Z_VB_KZ' => fi('Z_VB_KZ', 'Kennzeichen Werk ist Verkaufsbüro', TS, 1, DOx),
                'ZZHWWPIHDE_AUART' => fi('ZZHWWPIHDE_AUART', 'Lieferausprägung', TS, 1, DOx),
                'ZZHWW_STCEG' => fi('ZZHWW_STCEG', 'Umsatzsteuer-Identifikationsnummer', TS, 20, DOx),
                'ZZPRDWRK_KZ' => fi('ZZPRDWRK_KZ', 'Kennz. Werk ist ein Produktionswerk', TS, 1, DOx)
            }
        )
    };
}