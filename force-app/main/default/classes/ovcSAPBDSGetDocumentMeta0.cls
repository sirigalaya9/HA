global class ovcSAPBDSGetDocumentMeta0 {
/* 
 * Generated by Overcast UTC 2024-03-18 07:45:19Z.
 * Changes to this class may cause incorrect behavior and will be lost if the scenario is re-activated.
 */

    static overcast.Realtime.StructureType SS = overcast.Realtime.StructureType.STRUCTURE;
    static overcast.Realtime.StructureType ST = overcast.Realtime.StructureType.TABLE;

    static overcast.Realtime.Direction DI = overcast.Realtime.Direction.INPUT;
    static overcast.Realtime.Direction DOx = overcast.Realtime.Direction.OUTPUT;
    static overcast.Realtime.Direction DB = overcast.Realtime.Direction.BOTH;
    
    static overcast.Realtime.ApexType TS = overcast.Realtime.ApexType.STRINGX;
    static overcast.Realtime.ApexType TI = overcast.Realtime.ApexType.INTEGERX;
    static overcast.Realtime.ApexType TL = overcast.Realtime.ApexType.LONGX;
    static overcast.Realtime.ApexType TB = overcast.Realtime.ApexType.BOOLEANX;
    static overcast.Realtime.ApexType TD = overcast.Realtime.ApexType.DATEX;
    static overcast.Realtime.ApexType TDT = overcast.Realtime.ApexType.DATETIMEX;
    static overcast.Realtime.ApexType TDC = overcast.Realtime.ApexType.DECIMALX;
    static overcast.Realtime.ApexType TDBL = overcast.Realtime.ApexType.DOUBLEX;
    static overcast.Realtime.ApexType TT = overcast.Realtime.ApexType.TIMEX;
    static overcast.Realtime.ApexType TBLB = overcast.Realtime.ApexType.BLOBX;

    static overcast.FieldInfo fi(String a, String b, overcast.Realtime.ApexType c, Integer d, overcast.Realtime.Direction e) {
        return new overcast.FieldInfo(a, b, c, d, e);
    }

    static overcast.FieldInfo fi(String a, String b, overcast.Realtime.ApexType c, Integer d, Integer e, overcast.Realtime.Direction f) {
        return new overcast.FieldInfo(a, b, c, d, e, f);
    }

    public static Map<String, overcast.TypeInfo> metadata = new Map<String, overcast.TypeInfo> {
        'BDS_DOCUMENT_GET_TABLE' => new overcast.TypeInfo('BDS_DOCUMENT_GET_TABLE', '', SS, DI,
            new Map<String, overcast.FieldInfo> {
                'CLIENT' => fi('CLIENT', 'CLIENT', TS, 3, DI),
                'DOC_ID' => fi('DOC_ID', 'DOC_ID', TS, 42, DI),
                'BINARY_FLAG' => fi('BINARY_FLAG', 'BDS: Flag', TS, 1, DI)
            }
        ),
        'SIGNATURE' => new overcast.TypeInfo('SIGNATURE', 'Business Document Service: Signature Table', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'DOC_COUNT' => fi('DOC_COUNT', 'Doc. counter', TS, 8, DB),
                'DOC_ID' => fi('DOC_ID', 'Document ID', TS, 42, DB),
                'DOC_VER_NO' => fi('DOC_VER_NO', 'Version number', TS, 8, DB),
                'DOC_VAR_ID' => fi('DOC_VAR_ID', 'Variant ID', TS, 8, DB),
                'DOC_VAR_TG' => fi('DOC_VAR_TG', 'Variant Tag', TS, 2, DB),
                'COMP_COUNT' => fi('COMP_COUNT', 'No. of components', TS, 8, DB),
                'PROP_NAME' => fi('PROP_NAME', 'Attribute Name', TS, 25, DB),
                'PROP_VALUE' => fi('PROP_VALUE', 'Attribute Value', TS, 64, DB)
            }
        ),
        'COMPONENTS' => new overcast.TypeInfo('COMPONENTS', 'Business Document Service: Component Table', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'DOC_COUNT' => fi('DOC_COUNT', 'Doc. counter', TS, 8, DB),
                'COMP_COUNT' => fi('COMP_COUNT', 'Component counter', TS, 8, DB),
                'COMP_ID' => fi('COMP_ID', 'Component ID', TS, 255, DB),
                'MIMETYPE' => fi('MIMETYPE', 'MIME type', TS, 128, DB),
                'COMP_SIZE' => fi('COMP_SIZE', 'Component size', TS, 12, DB)
            }
        ),
        'CONTENT' => new overcast.TypeInfo('CONTENT', 'Business Document Service: File Content', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'LINE' => fi('LINE', 'Doc. contents', TBLB, 1022, DB)
            }
        ),
        'ASCII_CONTENT' => new overcast.TypeInfo('ASCII_CONTENT', 'Business Document Service: File Content ASCII', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'LINE' => fi('LINE', 'Doc. contents', TS, 1022, DB)
            }
        )
    };
}