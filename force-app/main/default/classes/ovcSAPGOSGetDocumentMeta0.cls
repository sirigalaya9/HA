global class ovcSAPGOSGetDocumentMeta0 {
/* 
 * Generated by Overcast UTC 2024-03-18 07:45:19Z.
 * Changes to this class may cause incorrect behavior and will be lost if the scenario is re-activated.
 */

    static overcast.Realtime.StructureType SS = overcast.Realtime.StructureType.STRUCTURE;
    static overcast.Realtime.StructureType ST = overcast.Realtime.StructureType.TABLE;

    static overcast.Realtime.Direction DI = overcast.Realtime.Direction.INPUT;
    static overcast.Realtime.Direction DOx = overcast.Realtime.Direction.OUTPUT;
    static overcast.Realtime.Direction DB = overcast.Realtime.Direction.BOTH;
    
    static overcast.Realtime.ApexType TS = overcast.Realtime.ApexType.STRINGX;
    static overcast.Realtime.ApexType TI = overcast.Realtime.ApexType.INTEGERX;
    static overcast.Realtime.ApexType TL = overcast.Realtime.ApexType.LONGX;
    static overcast.Realtime.ApexType TB = overcast.Realtime.ApexType.BOOLEANX;
    static overcast.Realtime.ApexType TD = overcast.Realtime.ApexType.DATEX;
    static overcast.Realtime.ApexType TDT = overcast.Realtime.ApexType.DATETIMEX;
    static overcast.Realtime.ApexType TDC = overcast.Realtime.ApexType.DECIMALX;
    static overcast.Realtime.ApexType TDBL = overcast.Realtime.ApexType.DOUBLEX;
    static overcast.Realtime.ApexType TT = overcast.Realtime.ApexType.TIMEX;
    static overcast.Realtime.ApexType TBLB = overcast.Realtime.ApexType.BLOBX;

    static overcast.FieldInfo fi(String a, String b, overcast.Realtime.ApexType c, Integer d, overcast.Realtime.Direction e) {
        return new overcast.FieldInfo(a, b, c, d, e);
    }

    static overcast.FieldInfo fi(String a, String b, overcast.Realtime.ApexType c, Integer d, Integer e, overcast.Realtime.Direction f) {
        return new overcast.FieldInfo(a, b, c, d, e, f);
    }

    public static Map<String, overcast.TypeInfo> metadata = new Map<String, overcast.TypeInfo> {
        'SO_DOCUMENT_READ_API1' => new overcast.TypeInfo('SO_DOCUMENT_READ_API1', '', SS, DI,
            new Map<String, overcast.FieldInfo> {
                'DOCUMENT_ID' => fi('DOCUMENT_ID', 'ID of folder entry to be viewed', TS, 46, DI)
            }
        ),
        'FILTER' => new overcast.TypeInfo('FILTER', 'Preselection of required object data', SS, DI,
            new Map<String, overcast.FieldInfo> {
                'SEND_INFO' => fi('SEND_INFO', 'Transm. info.', TS, 1, DI),
                'NO_CONTENT' => fi('NO_CONTENT', 'Doc. contents', TS, 1, DI),
                'REC_LIST' => fi('REC_LIST', 'Recipient list is also transferred', TS, 1, DI)
            }
        ),
        'DOCUMENT_DATA' => new overcast.TypeInfo('DOCUMENT_DATA', 'Complete attributes of folder entry', SS, DOx,
            new Map<String, overcast.FieldInfo> {
                'DOC_ID' => fi('DOC_ID', 'Folder Entry ID (Obj+Fol+Forwarder Name)', TS, 46, DOx),
                'OBJECT_ID' => fi('OBJECT_ID', 'SAPoffice: ID of a SAPoffice object', TS, 17, DOx),
                'OBJ_TYPE' => fi('OBJ_TYPE', 'Class', TS, 3, DOx),
                'OBJ_NAME' => fi('OBJ_NAME', 'Name', TS, 12, DOx),
                'OBJ_DESCR' => fi('OBJ_DESCR', 'Title', TS, 50, DOx),
                'OBJ_LANGU' => fi('OBJ_LANGU', 'Language', TS, 1, DOx),
                'OBJ_SORT' => fi('OBJ_SORT', 'Sort field', TS, 10, DOx),
                'CREATOR_ID' => fi('CREATOR_ID', 'SAPoffice: ID of the creator of an object or user', TS, 17, DOx),
                'CREAT_NAME' => fi('CREAT_NAME', 'Created', TS, 12, DOx),
                'CREAT_FNAM' => fi('CREAT_FNAM', 'SAPoffice: Full name of creator', TS, 35, DOx),
                'CREAT_DATE' => fi('CREAT_DATE', 'SAPoffice: Date when object/user was created', TD, 8, DOx),
                'CREAT_TIME' => fi('CREAT_TIME', 'SAPoffice: Time when object/user was created', TS, 8, DOx),
                'CHANGER_ID' => fi('CHANGER_ID', 'SAPoffice: Last changed by: ID', TS, 17, DOx),
                'CHANG_NAME' => fi('CHANG_NAME', 'Changed', TS, 12, DOx),
                'CHANG_FNAM' => fi('CHANG_FNAM', 'SAPoffice: Last changed by: Full name', TS, 35, DOx),
                'CHANG_DATE' => fi('CHANG_DATE', 'SAPoffice: Date object/user was last changed', TD, 8, DOx),
                'CHANG_TIME' => fi('CHANG_TIME', 'SAPoffice: Time when object/user was last changed', TS, 8, DOx),
                'OWNER_ID' => fi('OWNER_ID', 'ID of the owner of the document', TS, 17, DOx),
                'OWNER_NAM' => fi('OWNER_NAM', 'Owner', TS, 12, DOx),
                'OWNER_FNAM' => fi('OWNER_FNAM', 'Full name of the owner', TS, 35, DOx),
                'LAST_ACCES' => fi('LAST_ACCES', 'Date of last access', TD, 8, DOx),
                'OBJ_EXPDAT' => fi('OBJ_EXPDAT', 'Expiration date of object', TD, 8, DOx),
                'SENSITIVTY' => fi('SENSITIVTY', 'Sensitivity', TS, 1, DOx),
                'OBJ_PRIO' => fi('OBJ_PRIO', 'Priority', TS, 1, DOx),
                'NO_CHANGE' => fi('NO_CHANGE', 'Not changeable', TS, 1, DOx),
                'PRIORITY' => fi('PRIORITY', 'Priority', TS, 1, DOx),
                'HISTORY' => fi('HISTORY', 'Correspondence', TS, 1, DOx),
                'RESUB' => fi('RESUB', 'Access to resubmiss.', TS, 1, DOx),
                'RESUB_DATE' => fi('RESUB_DATE', 'Start of RE', TD, 8, DOx),
                'SENDER_ID' => fi('SENDER_ID', 'ID of the sender of the document', TS, 17, DOx),
                'SEND_NAM' => fi('SEND_NAM', 'Sender name', TS, 12, DOx),
                'SEND_FNAM' => fi('SEND_FNAM', 'Full name of sender', TS, 35, DOx),
                'SEND_DATE' => fi('SEND_DATE', 'Send date', TD, 8, DOx),
                'SEND_TIME' => fi('SEND_TIME', 'Sent at', TS, 8, DOx),
                'FORWARD_ID' => fi('FORWARD_ID', 'ID of the last forwarder', TS, 17, DOx),
                'FORW_NAM' => fi('FORW_NAM', 'Forwarder', TS, 12, DOx),
                'FORW_FNAM' => fi('FORW_FNAM', 'Full name of the last forwarder', TS, 35, DOx),
                'FORW_DATE' => fi('FORW_DATE', 'Forwarded on', TD, 8, DOx),
                'FORW_TIME' => fi('FORW_TIME', 'Forwarded at', TS, 8, DOx),
                'REC_ID' => fi('REC_ID', 'Recipient ID', TS, 17, DOx),
                'REC_NAM' => fi('REC_NAM', 'Recipient Name', TS, 12, DOx),
                'REC_FNAM' => fi('REC_FNAM', 'Full name of the recipient', TS, 35, DOx),
                'REC_DATE' => fi('REC_DATE', 'Date received', TD, 8, DOx),
                'REC_TIME' => fi('REC_TIME', 'Time received', TS, 8, DOx),
                'EXPRESS' => fi('EXPRESS', 'Send express', TS, 1, DOx),
                'COPY' => fi('COPY', 'Send as copy', TS, 1, DOx),
                'BLIND_COPY' => fi('BLIND_COPY', 'Blind copy', TS, 1, DOx),
                'NO_FORWARD' => fi('NO_FORWARD', 'No forwarding', TS, 1, DOx),
                'NO_PRINT' => fi('NO_PRINT', 'No printing', TS, 1, DOx),
                'TO_ANSWER' => fi('TO_ANSWER', 'Reply required', TS, 1, DOx),
                'TO_DO_EXPL' => fi('TO_DO_EXPL', 'ToDo', TS, 1, DOx),
                'TO_DO_GRP' => fi('TO_DO_GRP', 'ToDo group of the recipient', TS, 1, DOx),
                'C_TO_DO' => fi('C_TO_DO', 'Number of people who must take action (ToDo)', TS, 5, DOx),
                'C_IN_PROC' => fi('C_IN_PROC', 'Number of people by whom the document is being processed', TS, 5, DOx),
                'C_DONE' => fi('C_DONE', 'Number of people who have acted upon the document', TS, 5, DOx),
                'C_EXPRESS' => fi('C_EXPRESS', 'Number of people who have received the document per express', TS, 5, DOx),
                'C_COPY' => fi('C_COPY', 'Number of people with a copy', TS, 5, DOx),
                'C_BLIND_CP' => fi('C_BLIND_CP', 'Number of people with a blind copy', TS, 5, DOx),
                'C_TO_REPLY' => fi('C_TO_REPLY', 'Number of persons with "Reply required"', TS, 5, DOx),
                'C_ANSWERED' => fi('C_ANSWERED', 'Number of people who have replied', TS, 5, DOx),
                'C_READ' => fi('C_READ', 'Number of people who have viewed the document', TS, 5, DOx),
                'C_RECEIVER' => fi('C_RECEIVER', 'Number of people who have received the document', TS, 5, DOx),
                'PROC_TYPE' => fi('PROC_TYPE', 'Execution type', TS, 1, DOx),
                'PROC_NAME' => fi('PROC_NAME', 'Text field length 30', TS, 30, DOx),
                'PROC_SYST' => fi('PROC_SYST', 'System in which the document is processed', TS, 10, DOx),
                'PROC_CLINT' => fi('PROC_CLINT', 'Client in which document is processed', TS, 3, DOx),
                'SKIP_SCREN' => fi('SKIP_SCREN', 'Exec.: Skip screen', TS, 1, DOx),
                'TO_DO_OUT' => fi('TO_DO_OUT', 'ToDo externally', TS, 1, DOx),
                'FREE_DEL' => fi('FREE_DEL', 'Object Can Be Deleted by All Users with an Application', TS, 1, DOx),
                'READ' => fi('READ', 'Object viewed', TS, 1, DOx),
                'READ_DATE' => fi('READ_DATE', 'Read', TD, 8, DOx),
                'READ_TIME' => fi('READ_TIME', 'Viewed at', TS, 8, DOx),
                'TO_DO_STAT' => fi('TO_DO_STAT', 'ToDo: status', TS, 4, DOx),
                'STILL_TODO' => fi('STILL_TODO', 'ToDo', TS, 1, DOx),
                'REPLY_SENT' => fi('REPLY_SENT', 'Reply sent', TS, 1, DOx),
                'RESUB_READ' => fi('RESUB_READ', 'The resubmitted document was viewed again', TS, 1, DOx),
                'EXPIRY_DAT' => fi('EXPIRY_DAT', 'SAPoffice: Expiration Date for this Folder Entry', TD, 8, DOx),
                'DOC_SIZE' => fi('DOC_SIZE', 'Size of SAPoffice Document (for API1)', TS, 12, DOx)
            }
        ),
        'OBJECT_HEADER' => new overcast.TypeInfo('OBJECT_HEADER', 'Header data for document (spec.header)', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'LINE' => fi('LINE', 'Text field length 255: texts', TS, 255, DB)
            }
        ),
        'CONTENTS_HEX' => new overcast.TypeInfo('CONTENTS_HEX', 'Table for Binary Content', ST, DB,
            new Map<String, overcast.FieldInfo> {
                'LINE' => fi('LINE', 'Binary data', TBLB, 255, DB)
            }
        )
    };
}