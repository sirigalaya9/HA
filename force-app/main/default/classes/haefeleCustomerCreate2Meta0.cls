global class haefeleCustomerCreate2Meta0 {
/* 
 * Generated by Overcast UTC 2024-03-12 08:24:24Z.
 * Changes to this class may cause incorrect behavior and will be lost if the scenario is re-activated.
 */

    static overcast.Realtime.StructureType SS = overcast.Realtime.StructureType.STRUCTURE;
    static overcast.Realtime.StructureType ST = overcast.Realtime.StructureType.TABLE;

    static overcast.Realtime.Direction DI = overcast.Realtime.Direction.INPUT;
    static overcast.Realtime.Direction DOx = overcast.Realtime.Direction.OUTPUT;
    static overcast.Realtime.Direction DB = overcast.Realtime.Direction.BOTH;
    
    static overcast.Realtime.ApexType TS = overcast.Realtime.ApexType.STRINGX;
    static overcast.Realtime.ApexType TI = overcast.Realtime.ApexType.INTEGERX;
    static overcast.Realtime.ApexType TL = overcast.Realtime.ApexType.LONGX;
    static overcast.Realtime.ApexType TB = overcast.Realtime.ApexType.BOOLEANX;
    static overcast.Realtime.ApexType TD = overcast.Realtime.ApexType.DATEX;
    static overcast.Realtime.ApexType TDT = overcast.Realtime.ApexType.DATETIMEX;
    static overcast.Realtime.ApexType TDC = overcast.Realtime.ApexType.DECIMALX;
    static overcast.Realtime.ApexType TDBL = overcast.Realtime.ApexType.DOUBLEX;
    static overcast.Realtime.ApexType TT = overcast.Realtime.ApexType.TIMEX;
    static overcast.Realtime.ApexType TBLB = overcast.Realtime.ApexType.BLOBX;

    static overcast.FieldInfo fi(String a, String b, overcast.Realtime.ApexType c, Integer d, overcast.Realtime.Direction e) {
        return new overcast.FieldInfo(a, b, c, d, e);
    }

    static overcast.FieldInfo fi(String a, String b, overcast.Realtime.ApexType c, Integer d, Integer e, overcast.Realtime.Direction f) {
        return new overcast.FieldInfo(a, b, c, d, e, f);
    }

    public static Map<String, overcast.TypeInfo> metadata = new Map<String, overcast.TypeInfo> {
        'Z_HWWPIWS_CREATE_CUSTOMER' => new overcast.TypeInfo('Z_HWWPIWS_CREATE_CUSTOMER', '', SS, DB,
            new Map<String, overcast.FieldInfo> {
                'I_SOURCE' => fi('I_SOURCE', 'I_SOURCE', TS, 6, DI),
                'I_SESSION' => fi('I_SESSION', 'I_SESSION', TS, 60, DI),
                'I_VKORG' => fi('I_VKORG', 'I_VKORG', TS, 4, DI),
                'E_KUNNR' => fi('E_KUNNR', 'E_KUNNR', TS, 10, DOx)
            }
        ),
        'IS_COMPANYINFO' => new overcast.TypeInfo('IS_COMPANYINFO', '', SS, DI,
            new Map<String, overcast.FieldInfo> {
                'NAME' => fi('NAME', 'Name', TS, 40, DI),
                'STREET' => fi('STREET', 'Street', TS, 60, DI),
                'HOUSE_NO' => fi('HOUSE_NO', 'House Number', TS, 10, DI),
                'DISTRICT' => fi('DISTRICT', 'District', TS, 40, DI),
                'POSTL_COD1' => fi('POSTL_COD1', 'Postal Code', TS, 10, DI),
                'CITY' => fi('CITY', 'City', TS, 40, DI),
                'COUNTRY' => fi('COUNTRY', 'Country', TS, 3, DI),
                'TELEPHONE' => fi('TELEPHONE', 'Telephone No.', TS, 30, DI),
                'FAX' => fi('FAX', 'Fax', TS, 30, DI),
                'E_MAIL' => fi('E_MAIL', 'E-Mail Address', TS, 241, DI),
                'LANGU_ISO' => fi('LANGU_ISO', 'Lang. (ISO)', TS, 2, DI),
                'ZZHWW_PINNR' => fi('ZZHWW_PINNR', 'PIN', TS, 20, DI),
                'STCEG' => fi('STCEG', 'VAT Reg. No.', TS, 20, DI),
                'TITLE_P' => fi('TITLE_P', 'Title', TS, 4, DI),
                'FIRSTNAME' => fi('FIRSTNAME', 'First Name', TS, 40, DI),
                'LASTNAME' => fi('LASTNAME', 'Last Name', TS, 40, DI),
                'TELEPHONE_CONTACT' => fi('TELEPHONE_CONTACT', 'Telephone No.', TS, 30, DI),
                'MOBILE_CONTACT' => fi('MOBILE_CONTACT', 'Telephone No.', TS, 30, DI),
                'E_MAIL_CONTACT' => fi('E_MAIL_CONTACT', 'E-Mail Address', TS, 241, DI),
                'KVGR1' => fi('KVGR1', 'Industry sector', TS, 3, DI),
                'ZZHWW_CUSCLAS_MSEG' => fi('ZZHWW_CUSCLAS_MSEG', 'Market Segment', TS, 2, DI),
                'STCD1' => fi('STCD1', 'Tax Number 1', TS, 16, DI),
                'ZZHWW_CUSCLAS_CSEG_1' => fi('ZZHWW_CUSCLAS_CSEG_1', 'Customer Segment', TS, 3, DI),
                'NAME2' => fi('NAME2', 'Name 2', TS, 40, DI),
                'REGION' => fi('REGION', 'Region', TS, 3, DI),
                'STREET2' => fi('STREET2', 'Street 2', TS, 40, DI),
                'STREET3' => fi('STREET3', 'Street 3', TS, 40, DI),
                'STREET4' => fi('STREET4', 'Street 4', TS, 40, DI),
                'STREET5' => fi('STREET5', 'Street 5', TS, 40, DI),
                'JMZAH' => fi('JMZAH', 'Employee', TS, 6, DI),
                'STCD6' => fi('STCD6', 'Tax Number 6', TS, 20, DI),
                'STCD2' => fi('STCD2', 'Tax Number 2', TS, 11, DI),
                'STCD3' => fi('STCD3', 'Tax Number 3', TS, 18, DI),
                'STCD4' => fi('STCD4', 'Tax Number 4', TS, 18, DI),
                'STCD5' => fi('STCD5', 'Tax Number 5', TS, 60, DI)
            }
        ),
        'IS_CRM' => new overcast.TypeInfo('IS_CRM', '', SS, DI,
            new Map<String, overcast.FieldInfo> {
                'NAME' => fi('NAME', 'Name', TS, 40, DI),
                'NAME2' => fi('NAME2', 'Name 2', TS, 40, DI),
                'STREET' => fi('STREET', 'Street', TS, 60, DI),
                'STREET2' => fi('STREET2', 'Street 2', TS, 40, DI),
                'STREET3' => fi('STREET3', 'Street 3', TS, 40, DI),
                'HOUSE_NUM' => fi('HOUSE_NUM', 'House Number', TS, 10, DI),
                'PSTLZ' => fi('PSTLZ', 'Postal Code', TS, 10, DI),
                'ORT01' => fi('ORT01', 'City', TS, 35, DI),
                'REGION' => fi('REGION', 'Region', TS, 3, DI),
                'LAND1' => fi('LAND1', 'Country', TS, 3, DI),
                'LANGU_ISO' => fi('LANGU_ISO', 'Lang. (ISO)', TS, 2, DI),
                'TELF1' => fi('TELF1', 'Telephone No.', TS, 30, DI),
                'TELFX' => fi('TELFX', 'Fax', TS, 30, DI),
                'SMTP_ADDR' => fi('SMTP_ADDR', 'E-Mail Address', TS, 241, DI),
                'STCEG' => fi('STCEG', 'VAT Reg. No.', TS, 20, DI),
                'JMZAH' => fi('JMZAH', 'Employee', TS, 6, DI),
                'JMJAH' => fi('JMJAH', 'Year', TS, 4, DI),
                'KNURL' => fi('KNURL', 'URL', TS, 132, DI),
                'VKBUR' => fi('VKBUR', 'Sales Office', TS, 4, DI),
                'KVGR2' => fi('KVGR2', 'Customer group', TS, 3, DI),
                'ZZHWW_CUSCLAS_MSEG' => fi('ZZHWW_CUSCLAS_MSEG', 'Market Segment', TS, 2, DI),
                'ZZHWW_CUSCLAS_CSEG_1' => fi('ZZHWW_CUSCLAS_CSEG_1', 'Customer Segment', TS, 3, DI),
                'ZZHWW_CUSCLAS_CSEG_2' => fi('ZZHWW_CUSCLAS_CSEG_2', 'Customer Segment', TS, 3, DI),
                'ZZHWW_CUSCLAS_CSEG_3' => fi('ZZHWW_CUSCLAS_CSEG_3', 'Customer Segment', TS, 3, DI),
                'ZZHWW_CUSCLAS_PERC_1' => fi('ZZHWW_CUSCLAS_PERC_1', 'percentage', TS, 3, DI),
                'ZZHWW_CUSCLAS_PERC_2' => fi('ZZHWW_CUSCLAS_PERC_2', 'percentage', TS, 3, DI),
                'ZZHWW_CUSCLAS_PERC_3' => fi('ZZHWW_CUSCLAS_PERC_3', 'percentage', TS, 3, DI),
                'ZZHWW_CUSCLAS_CLASS_1' => fi('ZZHWW_CUSCLAS_CLASS_1', 'Classification', TS, 2, DI),
                'ZZHWW_CUSCLAS_CLASS_2' => fi('ZZHWW_CUSCLAS_CLASS_2', 'Classification', TS, 2, DI),
                'ZZHWW_CUSCLAS_CLASS_3' => fi('ZZHWW_CUSCLAS_CLASS_3', 'Classification', TS, 2, DI),
                'STREET4' => fi('STREET4', 'Street 4', TS, 40, DI),
                'STREET5' => fi('STREET5', 'Street 5', TS, 40, DI),
                'PHONE_NUMBER_COUNTRY' => fi('PHONE_NUMBER_COUNTRY', 'Country', TS, 3, DI),
                'FAX_NUMBER_COUNTRY' => fi('FAX_NUMBER_COUNTRY', 'Country', TS, 3, DI),
                'TEL_EXTENS' => fi('TEL_EXTENS', 'Extension', TS, 10, DI),
                'FAX_EXTENS' => fi('FAX_EXTENS', 'Extension', TS, 10, DI)
            }
        ),
        'ET_MSG_OUT' => new overcast.TypeInfo('ET_MSG_OUT', '', ST, DOx,
            new Map<String, overcast.FieldInfo> {
                'LFDNR' => fi('LFDNR', 'Sequence Number', TS, 3, DOx),
                'TYPE_x' => fi('TYPE_x', 'Message type', TS, 1, DOx),
                'ID' => fi('ID', 'Message Class', TS, 20, DOx),
                'NUMBER_x' => fi('NUMBER_x', 'Message number', TS, 3, DOx),
                'MESSAGE' => fi('MESSAGE', 'Message text', TS, 220, DOx),
                'LOG_NO' => fi('LOG_NO', 'Log Number', TS, 20, DOx),
                'LOG_MSG_NO' => fi('LOG_MSG_NO', 'Message Number', TS, 6, DOx),
                'MESSAGE_V1' => fi('MESSAGE_V1', 'Message Variable', TS, 50, DOx),
                'MESSAGE_V2' => fi('MESSAGE_V2', 'Message Variable', TS, 50, DOx),
                'MESSAGE_V3' => fi('MESSAGE_V3', 'Message Variable', TS, 50, DOx),
                'MESSAGE_V4' => fi('MESSAGE_V4', 'Message Variable', TS, 50, DOx),
                'PARAMETER' => fi('PARAMETER', 'Parameter Name', TS, 32, DOx),
                'ROW' => fi('ROW', 'Parameter line', TI, 10, DOx),
                'FIELD' => fi('FIELD', 'Field name', TS, 30, DOx),
                'SYSTEM_x' => fi('SYSTEM_x', 'Logical system', TS, 10, DOx)
            }
        )
    };
}