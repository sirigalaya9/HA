global class ZCONNECTMeta0 {
/* 
 * Generated by Overcast UTC 2024-03-12 10:27:43Z.
 * Changes to this class may cause incorrect behavior and will be lost if the scenario is re-activated.
 */

    static overcast.Realtime.StructureType SS = overcast.Realtime.StructureType.STRUCTURE;
    static overcast.Realtime.StructureType ST = overcast.Realtime.StructureType.TABLE;

    static overcast.Realtime.Direction DI = overcast.Realtime.Direction.INPUT;
    static overcast.Realtime.Direction DOx = overcast.Realtime.Direction.OUTPUT;
    static overcast.Realtime.Direction DB = overcast.Realtime.Direction.BOTH;
    
    static overcast.Realtime.ApexType TS = overcast.Realtime.ApexType.STRINGX;
    static overcast.Realtime.ApexType TI = overcast.Realtime.ApexType.INTEGERX;
    static overcast.Realtime.ApexType TL = overcast.Realtime.ApexType.LONGX;
    static overcast.Realtime.ApexType TB = overcast.Realtime.ApexType.BOOLEANX;
    static overcast.Realtime.ApexType TD = overcast.Realtime.ApexType.DATEX;
    static overcast.Realtime.ApexType TDT = overcast.Realtime.ApexType.DATETIMEX;
    static overcast.Realtime.ApexType TDC = overcast.Realtime.ApexType.DECIMALX;
    static overcast.Realtime.ApexType TDBL = overcast.Realtime.ApexType.DOUBLEX;
    static overcast.Realtime.ApexType TT = overcast.Realtime.ApexType.TIMEX;
    static overcast.Realtime.ApexType TBLB = overcast.Realtime.ApexType.BLOBX;

    static overcast.FieldInfo fi(String a, String b, overcast.Realtime.ApexType c, Integer d, overcast.Realtime.Direction e) {
        return new overcast.FieldInfo(a, b, c, d, e);
    }

    static overcast.FieldInfo fi(String a, String b, overcast.Realtime.ApexType c, Integer d, Integer e, overcast.Realtime.Direction f) {
        return new overcast.FieldInfo(a, b, c, d, e, f);
    }

    public static Map<String, overcast.TypeInfo> metadata = new Map<String, overcast.TypeInfo> {
        'KNA1' => new overcast.TypeInfo('KNA1', '', ST, DOx,
            new Map<String, overcast.FieldInfo> {
                'MANDT' => fi('MANDT', 'Client', TS, 3, DOx),
                'KUNNR' => fi('KUNNR', 'Customer', TS, 10, DOx),
                'LAND1' => fi('LAND1', 'Country', TS, 3, DOx),
                'NAME1' => fi('NAME1', 'Name 1', TS, 35, DOx),
                'NAME2' => fi('NAME2', 'Name 2', TS, 35, DOx),
                'ORT01' => fi('ORT01', 'City', TS, 35, DOx),
                'PSTLZ' => fi('PSTLZ', 'Postal Code', TS, 10, DOx),
                'REGIO' => fi('REGIO', 'Region', TS, 3, DOx),
                'SORTL' => fi('SORTL', 'Search term', TS, 10, DOx),
                'STRAS' => fi('STRAS', 'Street/House', TS, 35, DOx),
                'TELF1' => fi('TELF1', 'Telephone 1', TS, 16, DOx),
                'TELFX' => fi('TELFX', 'Fax Number', TS, 31, DOx),
                'XCPDK' => fi('XCPDK', 'One-time acct', TS, 1, DOx),
                'ADRNR' => fi('ADRNR', 'Address', TS, 10, DOx),
                'MCOD1' => fi('MCOD1', 'Search term for matchcode search', TS, 25, DOx),
                'MCOD2' => fi('MCOD2', 'Search Term for Matchcode Search', TS, 25, DOx),
                'MCOD3' => fi('MCOD3', 'Search term for matchcode search', TS, 25, DOx),
                'ANRED' => fi('ANRED', 'Title', TS, 15, DOx),
                'AUFSD' => fi('AUFSD', 'Block order', TS, 2, DOx),
                'BAHNE' => fi('BAHNE', 'Express station', TS, 25, DOx),
                'BAHNS' => fi('BAHNS', 'Train station', TS, 25, DOx),
                'BBBNR' => fi('BBBNR', 'Location no. 1', TS, 7, DOx),
                'BBSNR' => fi('BBSNR', 'Location no. 2', TS, 5, DOx),
                'BEGRU' => fi('BEGRU', 'AuthorizGroup', TS, 4, DOx),
                'BRSCH' => fi('BRSCH', 'Industry', TS, 4, DOx),
                'BUBKZ' => fi('BUBKZ', 'Check digit', TS, 1, DOx),
                'DATLT' => fi('DATLT', 'Data line', TS, 14, DOx),
                'ERDAT' => fi('ERDAT', 'Created On', TD, 8, DOx),
                'ERNAM' => fi('ERNAM', 'Created By', TS, 12, DOx),
                'EXABL' => fi('EXABL', 'Unloading pts', TS, 1, DOx),
                'FAKSD' => fi('FAKSD', 'Central billing block for customer', TS, 2, DOx),
                'FISKN' => fi('FISKN', 'Fiscal address', TS, 10, DOx),
                'KNAZK' => fi('KNAZK', 'Working times', TS, 2, DOx),
                'KNRZA' => fi('KNRZA', 'Alternat. Payer', TS, 10, DOx),
                'KONZS' => fi('KONZS', 'Group', TS, 10, DOx),
                'KTOKD' => fi('KTOKD', 'Account group', TS, 4, DOx),
                'KUKLA' => fi('KUKLA', 'Customer Class.', TS, 2, DOx),
                'LIFNR' => fi('LIFNR', 'Supplier', TS, 10, DOx),
                'LIFSD' => fi('LIFSD', 'Central delivery block for the customer', TS, 2, DOx),
                'LOCCO' => fi('LOCCO', 'Location code', TS, 10, DOx),
                'LOEVM' => fi('LOEVM', 'Delete', TS, 1, DOx),
                'NAME3' => fi('NAME3', 'Name 3', TS, 35, DOx),
                'NAME4' => fi('NAME4', 'Name', TS, 35, DOx),
                'NIELS' => fi('NIELS', 'Nielsen ID', TS, 2, DOx),
                'ORT02' => fi('ORT02', 'District', TS, 35, DOx),
                'PFACH' => fi('PFACH', 'PO Box', TS, 10, DOx),
                'PSTL2' => fi('PSTL2', 'PO Box PCode', TS, 10, DOx),
                'COUNC' => fi('COUNC', 'County Code', TS, 3, DOx),
                'CITYC' => fi('CITYC', 'City Code', TS, 4, DOx),
                'RPMKR' => fi('RPMKR', 'Regional market', TS, 5, DOx),
                'SPERR' => fi('SPERR', 'Phys. Inv. Blk', TS, 1, DOx),
                'SPRAS' => fi('SPRAS', 'Language', TS, 1, DOx),
                'STCD1' => fi('STCD1', 'Tax Number 1', TS, 16, DOx),
                'STCD2' => fi('STCD2', 'Tax Number 2', TS, 11, DOx),
                'STKZA' => fi('STKZA', 'Equalizatn tax', TS, 1, DOx),
                'STKZU' => fi('STKZU', 'Liable for VAT', TS, 1, DOx),
                'TELBX' => fi('TELBX', 'Telebox', TS, 15, DOx),
                'TELF2' => fi('TELF2', 'Telephone 2', TS, 16, DOx),
                'TELTX' => fi('TELTX', 'Teletex', TS, 30, DOx),
                'TELX1' => fi('TELX1', 'Telex', TS, 30, DOx),
                'LZONE' => fi('LZONE', 'Transport Zone', TS, 10, DOx),
                'XZEMP' => fi('XZEMP', 'Payee in doc.', TS, 1, DOx),
                'VBUND' => fi('VBUND', 'Company ID', TS, 6, DOx),
                'STCEG' => fi('STCEG', 'VAT Reg. No.', TS, 20, DOx),
                'DEAR1' => fi('DEAR1', 'Competitors', TS, 1, DOx),
                'DEAR2' => fi('DEAR2', 'Sales partner', TS, 1, DOx),
                'DEAR3' => fi('DEAR3', 'Prospect', TS, 1, DOx),
                'DEAR4' => fi('DEAR4', 'Cust.type 4', TS, 1, DOx),
                'DEAR5' => fi('DEAR5', 'Default SP', TS, 1, DOx),
                'GFORM' => fi('GFORM', 'Legal status', TS, 2, DOx),
                'BRAN1' => fi('BRAN1', 'Industry code 1', TS, 10, DOx),
                'BRAN2' => fi('BRAN2', 'Industry code 2', TS, 10, DOx),
                'BRAN3' => fi('BRAN3', 'Industry code 3', TS, 10, DOx),
                'BRAN4' => fi('BRAN4', 'Industry code 4', TS, 10, DOx),
                'BRAN5' => fi('BRAN5', 'Industry code 5', TS, 10, DOx),
                'EKONT' => fi('EKONT', 'Initial contact', TS, 10, DOx),
                'UMSAT' => fi('UMSAT', 'Annual sales', TDC, 8,2, DOx),
                'UMJAH' => fi('UMJAH', 'Sales year', TS, 4, DOx),
                'UWAER' => fi('UWAER', 'Currency', TS, 5, DOx),
                'JMZAH' => fi('JMZAH', 'Employee', TS, 6, DOx),
                'JMJAH' => fi('JMJAH', 'Year', TS, 4, DOx),
                'KATR1' => fi('KATR1', 'Attribute 1', TS, 2, DOx),
                'KATR2' => fi('KATR2', 'Proforma', TS, 2, DOx),
                'KATR3' => fi('KATR3', 'only 1 invoice', TS, 2, DOx),
                'KATR4' => fi('KATR4', 'DBS', TS, 2, DOx),
                'KATR5' => fi('KATR5', 'Sending Invoice', TS, 2, DOx),
                'KATR6' => fi('KATR6', 'Attribute 6', TS, 3, DOx),
                'KATR7' => fi('KATR7', 'Attribute 7', TS, 3, DOx),
                'KATR8' => fi('KATR8', 'Attribute 8', TS, 3, DOx),
                'KATR9' => fi('KATR9', 'Attribute 9', TS, 3, DOx),
                'KATR10' => fi('KATR10', 'Attribute 10', TS, 3, DOx),
                'STKZN' => fi('STKZN', 'Natural person', TS, 1, DOx),
                'UMSA1' => fi('UMSA1', 'Annual sales', TDC, 15,2, DOx),
                'TXJCD' => fi('TXJCD', 'Tax Jur.', TS, 15, DOx),
                'PERIV' => fi('PERIV', 'FY Variant', TS, 2, DOx),
                'ABRVW' => fi('ABRVW', 'Usage', TS, 3, DOx),
                'INSPBYDEBI' => fi('INSPBYDEBI', 'Inspection Carried Out By Customer (No Inspection Lot)', TS, 1, DOx),
                'INSPATDEBI' => fi('INSPATDEBI', 'Inspection for a Delivery Note After Outbound Delivery', TS, 1, DOx),
                'KTOCD' => fi('KTOCD', 'Ref.acct group', TS, 4, DOx),
                'PFORT' => fi('PFORT', 'Pub.List Block', TS, 35, DOx),
                'WERKS' => fi('WERKS', 'Plant', TS, 4, DOx),
                'DTAMS' => fi('DTAMS', 'DME Rec. Code', TS, 1, DOx),
                'DTAWS' => fi('DTAWS', 'Instruction Key', TS, 2, DOx),
                'DUEFL' => fi('DUEFL', 'Status of Data Transfer into Subsequent Release', TS, 1, DOx),
                'HZUOR' => fi('HZUOR', 'Hier.assignment', TS, 2, DOx),
                'SPERZ' => fi('SPERZ', 'Payment block', TS, 1, DOx),
                'ETIKG' => fi('ETIKG', 'Lab.cust. group', TS, 10, DOx),
                'CIVVE' => fi('CIVVE', 'Non-milit. use', TS, 1, DOx),
                'MILVE' => fi('MILVE', 'Military use', TS, 1, DOx),
                'KDKG1' => fi('KDKG1', 'Condition grp 1', TS, 2, DOx),
                'KDKG2' => fi('KDKG2', 'Condition grp 2', TS, 2, DOx),
                'KDKG3' => fi('KDKG3', 'Condition grp 3', TS, 2, DOx),
                'KDKG4' => fi('KDKG4', 'Condition grp 4', TS, 2, DOx),
                'KDKG5' => fi('KDKG5', 'Condition grp 5', TS, 2, DOx),
                'XKNZA' => fi('XKNZA', 'Alt.payer(doc.)', TS, 1, DOx),
                'FITYP' => fi('FITYP', 'Internal type', TS, 2, DOx),
                'STCDT' => fi('STCDT', 'Tax Number Type', TS, 2, DOx),
                'STCD3' => fi('STCD3', 'Tax Number 3', TS, 18, DOx),
                'STCD4' => fi('STCD4', 'Tax Number 4', TS, 18, DOx),
                'STCD5' => fi('STCD5', 'Tax Number 5', TS, 60, DOx),
                'STCD6' => fi('STCD6', 'Tax Number 6', TS, 20, DOx),
                'XICMS' => fi('XICMS', 'Customer is ICMS-exempt', TS, 1, DOx),
                'XXIPI' => fi('XXIPI', 'Customer is IPI-exempt', TS, 1, DOx),
                'XSUBT' => fi('XSUBT', 'Customer group for Substituiçao Tributária calculation', TS, 3, DOx),
                'CFOPC' => fi('CFOPC', 'Customer\'s CFOP category', TS, 2, DOx),
                'TXLW1' => fi('TXLW1', 'Tax law: ICMS', TS, 3, DOx),
                'TXLW2' => fi('TXLW2', 'Tax law: IPI', TS, 3, DOx),
                'CCC01' => fi('CCC01', 'Biochem.warfare', TS, 1, DOx),
                'CCC02' => fi('CCC02', 'Nucl.nonprolif.', TS, 1, DOx),
                'CCC03' => fi('CCC03', 'Natl.security', TS, 1, DOx),
                'CCC04' => fi('CCC04', 'Missile techn.', TS, 1, DOx),
                'CASSD' => fi('CASSD', 'Central sales block for customer', TS, 2, DOx),
                'KNURL' => fi('KNURL', 'Uniform resource locator', TS, 132, DOx),
                'J_1KFREPRE' => fi('J_1KFREPRE', 'Name of Representative', TS, 10, DOx),
                'J_1KFTBUS' => fi('J_1KFTBUS', 'Type of Business', TS, 30, DOx),
                'J_1KFTIND' => fi('J_1KFTIND', 'Type of Industry', TS, 30, DOx),
                'CONFS' => fi('CONFS', 'Status of Change Authorization (Central)', TS, 1, DOx),
                'UPDAT' => fi('UPDAT', 'Changed on', TD, 8, DOx),
                'UPTIM' => fi('UPTIM', 'Changed At', TS, 8, DOx),
                'NODEL' => fi('NODEL', 'No deletion', TS, 1, DOx),
                'DEAR6' => fi('DEAR6', 'Consumer', TS, 1, DOx),
                'CVP_XBLCK' => fi('CVP_XBLCK', 'Purpose Completed', TS, 1, DOx),
                'SUFRAMA' => fi('SUFRAMA', 'Suframa Code', TS, 9, DOx),
                'RG' => fi('RG', 'RG Number', TS, 11, DOx),
                'EXP' => fi('EXP', 'Issued by', TS, 3, DOx),
                'UF' => fi('UF', 'State', TS, 2, DOx),
                'RGDATE' => fi('RGDATE', 'RG Issuing Date', TD, 8, DOx),
                'RIC' => fi('RIC', 'RIC Number', TS, 11, DOx),
                'RNE' => fi('RNE', 'Foreign National Registration', TS, 10, DOx),
                'RNEDATE' => fi('RNEDATE', 'RNE Issuing Date', TD, 8, DOx),
                'CNAE' => fi('CNAE', 'CNAE', TS, 7, DOx),
                'LEGALNAT' => fi('LEGALNAT', 'Legal Nature', TS, 4, DOx),
                'CRTN' => fi('CRTN', 'CRT Number', TS, 1, DOx),
                'ICMSTAXPAY' => fi('ICMSTAXPAY', 'ICMS Taxpayer', TS, 2, DOx),
                'INDTYP' => fi('INDTYP', 'Type of Industry', TS, 2, DOx),
                'TDT' => fi('TDT', 'Tax Declaration Type', TS, 2, DOx),
                'COMSIZE' => fi('COMSIZE', 'Company Size', TS, 2, DOx),
                'DECREGPC' => fi('DECREGPC', 'Declaration Regimen for PIS/COFINS', TS, 2, DOx),
                'FISDUMMY' => fi('FISDUMMY', 'Dummy function with length 1', TS, 1, DOx),
                'x_FIS_ENTL_DAUER' => fi('x_FIS_ENTL_DAUER', 'Discharge duration - time in minutes', TS, 4, DOx),
                'x_VSO_R_PALHGT' => fi('x_VSO_R_PALHGT', 'Maximum Stacking Height of the Packaging Material (VSO)', TDC, 13,3, DOx),
                'x_VSO_R_PAL_UL' => fi('x_VSO_R_PAL_UL', 'Unit of Length for Packaging Material (VSO)', TS, 3, DOx),
                'x_VSO_R_PK_MAT' => fi('x_VSO_R_PK_MAT', 'Customer-Related Packing for Each Packaging Material (VSO)', TS, 1, DOx),
                'x_VSO_R_MATPAL' => fi('x_VSO_R_MATPAL', 'Packaging Material of the Customer in VSO', TS, 18, DOx),
                'x_VSO_R_I_NO_LYR' => fi('x_VSO_R_I_NO_LYR', 'Number Layers Under an Inter-Pallet (VSO)', TS, 2, DOx),
                'x_VSO_R_ONE_MAT' => fi('x_VSO_R_ONE_MAT', 'Packing Material-Specific for Each Packaging Material', TS, 1, DOx),
                'x_VSO_R_ONE_SORT' => fi('x_VSO_R_ONE_SORT', 'Pack Only One Package Type for Each PKM (VSO)', TS, 1, DOx),
                'x_VSO_R_ULD_SIDE' => fi('x_VSO_R_ULD_SIDE', 'Side Preference of Loading/Unloading (VSO)', TS, 1, DOx),
                'x_VSO_R_LOAD_PREF' => fi('x_VSO_R_LOAD_PREF', 'Front/Back Preference of Loading/Unloading (VSO)', TS, 1, DOx),
                'x_VSO_R_DPOINT' => fi('x_VSO_R_DPOINT', 'Collective Unloading Point for VSO', TS, 10, DOx),
                'ALC' => fi('ALC', 'Agency Location Code', TS, 8, DOx),
                'PMT_OFFICE' => fi('PMT_OFFICE', 'Payment Office', TS, 5, DOx),
                'FEE_SCHEDULE' => fi('FEE_SCHEDULE', 'Fee schedule', TS, 4, DOx),
                'DUNS' => fi('DUNS', 'DUNS Number', TS, 9, DOx),
                'DUNS4' => fi('DUNS4', 'DUNS+4', TS, 4, DOx),
                'SAM_UE_ID' => fi('SAM_UE_ID', 'System for Award Management Unique Entity Identifier', TS, 12, DOx),
                'SAM_EFT_IND' => fi('SAM_EFT_IND', 'System for Award Management Electronic Funds Transfer Ind', TS, 4, DOx),
                'PSOFG' => fi('PSOFG', 'Processor group', TS, 10, DOx),
                'PSOIS' => fi('PSOIS', 'SLAPrepr.Proced', TS, 20, DOx),
                'PSON1' => fi('PSON1', 'Name 1', TS, 35, DOx),
                'PSON2' => fi('PSON2', 'Name 2', TS, 35, DOx),
                'PSON3' => fi('PSON3', 'Name 3', TS, 35, DOx),
                'PSOVN' => fi('PSOVN', 'First Name', TS, 35, DOx),
                'PSOTL' => fi('PSOTL', 'Title', TS, 20, DOx),
                'PSOHS' => fi('PSOHS', 'House number', TS, 6, DOx),
                'PSOST' => fi('PSOST', 'Street', TS, 28, DOx),
                'PSOO1' => fi('PSOO1', 'Description', TS, 50, DOx),
                'PSOO2' => fi('PSOO2', 'Description', TS, 50, DOx),
                'PSOO3' => fi('PSOO3', 'Description', TS, 50, DOx),
                'PSOO4' => fi('PSOO4', 'Description', TS, 50, DOx),
                'PSOO5' => fi('PSOO5', 'Description', TS, 50, DOx),
                'ZZHAA_ADD1' => fi('ZZHAA_ADD1', 'Add. Data 1', TS, 20, DOx),
                'ZZHAA_ADD2' => fi('ZZHAA_ADD2', 'Add. Data 2', TS, 20, DOx),
                'ZZHAA_ADD3' => fi('ZZHAA_ADD3', 'Add. Data 3', TS, 20, DOx),
                'ZZHAA_ADD4' => fi('ZZHAA_ADD4', 'Add. Data 4', TS, 20, DOx),
                'ZZHCN_PS_RESI' => fi('ZZHCN_PS_RESI', 'Proship Flag Residential Address', TS, 1, DOx),
                'ZZHCN_PS_SATU' => fi('ZZHCN_PS_SATU', 'Proship Flag Saturday Delivery', TS, 1, DOx),
                'ZZHCN_PS_LIFT' => fi('ZZHCN_PS_LIFT', 'Proship Flag "Lift Gate"', TS, 1, DOx),
                'ZZHCN_PS_CALL' => fi('ZZHCN_PS_CALL', 'Proship Flag "Call before delivery"', TS, 1, DOx),
                'ZZHCN_PS_INSI' => fi('ZZHCN_PS_INSI', 'Proship Flag "Inside Delivery"', TS, 1, DOx),
                'ZZHCN_PS_APPO' => fi('ZZHCN_PS_APPO', 'Proship Flag "Appointment Delivery"', TS, 1, DOx),
                'ZZHAC_PS_CHAD' => fi('ZZHAC_PS_CHAD', 'Proship-Flag "Charge all deliveries"', TS, 1, DOx),
                'ZZHWW_EASYALLOW' => fi('ZZHWW_EASYALLOW', 'Allow easy link', TS, 1, DOx),
                'ZZHWW_ENOALLREAS' => fi('ZZHWW_ENOALLREAS', 'easy link declined - reason', TS, 30, DOx),
                'ZZHWW_EALLUPDDT' => fi('ZZHWW_EALLUPDDT', 'Authorization for easy link - change date', TD, 8, DOx),
                'ZZHWW_EALLUPDID' => fi('ZZHWW_EALLUPDID', 'Authorization easy link - changed by', TS, 12, DOx),
                'ZZHWW_PINNR' => fi('ZZHWW_PINNR', 'PIN', TS, 20, DOx),
                'ZZHWW_PINNR2' => fi('ZZHWW_PINNR2', 'PIN', TS, 20, DOx),
                'ZZHWW_PINNRUPDDT' => fi('ZZHWW_PINNRUPDDT', 'PIN - changed date', TD, 8, DOx),
                'ZZHWW_PINNRUPDID' => fi('ZZHWW_PINNRUPDID', 'PIN - changed by', TS, 12, DOx),
                'ZZHWW_EASYBLOCK' => fi('ZZHWW_EASYBLOCK', 'Block easy link', TS, 1, DOx),
                'ZZHWW_EASYBLREAS' => fi('ZZHWW_EASYBLREAS', 'Block reason for easy link', TS, 30, DOx),
                'ZZHWW_EASYBLUPDT' => fi('ZZHWW_EASYBLUPDT', 'Block easy link - change date', TD, 8, DOx),
                'ZZHWW_EASYBLUPID' => fi('ZZHWW_EASYBLUPID', 'Block easy link - changed by', TS, 12, DOx),
                'ZZHWW_ADMAPINNR' => fi('ZZHWW_ADMAPINNR', 'Sales rep. PIN', TS, 20, DOx),
                'ZZHWW_ADMAPINUDT' => fi('ZZHWW_ADMAPINUDT', 'PIN - changed date', TD, 8, DOx),
                'ZZHWW_ADMAPINUID' => fi('ZZHWW_ADMAPINUID', 'PIN - changed by', TS, 12, DOx),
                'ZZHWW_HAEFEMPLOY' => fi('ZZHWW_HAEFEMPLOY', 'Häfele employee', TS, 1, DOx),
                'ZZHWW_MEMBER' => fi('ZZHWW_MEMBER', 'Member ?', TS, 1, DOx),
                'ZZHWW_MEMBERDT' => fi('ZZHWW_MEMBERDT', 'Member since', TD, 8, DOx),
                'ZZHWW_CARPTNO' => fi('ZZHWW_CARPTNO', 'Carpenter number', TS, 10, DOx),
                'ZZHWW_WE_IS_UE' => fi('ZZHWW_WE_IS_UE', 'ship to party get sales volume', TS, 1, DOx),
                'ZZHWW_MEMBERMM' => fi('ZZHWW_MEMBERMM', 'Member ? (Club Meister-Möbel)', TS, 1, DOx),
                'ZZHWW_MEMBERDTMM' => fi('ZZHWW_MEMBERDTMM', 'Member since (Club Meister-Möbel)', TD, 8, DOx),
                'ZZHWW_ZUGFERD_TRANS' => fi('ZZHWW_ZUGFERD_TRANS', 'Transfer Way', TS, 2, DOx),
                'ZZHWW_E_INVOICING_ADD_INFO' => fi('ZZHWW_E_INVOICING_ADD_INFO', 'Transfer ID', TS, 50, DOx),
                'ZZHWW_DELREASON' => fi('ZZHWW_DELREASON', 'Customer - deletion reason', TS, 2, DOx),
                'ZZHWW_BILLPERIOD' => fi('ZZHWW_BILLPERIOD', 'Period for billing', TS, 2, DOx)
            }
        )
    };
}