global class sapCreditDetailMeta0 {
/* 
 * Generated by Overcast UTC 2024-03-12 09:37:36Z.
 * Changes to this class may cause incorrect behavior and will be lost if the scenario is re-activated.
 */

    static overcast.Realtime.StructureType SS = overcast.Realtime.StructureType.STRUCTURE;
    static overcast.Realtime.StructureType ST = overcast.Realtime.StructureType.TABLE;

    static overcast.Realtime.Direction DI = overcast.Realtime.Direction.INPUT;
    static overcast.Realtime.Direction DOx = overcast.Realtime.Direction.OUTPUT;
    static overcast.Realtime.Direction DB = overcast.Realtime.Direction.BOTH;
    
    static overcast.Realtime.ApexType TS = overcast.Realtime.ApexType.STRINGX;
    static overcast.Realtime.ApexType TI = overcast.Realtime.ApexType.INTEGERX;
    static overcast.Realtime.ApexType TL = overcast.Realtime.ApexType.LONGX;
    static overcast.Realtime.ApexType TB = overcast.Realtime.ApexType.BOOLEANX;
    static overcast.Realtime.ApexType TD = overcast.Realtime.ApexType.DATEX;
    static overcast.Realtime.ApexType TDT = overcast.Realtime.ApexType.DATETIMEX;
    static overcast.Realtime.ApexType TDC = overcast.Realtime.ApexType.DECIMALX;
    static overcast.Realtime.ApexType TDBL = overcast.Realtime.ApexType.DOUBLEX;
    static overcast.Realtime.ApexType TT = overcast.Realtime.ApexType.TIMEX;
    static overcast.Realtime.ApexType TBLB = overcast.Realtime.ApexType.BLOBX;

    static overcast.FieldInfo fi(String a, String b, overcast.Realtime.ApexType c, Integer d, overcast.Realtime.Direction e) {
        return new overcast.FieldInfo(a, b, c, d, e);
    }

    static overcast.FieldInfo fi(String a, String b, overcast.Realtime.ApexType c, Integer d, Integer e, overcast.Realtime.Direction f) {
        return new overcast.FieldInfo(a, b, c, d, e, f);
    }

    public static Map<String, overcast.TypeInfo> metadata = new Map<String, overcast.TypeInfo> {
        'ISM_BAPI_CR_ACC_GETDETAIL' => new overcast.TypeInfo('ISM_BAPI_CR_ACC_GETDETAIL', '', SS, DI,
            new Map<String, overcast.FieldInfo> {
                'PV_CUSTOMER' => fi('PV_CUSTOMER', 'Customer Number 1', TS, 10, DI),
                'PV_CREDIT_CONTROL_AREA' => fi('PV_CREDIT_CONTROL_AREA', 'Credit Control Area', TS, 4, DI),
                'PV_ALLOWED_AGING_IN_DAYS' => fi('PV_ALLOWED_AGING_IN_DAYS', 'Permitted ageing in days', TS, 2, DI),
                'PV_ALLOWED_AGING_IN_HOURS' => fi('PV_ALLOWED_AGING_IN_HOURS', 'Permitted Ageing in Hours', TS, 2, DI)
            }
        ),
        'RETURN_x' => new overcast.TypeInfo('RETURN_x', 'Return Parameter(s)', SS, DOx,
            new Map<String, overcast.FieldInfo> {
                'TYPE_x' => fi('TYPE_x', 'Message type', TS, 1, DOx),
                'ID' => fi('ID', 'Message Class', TS, 20, DOx),
                'NUMBER_x' => fi('NUMBER_x', 'Message number', TS, 3, DOx),
                'MESSAGE' => fi('MESSAGE', 'Message text', TS, 220, DOx),
                'LOG_NO' => fi('LOG_NO', 'Log Number', TS, 20, DOx),
                'LOG_MSG_NO' => fi('LOG_MSG_NO', 'Message Number', TS, 6, DOx),
                'MESSAGE_V1' => fi('MESSAGE_V1', 'Message Variable', TS, 50, DOx),
                'MESSAGE_V2' => fi('MESSAGE_V2', 'Message Variable', TS, 50, DOx),
                'MESSAGE_V3' => fi('MESSAGE_V3', 'Message Variable', TS, 50, DOx),
                'MESSAGE_V4' => fi('MESSAGE_V4', 'Message Variable', TS, 50, DOx)
            }
        ),
        'PS_CREDIT_ACCOUNT_DETAIL_ALL' => new overcast.TypeInfo('PS_CREDIT_ACCOUNT_DETAIL_ALL', '1010/GetDetail', SS, DOx,
            new Map<String, overcast.FieldInfo> {
                'CRED_LIMIT' => fi('CRED_LIMIT', 'Credit limit', TDC, 23,4, DOx),
                'CRED_ACCNT' => fi('CRED_ACCNT', 'Credit account', TS, 10, DOx),
                'RCVBL_VALS' => fi('RCVBL_VALS', 'Receivables', TDC, 23,4, DOx),
                'CRED_LIAB' => fi('CRED_LIAB', 'Credit exposure', TDC, 23,4, DOx),
                'CURRENCY_x' => fi('CURRENCY_x', 'Currency', TS, 5, DOx),
                'RISK_CATEG' => fi('RISK_CATEG', 'Risk category', TS, 3, DOx),
                'BLOCKED' => fi('BLOCKED', 'Blocked', TS, 1, DOx),
                'NXT_REVIEW' => fi('NXT_REVIEW', 'Next int.review', TD, 8, DOx),
                'SECURED_ITEMS' => fi('SECURED_ITEMS', 'Sec.receivables', TDC, 23,4, DOx),
                'DATA_TOO_OLD' => fi('DATA_TOO_OLD', 'Data too old', TS, 1, DOx),
                'DATA_NOT_FOUND' => fi('DATA_NOT_FOUND', 'Indicator: Data cannot be determined', TS, 1, DOx),
                'AGING_IN_DAYS' => fi('AGING_IN_DAYS', 'Days', TS, 2, DOx),
                'AGING_IN_HOURS' => fi('AGING_IN_HOURS', 'Hours', TS, 2, DOx),
                'ORDER_VALS' => fi('ORDER_VALS', 'Sales value', TDC, 15,2, DOx),
                'TOTAL_LIABILITIES' => fi('TOTAL_LIABILITIES', 'Credit exposure', TDC, 15,2, DOx)
            }
        )
    };
}